{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login.service.ts","./src/app/material-design/material-design.module.ts","./src/app/models/project.ts","./src/app/models/projectuser.ts","./src/app/models/task.ts","./src/app/models/user.ts","./src/app/project-components/project-form/project-form.component.ts","./src/app/project-components/project-form/project-form.component.html","./src/app/project-components/project-list/project-list.component.ts","./src/app/project-components/project-list/project-list.component.html","./src/app/project-components/project-modal/project-modal.component.ts","./src/app/project-components/project-modal/project-modal.component.html","./src/app/project-user.service.ts","./src/app/project.service.ts","./src/app/routing-pages/homepage/homepage.component.ts","./src/app/routing-pages/homepage/homepage.component.html","./src/app/routing-pages/list-page/list-page.component.ts","./src/app/routing-pages/list-page/list-page.component.html","./src/app/routing-pages/select-page/select-page.component.ts","./src/app/routing-pages/select-page/select-page.component.html","./src/app/selection-components/selection-coming/selection-coming.component.ts","./src/app/selection-components/selection-coming/selection-coming.component.html","./src/app/selection-components/selection-form/selection-form.component.ts","./src/app/selection-components/selection-form/selection-form.component.html","./src/app/selection-components/selection-list/selection-list.component.ts","./src/app/selection-components/selection-list/selection-list.component.html","./src/app/task-components/task-form/task-form.component.ts","./src/app/task-components/task-form/task-form.component.html","./src/app/task-components/task-list/task-list.component.ts","./src/app/task-components/task-list/task-list.component.html","./src/app/task-components/task-modal/task-modal.component.ts","./src/app/task-components/task-modal/task-modal.component.html","./src/app/task.service.ts","./src/app/theme.service.ts","./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/app/user-components/user-login/user-login.component.ts","./src/app/user-components/user-login/user-login.component.html","./src/app/user-components/user-modal/user-modal.component.ts","./src/app/user-components/user-modal/user-modal.component.html","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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AEf;AACU;AACD;AACL;AACM;AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;;AAIrD,MAAM,OAAO,GAAU;IACrB,yEAAe;IACf,6EAAiB;IACjB,iEAAc;IACd,iFAAmB;IACnB,uEAAc;IACd,+EAAkB;IAClB,yEAAe;IACf,qEAAa;IACb,yEAAe;IACf,4DAAU;IACV,sEAAe;IACf,qEAAc;IACd,gEAAY;IACZ,sEAAe;IACf,qEAAgB;IAChB,iEAAc;IACd,+DAAa;IACb,qFAAqB;IACrB,uEAAc;IACd,oFAAoB;IACpB,yEAAe;IACf,sFAAqB;IACrB,qEAAa;IACb,6EAAiB;IACjB,uEAAc;IACd,2EAAgB;IAChB,iFAAmB;IACnB,yEAAe;IACf,2EAAgB;IAChB,+EAAkB;IAClB,8EAAiB;IACjB,qEAAa;IACb,uEAAc;IACd,qEAAa;IACb,qEAAa;IACb,2EAAmB,EAAE,uEAAe;IACpC,+EAAkB;IAClB,oFAAoB;IACpB,4FAAwB;IACxB,uEAAc;IACd,yEAAe;IACf,2EAAgB;IAChB,yEAAe;IACf,oFAAoB;IACpB,8EAAiB;IACjB,qEAAa;IACb,uEAAc;IACd,qEAAa;IACb,2EAAgB;IAChB,2EAAgB;IAChB,qEAAa;CAEd,CAAC;AAEF,sFAAsF;AAK/E,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAHtB,CAAC,GAAG,OAAO,CAAC;QAxDrB,yEAAe;QACf,6EAAiB;QACjB,iEAAc;QACd,iFAAmB;QACnB,uEAAc;QACd,+EAAkB;QAClB,yEAAe;QACf,qEAAa;QACb,yEAAe;QACf,4DAAU;QACV,sEAAe;QACf,qEAAc;QACd,gEAAY;QACZ,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sF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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomepageComponent } from './routing-pages/homepage/homepage.component';\r\nimport { SelectPageComponent } from './routing-pages/select-page/select-page.component';\r\nimport { ListPageComponent } from './routing-pages/list-page/list-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomepageComponent },\r\n  { path: 'select', component: SelectPageComponent},\r\n  { path: 'list', component: ListPageComponent }  \r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash:true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\nimport { ThemeService } from './theme.service';\r\nimport { Observable } from 'rxjs/';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  isDarkTheme: Observable<boolean>;\r\n\r\n  constructor(private themeService: ThemeService) { }\r\n\r\n  ngOnInit() {\r\n    this.isDarkTheme = this.themeService.isDarkTheme;\r\n  }\r\n}\r\n","<div [ngClass]=\"{'dark-theme': isDarkTheme | async}\">\r\n  <!--Toolbar-->\r\n  <app-toolbar></app-toolbar>\r\n  \r\n  <!--Site body-->  \r\n  <router-outlet></router-outlet>\r\n  \r\n  <!-- Footer -->\r\n  <footer class=\"footerClass\">\r\n    <mat-toolbar color=\"primary\" role=\"footer\">\r\n      <img src=\"../favicon.ico\" alt=\"Pie\" style=\"padding-right:10px\">\r\n      <p> Productivity</p>\r\n      <span class=\"nav-spacer\"></span>\r\n      <p class=\"mat-small\">\r\n        Uses Angular Material by Google\r\n        <br>\r\n        <a _ngcontent-fps-c54=\"\" href=\"https://github.com/angular/components/blob/master/LICENSE\"> Licensed under an MIT-style License.</a>\r\n      </p>\r\n    </mat-toolbar>\r\n  </footer>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { TaskListComponent} from './task-components/task-list/task-list.component';\r\nimport { TaskFormComponent } from './task-components/task-form/task-form.component';\r\nimport { ProjectListComponent} from './project-components/project-list/project-list.component';\r\nimport { ProjectFormComponent } from './project-components/project-form/project-form.component';\r\nimport {MaterialDesignModule} from './material-design/material-design.module';\r\nimport { SelectionFormComponent } from './selection-components/selection-form/selection-form.component';\r\nimport { SelectionListComponent } from './selection-components/selection-list/selection-list.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProjectModalComponent } from './project-components/project-modal/project-modal.component';\r\nimport { TaskModalComponent } from './task-components/task-modal/task-modal.component';\r\nimport { UserModalComponent } from './user-components/user-modal/user-modal.component';\r\nimport { UserLoginComponent } from './user-components/user-login/user-login.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { HomepageComponent } from './routing-pages/homepage/homepage.component';\r\nimport { SelectPageComponent } from './routing-pages/select-page/select-page.component';\r\nimport { ListPageComponent } from './routing-pages/list-page/list-page.component';\r\nimport { SelectionComingComponent } from './selection-components/selection-coming/selection-coming.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TaskListComponent,\r\n    TaskFormComponent,\r\n    ProjectListComponent,\r\n    ProjectFormComponent,    \r\n    SelectionFormComponent,\r\n    SelectionListComponent,\r\n    ProjectModalComponent,\r\n    TaskModalComponent,\r\n    UserModalComponent,\r\n    UserLoginComponent,\r\n    ToolbarComponent,\r\n    HomepageComponent,\r\n    SelectPageComponent,\r\n    ListPageComponent,\r\n    SelectionComingComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MaterialDesignModule,\r\n    NgbModule\r\n  ],\r\n  exports: [\r\n    MaterialDesignModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  globalLoginId: number;\r\n  _login = new Subject<boolean>();\r\n  isLogin = this._login.asObservable();\r\n\r\n  setLogin() {\r\n    this._login.next(this.globalLoginId != null && this.globalLoginId >=0);\r\n  }\r\n\r\n  getLogin(): Observable<boolean>{\r\n    return this.isLogin\r\n  }\r\n\r\n  private subject = new Subject<any>();\r\n\r\n  sendProject(projNum: number) {\r\n    this.subject.next({projNum: projNum})\r\n  }\r\n\r\n  getProject(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","// src/material-design/material-design.module.ts\r\nimport { NgModule } from '@angular/core';\r\n\r\n// import { MatButtonModule } from '@angular/material/button';\r\n// import { MatCheckboxModule } from '@angular/material/checkbox';\r\n// import { CdkTableModule } from '@angular/cdk/table';\r\n// import {MatDatepickerModule} from '@angular/material/datepicker';\r\n// import {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n// import {MatSelectModule} from '@angular/material/select'\r\n// import {MatIconModule} from '@angular/material/icon'\r\n// import {MatSliderModule} from '@angular/material/slider';\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n\r\n\r\nconst modules: any[] = [ \r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  CdkTableModule,\r\n  MatDatepickerModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatIconModule,\r\n  MatSliderModule,\r\n  A11yModule,\r\n  ClipboardModule,\r\n  DragDropModule,\r\n  PortalModule,\r\n  ScrollingModule,\r\n  CdkStepperModule,\r\n  CdkTableModule,\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatStepperModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule, MatRippleModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n  \r\n];\r\n\r\n// Declare Module that imports/exports the @angular/material modules needed in the app\r\n@NgModule({\r\n  imports: [...modules],\r\n  exports: [...modules]\r\n})\r\nexport class MaterialDesignModule {}","import { SpecialUser } from './specialUser';\r\n\r\nexport class Project {\r\n    id:number=0;\r\n    projectName: string;\r\n    deadline: Date;\r\n    users: SpecialUser[]= [];\r\n    duration: number;\r\n}\r\n","import { User } from './user';\r\nimport { Project } from './project';\r\n\r\nexport class ProjectUser {\r\n    project: Project;\r\n    user: User;\r\n}","import {Project} from './project';\r\nexport class Task{\r\n    id: number =0;\r\n    name: string;\r\n    duration: number;\r\n    description: string;\r\n    deadline: Date;\r\n    status: string = 'New';\r\n    project: Project;\r\n}","export class User {\r\n    id: number=0;\r\n    username: String;\r\n    password: String;\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport{ProjectService} from '../../project.service';\r\nimport {Project} from '../../models/project';\r\nimport {ProjectListComponent} from '../project-list/project-list.component';\r\nimport { ProjectModalComponent } from '../project-modal/project-modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { ThemeService } from '../../theme.service';\r\nimport { ProjectUser } from 'src/app/models/projectuser';\r\nimport { User } from 'src/app/models/user';\r\nimport { LoginService } from 'src/app/login.service';\r\n\r\n@Component({\r\n  selector: 'app-project-form',\r\n  templateUrl: './project-form.component.html',\r\n  styleUrls: ['./project-form.component.css'],\r\n  providers: [ProjectService]\r\n})\r\n\r\nexport class ProjectFormComponent implements OnInit {\r\n  \r\n  @Input()\r\n  projectList: ProjectListComponent;\r\n\r\n  projectUser = new ProjectUser();\r\n  userID:number;\r\n\r\n  theme: string;\r\n  \r\n  minDate: Date;\r\n  \r\n  constructor(private projectService: ProjectService, public dialog: MatDialog, private themeService: ThemeService, private loginService:LoginService) {\r\n    const currentDate: Date = new Date; currentDate.getDate();\r\n    this.minDate = currentDate;\r\n  }\r\n  \r\n  ngOnInit(){\r\n    this.userID = this.loginService.globalLoginId; \r\n    this.projectUser.project = new Project();\r\n    this.projectUser.user = new User();\r\n    this.projectUser.user.id=this.userID;\r\n  }\r\n  \r\n  public save() {\r\n    this.projectService.save(this.projectUser).subscribe(() => this.projectList.reloadAll());\r\n\r\n  }\r\n  \r\n  newProject() {\r\n    this.theme = this.themeService.currentActive();\r\n    this.userID = this.loginService.globalLoginId; \r\n    this.projectUser.user.id=this.userID;\r\n    const dialogRef = this.dialog.open(ProjectModalComponent, {\r\n      width: '50%',\r\n      data:{projectEdit: this.projectUser},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n      this.projectService.save(result).subscribe(() => this.projectList.reloadAll());\r\n      }\r\n      this.clear();\r\n    })\r\n  }\r\n  clear(){\r\n    this.projectUser.project.projectName = \"\";\r\n    this.projectUser.project.deadline = null;\r\n    this.projectUser.project.duration = null; \r\n    this.projectUser.user.id=this.userID;\r\n  }  \r\n}\r\n","<button mat-flat-button color=\"primary\" (click)=\"newProject()\">Add New Project</button>","import {Component, OnInit, Input, AfterContentInit} from '@angular/core';\r\nimport{Project} from '../../models/project';\r\nimport{ProjectService} from '../../project.service';\r\nimport{ProjectModalComponent} from '../project-modal/project-modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { SelectionFormComponent } from '../../selection-components/selection-form/selection-form.component';\r\nimport { ThemeService } from '../../theme.service';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from 'src/app/login.service';\r\nimport { Task } from 'src/app/models/task';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { ProjectUser } from 'src/app/models/projectuser';\r\nimport { User } from 'src/app/models/user';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\n\r\nexport interface ProjectModalData {\r\n  projectEdit: Project;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-project-list',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.css'],\r\n  providers: [ProjectService]\r\n})\r\n\r\nexport class ProjectListComponent implements OnInit, AfterContentInit {\r\n  projects: Project[];\r\n  theme:string;\r\n  tasks:Task[]; \r\n  tempUser:ProjectUser;\r\n  users:User[];\r\n  \r\n  //selectedProjects: Array<Project> = [];\r\n  //projectSelected: Observable<any>;\r\n\r\n  userID : number;\r\n  \r\n  @Input()\r\n  projectUpdate:SelectionFormComponent\r\n  \r\n  constructor(private projectService: ProjectService, public dialog: MatDialog,private themeService: ThemeService, private projectUserService : ProjectUserService, private loginService:LoginService, private taskService:TaskService) {\r\n    this.projectService.findAll().subscribe(projects => this.projects = projects);\r\n    this.tasks; \r\n    this.taskService.findAll().subscribe(tasks => this.tasks = tasks);\r\n    this.tempUser;\r\n      }\r\n  \r\n  displayedColumns: string[] = ['projectName', 'deadline', 'actions'];\r\n  \r\n  ngOnInit(){\r\n    this.projects;\r\n    this.tasks;\r\n    this.projectUpdate;\r\n    this.tempUser;\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n    this.reloadAll();\r\n  }\r\n  \r\n  ngAfterContentInit(){\r\n    this.reloadAll();\r\n  }\r\n  \r\n  reloadAll(){\r\n    this.taskService.findAll().subscribe(tasks => this.tasks = tasks);\r\n    this.projectService.findAll().subscribe(projects => {\r\n      this.projects=projects;\r\n      let filter = new Array;\r\n      for (let indexp = 0; indexp < this.projects.length; indexp++){ \r\n        for (let indexu =0; indexu < this.projects[indexp].users.length; indexu++){\r\n          if (this.projects[indexp].users[indexu].user.id === this.userID){\r\n            filter.push(this.projects[indexp]);\r\n          }\r\n        }\r\n      }\r\n      this.projects = filter;\r\n      //this.projectUpdate.projects = filter\r\n      // this.durationCalc()\r\n    });\r\n  }\r\n  \r\n  delete(id: number) {\r\n    this.projectService.delete(id).subscribe(() => this.reloadAll());\r\n  }\r\n  \r\n  editProject(project: Project) {\r\n    this.theme = this.themeService.currentActive();\r\n    this.projectUserService.findAll().subscribe(projectUsers => {\r\n      let projectUser = projectUsers.find(projectUser=> projectUser.project.id===project.id && projectUser.user.id === this.userID)\r\n      const dialogRef = this.dialog.open(ProjectModalComponent, {\r\n        width: '50%',\r\n        data: {projectEdit : projectUser},\r\n        panelClass: this.theme,\r\n      });\r\n      \r\n      dialogRef.afterClosed().subscribe(result=>{\r\n        if(result!= null && result!=projectUser){\r\n          console.log(\"Triggered afterclose\");\r\n          this.projectService.patchProject(result.project.id, result.project).subscribe(() => this.reloadAll());\r\n        }\r\n      })\r\n    });\r\n  }\r\n  \r\n /*  selectProjects(IdProject){\r\n    this.selectedProjects = [];\r\n    \r\n    for (let index = 0; index < this.projects.length; index++){\r\n      if (this.projects[index].id == IdProject){\r\n        \r\n        this.selectedProjects.push(this.projects[index]);\r\n      }\r\n    }\r\n  } */\r\n\r\n  /* printingfunction(input){\r\n    console.log(\"print method called from the login service with selected project=\" + input)\r\n  } */\r\n\r\n\r\n  // duration function \r\n\r\n//   durationCalc(){\r\n\r\n//     var temp = 0;\r\n//     this.projects.forEach(projectLoop => {\r\n//       console.log(projectLoop.id)\r\n//       this.tasks.forEach(taskLoop => { \r\n//         if(projectLoop.id === taskLoop.project.id && taskLoop.status != \"Closed\"){\r\n//           console.log(\"Task belongs to this project: \" + taskLoop.id);\r\n//           temp += taskLoop.duration;\r\n//         }\r\n//       });\r\n//       this.tempUser.user = this.users[this.userID];\r\n//       this.tempUser.project = projectLoop;  \r\n//       this.projectService.patchProject(projectLoop.id, this.tempUser).subscribe( () => this.reloadAll())\r\n//     });\r\n//     this.tempUser = null;\r\n//   }\r\n}\r\n","<table mat-table [dataSource]=\"projects\">\r\n  <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n  <ng-container matColumnDef=\"projectName\">\r\n    <th mat-header-cell *matHeaderCellDef> Name </th>\r\n    <td mat-cell *matCellDef=\"let project\">\r\n      <ng-container > {{project.projectName}} </ng-container>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"deadline\">\r\n    <th mat-header-cell *matHeaderCellDef> Deadline </th>\r\n    <td mat-cell *matCellDef=\"let project\">\r\n      <ng-container > {{project.deadline}} </ng-container>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n    <td mat-cell *matCellDef=\"let project\">\r\n      <ng-container >\r\n        <button mat-raised-button color=\"primary\" (click)=\"editProject(project)\">Edit</button>        \r\n        <button mat-raised-button color=\"warn\" (click)=\"delete(project.id)\">Del</button>\r\n      </ng-container>\r\n    </td>\r\n  </ng-container>\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>","import { Component, OnInit, Inject, Input} from '@angular/core';\r\nimport{Project} from '../../models/project';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { ProjectUser } from 'src/app/models/projectuser';\r\n\r\nexport interface ProjectModalData {\r\n  projectEdit: ProjectUser;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-project-modal',\r\n  templateUrl: './project-modal.component.html',\r\n  styleUrls: ['./project-modal.component.css']\r\n})\r\nexport class ProjectModalComponent implements OnInit{\r\n  \r\n  @Input()\r\n  projectEdit: Project;\r\n\r\n  minDate: Date;\r\n  \r\n  constructor(public dialogRef: MatDialogRef<ProjectModalComponent>,@Inject(MAT_DIALOG_DATA) public data: ProjectModalData) {\r\n    const currentDate: Date = new Date; currentDate.getDate();\r\n    this.minDate = currentDate;\r\n  }\r\n\r\n  ngOnInit(){}\r\n}","<div mat-dialog-content>\r\n    <mat-form-field appearance=\"standard\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput required type=\"text\" [(ngModel)]=\"data.projectEdit.project.projectName\" name=\"projectName\">\r\n    </mat-form-field>     \r\n    <mat-form-field appearance=\"standard\">\r\n        <mat-label for=\"inputprojectdeadline\">Deadline</mat-label>\r\n        <input matInput required [min]=\"minDate\" [matDatepicker]=\"picker\" [(ngModel)]=\"data.projectEdit.project.deadline\" name=\"deadline\" >\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button color=\"primary\" mat-dialog-close>Cancel</button>\r\n    <ng-container *ngIf=\"data.projectEdit.project.projectName==null || data.projectEdit.project.deadline == null\">\r\n        <button mat-flat-button color=\"primary\" [disabled]=true>Save</button>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"data.projectEdit.project.projectName!=null && data.projectEdit.project.deadline != null\">\r\n        <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"data.projectEdit\">Save</button>\r\n    </ng-container>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport { ProjectUser } from './models/projectuser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectUserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  findAll(): Observable<ProjectUser[]>  {\r\n    return this.http.get<any>('/projectuser')\r\n  }\r\n\r\n  save(projectUser: ProjectUser) {\r\n    return this.http.post('/projectuser', projectUser)\r\n  }\r\n\r\n  delete(id:number) {\r\n    return this.http.delete('/projectuser/' + id)\r\n  }\r\n\r\n  //to edit the listing.\r\n  patchProject(id:number, projectUser:ProjectUser){\r\n    return this.http.patch('/projectuser/' + id, projectUser)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Project} from './models/project';\r\nimport { ProjectUser } from './models/projectuser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  findAll(): Observable<Project[]>  {\r\n    return this.http.get<any>('/project')\r\n  }\r\n\r\n  save(projectUser: ProjectUser) {\r\n    return this.http.post('/project', projectUser)\r\n  }\r\n\r\n  delete(id:number) {\r\n    return this.http.delete('/project/' + id)\r\n  }\r\n\r\n  //to edit the listing.\r\n  patchProject(id:number, project:Project){\r\n    return this.http.patch('/project/' + id, project)\r\n  }\r\n}\r\n","import { Component, OnInit, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  } \r\n\r\n  setStorage(){\r\n    console.log(\"enter set\");\r\n    sessionStorage.setItem('key', '1')\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"mat-app-background basic-container center\">\r\n    <mat-card>\r\n        <h1 class=\"mat-h1\">Welcome to the Pie Productivity App!</h1>\r\n        <h2 class=\"mat-h2\">A productivity app built for the YER Talent Development Programme by Edwin Bolt, Inge van Haaften and Pieter van der Scheer.</h2>\r\n        <br><br>\r\n        <app-user-login></app-user-login>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {LoginService} from '../../login.service';\r\n\r\n@Component({\r\n  selector: 'app-list-page',\r\n  templateUrl: './list-page.component.html',\r\n  styleUrls: ['./list-page.component.css']\r\n})\r\nexport class ListPageComponent implements OnInit {\r\n\r\n  user: number;\r\n\r\n  projectIdUser: number;\r\n\r\n  constructor(public loginService:LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectIdUser = this.loginService.globalLoginId\r\n  }\r\n\r\n}\r\n","<!--Task Selection Component-->\r\n<div class=\"mat-app-background basic-container\">\r\n  <mat-card id=\"Tabbed lists\">\r\n    <mat-tab-group>\r\n      <mat-tab label=\"Projects\">\r\n        <div><app-project-form [projectList] = 'projectComp'></app-project-form></div>\r\n        <div><app-project-list #projectComp></app-project-list></div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Tasks\">\r\n        <app-task-form [taskList] = 'taskComp'></app-task-form>\r\n        <app-task-list #taskComp></app-task-list>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select-page',\r\n  templateUrl: './select-page.component.html',\r\n  styleUrls: ['./select-page.component.css']\r\n})\r\nexport class SelectPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--Task Selection Component-->\r\n<div class=\"mat-app-background basic-container\">\r\n    <mat-card id=\"ComingUp\">\r\n        <mat-card-title>Tasks Coming-up</mat-card-title>\r\n        <app-selection-coming></app-selection-coming>\r\n    </mat-card>\r\n    <br>\r\n    <mat-card id=\"SelectionComponent\">\r\n        <mat-card-title>Task selection</mat-card-title>\r\n        <app-selection-form [list]=selectionComp></app-selection-form>\r\n        <app-selection-list #selectionComp></app-selection-list>\r\n    </mat-card>\r\n</div>","import { Component, OnInit} from '@angular/core';\r\nimport {Task} from '../../models/task'\r\nimport {TaskService} from '../../task.service';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TaskModalComponent } from '../../task-components/task-modal/task-modal.component';\r\nimport { ThemeService } from 'src/app/theme.service';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-selection-coming',\r\n  templateUrl: './selection-coming.component.html',\r\n  styleUrls: ['./selection-coming.component.css'],\r\n  providers:  [TaskService],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class SelectionComingComponent implements OnInit {\r\n\r\n  tasks: Task[];\r\n  displayedColumns: string[] = ['name', 'project.projectName','duration', 'status', 'actions'];\r\n  comingupTasks:Task[];\r\n  expandedElement: Task | null;\r\n  theme:string;\r\n  userID: number;\r\n  projectIDs : number[];\r\n\r\n  constructor(private taskService: TaskService, public dialog: MatDialog,private themeService: ThemeService, private projectUserService:ProjectUserService) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.reloadAll()\r\n  }\r\n\r\n\r\n  // let comingupfilteredTasks = this.tasks.sort((a, b) => (a.deadline > b.deadline) ? 1 : -1);\r\n          // this.comingupTasks = comingupfilteredTasks.slice(0,4)\r\n\r\n reloadAll() {\r\n    this.projectUserService.findAll().subscribe(projectUsers => {\r\n      let filterP = new Array;\r\n      for(let i=0; i<projectUsers.length; i++){\r\n        // console.log(\"User Id list printout: \" + projectUsers[i].user.id)\r\n        if(projectUsers[i].user.id===this.userID){\r\n          filterP.push(projectUsers[i].project.id);\r\n        }\r\n      }\r\n      this.projectIDs = filterP;\r\n      //filter all tasks to projects connected to the current user\r\n      this.taskService.findAll().subscribe(tasks => {\r\n        this.tasks=tasks;\r\n        let filter = new Array;\r\n        for (let i = 0; i < this.tasks.length; i++){\r\n          console.log(\"printing task loop: \" + i)\r\n          console.log(\"printing tasks: \" + this.tasks[i].project.id)\r\n          if (this.projectIDs.includes(this.tasks[i].project.id)){\r\n            filter.push(this.tasks[i]);\r\n          }\r\n        }\r\n        this.tasks = filter;\r\n        console.log(\"Reaching the task setting part of the loop\")\r\n      });\r\n    });\r\n  }\r\n\r\n  \r\n  delete(id: number) {\r\n    this.taskService.delete(id).subscribe(() => this.reloadAll());\r\n  }\r\n\r\n  startTask(startedTask: Task){\r\n    startedTask.status=\"Started\";\r\n    this.taskService.patchTask(startedTask.id, startedTask).subscribe(() => this.reloadAll());\r\n\r\n  }\r\n\r\n  closeTask(closedTask: Task){\r\n    closedTask.status=\"Closed\";\r\n    this.taskService.patchTask(closedTask.id, closedTask).subscribe(() => this.reloadAll());\r\n\r\n  }\r\n  \r\n  editTask(task: Task) {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(TaskModalComponent, {\r\n      width: '50%',\r\n      data: {taskEdit : task},\r\n      panelClass: this.theme\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      this.taskService.patchTask(result.id, result).subscribe(() => this.reloadAll());\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<table mat-table [dataSource]=\"this.tasks\">\r\n    <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n    <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef> ID </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell >{{task.id}} </td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.name}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"project.projectName\">\r\n        <th mat-header-cell *matHeaderCellDef> Project Name </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell > {{task.project.projectName}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"duration\">\r\n        <th mat-header-cell *matHeaderCellDef> Duration (min.) </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.duration}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef> Description </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.description}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef> Status </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.status}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>\r\n                <ng-container *ngIf=\"task.status == 'New'\">\r\n                    <button mat-raised-button color=\"accent\" (click)=\"startTask(task)\">Start</button>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"task.status == 'Started'\">\r\n                    <button mat-raised-button color=\"accent\" (click)=\"closeTask(task)\">Close</button>\r\n                </ng-container>\r\n                <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>        \r\n                <button mat-raised-button color=\"warn\" (click)=\"delete(task.id)\">Del</button>\r\n                <!-- /ng-container -->\r\n            </td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>","import { Component, OnInit,Input } from '@angular/core';\r\nimport{Selection} from '../../models/selection';\r\nimport {SelectionListComponent} from '../selection-list/selection-list.component';\r\nimport {Task} from '../../models/task'\r\nimport { TaskService } from '../../task.service';\r\nimport { Project } from '../../models/project';\r\nimport { ProjectService } from '../../project.service';\r\nimport {LoginService} from '../../login.service'\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\n@Component({\r\n  selector: 'app-selection-form',\r\n  templateUrl: './selection-form.component.html',\r\n  styleUrls: ['./selection-form.component.css'],\r\n  providers: [TaskService]\r\n})\r\nexport class SelectionFormComponent implements OnInit {\r\n  \r\n  @Input()\r\n  list:SelectionListComponent\r\n  \r\n  projectNumber: number;\r\n  timeWindow: number;\r\n  \r\n  projects: Project[];\r\n  filteredProjects: Project[];\r\n  tasks: Task[];\r\n  \r\n  important: Task[];\r\n  \r\n  userID: number;\r\n  user: User;\r\n  \r\n  constructor(private projectService: ProjectService, private taskService:TaskService, /* public userService : UserService */) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.projects;\r\n    this.filteredProjects;\r\n    this.projectNumber;\r\n    this.timeWindow;\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n    //this.userService.findAll().subscribe(users =>{this.user=users.find(user => user.id === this.userID)});\r\n    this.reloadAll();\r\n    this.priority();\r\n  }\r\n  \r\n  reloadAll(){\r\n    this.projectService.findAll().subscribe(projects => {\r\n      this.projects=projects;\r\n      let filter = new Array;\r\n      for (let indexp = 0; indexp < this.projects.length; indexp++){\r\n        for (let indexu =0; indexu < this.projects[indexp].users.length; indexu++){\r\n          if (this.projects[indexp].users[indexu].user.id === this.userID){\r\n            filter.push(this.projects[indexp]);\r\n          }\r\n        }\r\n      }\r\n      this.filteredProjects = filter;\r\n    });\r\n  }\r\n  \r\n  priority(){\r\n    this.taskService.findAll().subscribe(tasks => {\r\n      this.important = tasks.sort((a, b) => (a.deadline > b.deadline) ? 1 : -1);\r\n      this.important = this.important.slice(0,2);\r\n    });\r\n  }\r\n  \r\n  clear(){\r\n    this.list.selectedProjectID = this.projectNumber;\r\n    this.list.selectedTimeWindow = this.timeWindow;\r\n    this.projectNumber = 0;\r\n    this.timeWindow = null;\r\n    this.list.reloadAll();\r\n  }\r\n  \r\n  delete(){\r\n    this.list.selectedProjectID = 0;\r\n    this.list.selectedTimeWindow = 0;\r\n    this.list.reloadAll();\r\n  }\r\n  \r\n}\r\n","<form >\r\n  <mat-form-field>\r\n    <mat-label>Project</mat-label>\r\n    <mat-select mat-select [(value)]=\"this.projectNumber\">\r\n        <mat-option *ngFor=\"let project of filteredProjects\" [(value)]=\"project.id\" >\r\n          {{project.projectName}}\r\n        </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>Time window</mat-label>\r\n    <mat-select [(value)]=\"this.timeWindow\">\r\n      <mat-option value=\"1000\">None</mat-option>\r\n      <mat-option value=\"5\">5 min.</mat-option>\r\n      <mat-option value=\"10\">10 min.</mat-option>\r\n      <mat-option value=\"15\">15 min.</mat-option>\r\n      <mat-option value=\"30\">30 min.</mat-option>\r\n      <mat-option value=\"45\">45 min.</mat-option>\r\n      <mat-option value=\"60\">60 min.</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <button mat-raised-button color=\"primary\" (click)= \"clear()\">Select</button>\r\n  <button mat-raised-button color=\"primary\" (click)= \"delete()\">Clear</button>\r\n</form>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit} from '@angular/core';\r\nimport {Task} from '../../models/task'\r\nimport {TaskService} from '../../task.service';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TaskModalComponent } from '../../task-components/task-modal/task-modal.component';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\nimport { ThemeService } from 'src/app/theme.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-selection-list',\r\n  templateUrl: './selection-list.component.html',\r\n  styleUrls: ['./selection-list.component.css'],\r\n  providers:  [TaskService],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class SelectionListComponent implements OnInit {\r\n  userID: number;\r\n  projectIDs : number[];\r\n  tasks: Task[];\r\n  displayedColumns: string[] = ['name', 'project.projectName','duration', 'status', 'actions'];\r\n  newTasks:Task[];\r\n  startedTasks:Task[];\r\n  comingupTasks:Task[];\r\n  selectedTasks: Array<Task> = [];\r\n  columnsToDisplay = ['name','duration', 'deadline', 'status'];\r\n  expandedElement: Task | null;\r\n  selectedProjectID: number;\r\n  selectedTimeWindow: number;\r\n  theme:string;\r\n\r\n  constructor(private taskService: TaskService, public dialog: MatDialog,private themeService: ThemeService, private projectUserService : ProjectUserService) { }\r\n\r\n  ngOnInit() {\r\n    this.reloadAll()\r\n    this.projectIDs;\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n  }\r\n\r\n  reloadAll() {\r\n    this.taskService.findAll().subscribe(tasks => {\r\n      // Stukje code dat filtered en sorteerd voor new\r\n      \r\n      let newfilteredTasks = tasks.filter(task => task.project.id === this.selectedProjectID );\r\n      newfilteredTasks = newfilteredTasks.filter(task => task.duration <= this.selectedTimeWindow);\r\n      newfilteredTasks = newfilteredTasks.filter(task => task.status === \"New\");\r\n      newfilteredTasks.sort((a, b) => (a.duration > b.duration) ? 1 : -1);\r\n      newfilteredTasks.sort((a, b) => (a.deadline > b.deadline) ? 1 : -1);\r\n\r\n      this.newTasks = newfilteredTasks/* .slice(0,4) */\r\n\r\n      // Stukje code dat filtered en sorteerd voor started\r\n      let startedfilteredTasks = tasks.filter(task => task.project.id === this.selectedProjectID );\r\n      startedfilteredTasks = startedfilteredTasks.filter(task => task.duration <= this.selectedTimeWindow);\r\n      startedfilteredTasks = startedfilteredTasks.filter(task => task.status === \"Started\");\r\n      startedfilteredTasks.sort((a, b) => (a.duration > b.duration) ? 1 : -1);\r\n      startedfilteredTasks.sort((a, b) => (a.deadline > b.deadline) ? 1 : -1);\r\n\r\n      this.startedTasks = startedfilteredTasks/* .slice(0,4) */\r\n\r\n    });\r\n  }\r\n\r\n  \r\n  delete(id: number) {\r\n    this.taskService.delete(id).subscribe(() => this.reloadAll());\r\n  }\r\n\r\n  startTask(startedTask: Task){\r\n    startedTask.status=\"Started\";\r\n    this.taskService.patchTask(startedTask.id, startedTask).subscribe(() => this.reloadAll());\r\n\r\n  }\r\n\r\n  closeTask(closedTask: Task){\r\n    closedTask.status=\"Closed\";\r\n    this.taskService.patchTask(closedTask.id, closedTask).subscribe(() => this.reloadAll());\r\n\r\n  }\r\n  \r\n  editTask(task: Task) {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(TaskModalComponent, {\r\n      width: '50%',\r\n      data: {taskEdit : task},\r\n      panelClass: this.theme\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      this.taskService.patchTask(result.id, result).subscribe(() => this.reloadAll());\r\n    })\r\n  }\r\n\r\n}\r\n"," <mat-card id=\"Tabbed lists\">\r\n  <mat-tab-group>  \r\n    <!--Start of the nested table that shows the tasks with status new-->\r\n    <mat-tab label=\"New\">\r\n      <table mat-table [dataSource]=\"newTasks\">\r\n        <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n        <ng-container matColumnDef=\"id\">\r\n          <th mat-header-cell *matHeaderCellDef> ID </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell >{{task.id}} </td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.name}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"project.id\">\r\n          <th mat-header-cell *matHeaderCellDef> Project ID </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell >{{task.project.id}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"project.projectName\">\r\n          <th mat-header-cell *matHeaderCellDef> Project Name </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell > {{task.project.projectName}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"duration\">\r\n          <th mat-header-cell *matHeaderCellDef> Duration </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.duration}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"description\">\r\n          <th mat-header-cell *matHeaderCellDef> Description </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.description}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef> Status </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.status}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>\r\n              <ng-container *ngIf=\"task.status == 'New'\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"startTask(task)\">Start</button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"task.status == 'Started'\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"closeTask(task)\">Close</button>\r\n              </ng-container>\r\n              <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>        \r\n              <button mat-raised-button color=\"warn\" (click)=\"delete(task.id)\">Del</button>\r\n              <!-- /ng-container -->\r\n            </td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-tab>\r\n    <!--Start of the nested table that shows the tasks with status started-->\r\n    <mat-tab label=\"Started\">\r\n      <table mat-table [dataSource]=\"startedTasks\">\r\n        <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.name}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"project.projectName\">\r\n          <th mat-header-cell *matHeaderCellDef> Project Name </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell > {{task.project.projectName}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"duration\">\r\n          <th mat-header-cell *matHeaderCellDef> Duration (min.)</th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.duration}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"description\">\r\n          <th mat-header-cell *matHeaderCellDef> Description </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.description}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef> Status </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.status}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>\r\n              <ng-container *ngIf=\"task.status == 'New'\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"startTask(task)\">Start</button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"task.status == 'Started'\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"closeTask(task)\">Close</button>\r\n              </ng-container>\r\n              <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>        \r\n              <button mat-raised-button color=\"warn\" (click)=\"delete(task.id)\">Del</button>\r\n              <!-- /ng-container -->\r\n            </td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TaskService } from '../../task.service';\r\nimport { TaskListComponent } from '../task-list/task-list.component';\r\nimport { Task } from '../../models/task';\r\nimport {Project} from '../../models/project';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { TaskModalComponent } from '../task-modal/task-modal.component';\r\nimport { ThemeService } from '../../theme.service';\r\n\r\n@Component({\r\n  selector: 'app-task-form',\r\n  templateUrl: './task-form.component.html',\r\n  styleUrls: ['./task-form.component.css'],\r\n  providers: [TaskService]\r\n})\r\nexport class TaskFormComponent implements OnInit {\r\n  \r\n  @Input()\r\n  taskList:TaskListComponent;\r\n  minDate: Date;\r\n  task = new Task();\r\n  theme:string;\r\n  \r\n  constructor(private taskService:TaskService, public dialog: MatDialog, private themeService: ThemeService) {\r\n    const currentDate: Date = new Date; currentDate.getDate();\r\n    this.minDate = currentDate; \r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.task.project = new Project();\r\n  }\r\n  \r\n  public save(){\r\n    this.taskService.save(this.task).subscribe(() => this.taskList.reloadAll());\r\n  }\r\n  \r\n  newTask() {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(TaskModalComponent, {\r\n      width: '50%',\r\n      data:{taskEdit: this.task},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n        this.taskService.save(result).subscribe(() => {\r\n          this.taskList.reloadAll();\r\n          this.clear();\r\n        });\r\n      }\r\n    })\r\n  }\r\n  \r\n  clear(){\r\n    this.task.name = \"\";\r\n    this.task.project = new Project;\r\n    this.task.duration = null; \r\n    this.task.description = \"\";\r\n    this.task.deadline = null;\r\n  }\r\n}\r\n","<button mat-flat-button color=\"primary\" (click)=\"newTask()\" >Add New Task</button> ","import {Component, OnInit, AfterContentInit} from '@angular/core';\r\nimport {Task} from '../../models/task';\r\nimport {TaskService} from '../../task.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { TaskModalComponent } from '../task-modal/task-modal.component';\r\nimport { ThemeService } from '../../theme.service';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\n\r\nexport interface TaskModalData {\r\n  taskEdit: Task;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.css'],\r\n  providers:  [TaskService]\r\n})\r\n\r\n\r\nexport class TaskListComponent implements OnInit, AfterContentInit {\r\n  userID: number;\r\n  projectIDs : number[];\r\n  tasks: Task[];\r\n  theme:string;\r\n  tempTasks:  Array<Task> = [];\r\n  tempTask: Task;\r\n  temp:number;\r\n  duration:number;\r\n  displayedColumns: string[] = ['name', 'project.projectName','duration','description','status', 'actions'];\r\n  \r\n  constructor(private taskService: TaskService, public dialog: MatDialog, private themeService: ThemeService, private projectUserService : ProjectUserService) {\r\n    this.reloadAll();    \r\n    this.duration =0;\r\n    this.temp = 0;\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n    this.projectIDs;\r\n    this.tasks;\r\n    this.tempTasks;\r\n    this.reloadAll();\r\n    \r\n  }\r\n  \r\n  ngAfterContentInit(){\r\n    this.reloadAll();\r\n  }\r\n  \r\n  reloadAll() {\r\n    this.projectUserService.findAll().subscribe(projectUsers => {\r\n      let filterP = new Array;\r\n      for(let i=0; i<projectUsers.length; i++){\r\n        if(projectUsers[i].user.id===this.userID){\r\n          filterP.push(projectUsers[i].project.id);\r\n        }\r\n      }\r\n      this.projectIDs = filterP;\r\n      //filter all tasks to projects connected to the current user\r\n      this.taskService.findAll().subscribe(tasks => {\r\n        this.tasks=tasks;\r\n        let filter = new Array;\r\n        for (let i = 0; i < this.tasks.length; i++){\r\n          if (this.projectIDs.includes(this.tasks[i].project.id)){\r\n            filter.push(this.tasks[i]);\r\n          }\r\n        }\r\n        this.tasks = filter;\r\n        this.durationCalc(this.tasks);\r\n        console.log(\"the total duration of all the tasks= \" + this.duration)\r\n      });\r\n    });\r\n  }\r\n  \r\n  delete(id: number) {\r\n    this.taskService.delete(id).subscribe(() => this.reloadAll());\r\n  }\r\n  \r\n  startTask(startedTask: Task){\r\n    startedTask.status=\"Started\";\r\n    this.taskService.patchTask(startedTask.id, startedTask).subscribe(() => this.reloadAll());\r\n  }\r\n  \r\n  closeTask(closedTask: Task){\r\n    closedTask.status=\"Closed\";\r\n    this.taskService.patchTask(closedTask.id, closedTask).subscribe(() => this.reloadAll());\r\n    \r\n  }\r\n  \r\n  editTask(task: Task) {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(TaskModalComponent, {\r\n      width: '50%',\r\n      data: {taskEdit : task},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n        this.taskService.patchTask(result.id, result).subscribe(() => this.reloadAll());\r\n      }\r\n    })\r\n  }\r\n  \r\n  durationCalc(selectedTasks:Array<Task>){\r\n    this.tempTasks = this.tasks.filter(task => task.status === \"New\");\r\n    this.tempTasks = this.tempTasks.filter(task => task.status === \"Started\");\r\n    selectedTasks.forEach(element => {\r\n      this.temp += element.duration\r\n    });\r\n    \r\n    this.duration = this.temp;\r\n    this.temp =0;\r\n  }\r\n}","<!-- <button (click)=\"selectTasks(userIdProject)\">select</button>\r\n --><table mat-table [dataSource]=\"tasks\">\r\n  <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef> Name </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>{{task.name}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"project.projectName\">\r\n    <th mat-header-cell *matHeaderCellDef> Project Name </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell > {{task.project.projectName}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"duration\">\r\n    <th mat-header-cell *matHeaderCellDef> Duration (min.) </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>{{task.duration}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"description\">\r\n    <th mat-header-cell *matHeaderCellDef> Description </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>{{task.description}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"status\">\r\n    <th mat-header-cell *matHeaderCellDef> Status </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>{{task.status}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>\r\n        <ng-container *ngIf=\"task.status == 'New'\">\r\n          <button mat-raised-button color=\"accent\" (click)=\"startTask(task)\">Start</button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"task.status == 'Started'\">\r\n          <button mat-raised-button color=\"accent\" (click)=\"closeTask(task)\">Close</button>\r\n        </ng-container>\r\n        <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>        \r\n        <button mat-raised-button color=\"warn\" (click)=\"delete(task.id)\">Del</button>\r\n        <!-- /ng-container -->\r\n      </td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n\r\n<br> \r\n<h4>The total duration of all new and started tasks combined is: {{this.duration}} min.</h4>","import { Component, OnInit, Inject, Input} from '@angular/core';\r\nimport { Task } from '../../models/task';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Project } from '../../models/project';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\n\r\n\r\nexport interface TaskModalData {\r\n  taskEdit: Task;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-task-modal',\r\n  templateUrl: './task-modal.component.html',\r\n  styleUrls: ['./task-modal.component.css']\r\n})\r\nexport class TaskModalComponent implements OnInit {\r\n  \r\n  projects: Project[];\r\n  @Input()\r\n  taskEdit: Task;\r\n  minDate: Date;\r\n  userID : number;\r\n  \r\n  constructor(public dialogRef: MatDialogRef<TaskModalComponent>,@Inject(MAT_DIALOG_DATA) public data: TaskModalData, private projectUserService: ProjectUserService) {\r\n    const currentDate: Date = new Date; currentDate.getDate();\r\n    this.minDate = currentDate;\r\n  }\r\n  \r\n  ngOnInit(){\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n    this.projects;\r\n    this.reloadAll();\r\n  }\r\n  \r\n  reloadAll(){\r\n    this.projectUserService.findAll().subscribe(projectUsers => {\r\n      let filterP = new Array;\r\n      for(let i=0; i<projectUsers.length; i++){\r\n        if(projectUsers[i].user.id===this.userID){\r\n          filterP.push(projectUsers[i].project);\r\n        }\r\n      }\r\n      this.projects = filterP;\r\n    });\r\n  } \r\n}\r\n","<div mat-dialog-content>\r\n    <div>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput required type=\"text\" [(ngModel)]=\"data.taskEdit.name\" name=\"taskName\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Project</mat-label>\r\n            <mat-select required mat-select [(value)]=\"data.taskEdit.project.id\">\r\n                <mat-option *ngFor=\"let project of projects\" [value]=\"project.id\">\r\n                    {{project.projectName}} \r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Duration</mat-label>\r\n            <mat-select mat-select  [(value)]=\"data.taskEdit.duration\" required>\r\n                <mat-option [value]=\"5\">5 min.</mat-option>\r\n                <mat-option [value]=\"10\">10 min.</mat-option>\r\n                <mat-option [value]=\"15\">15 min.</mat-option>\r\n                <mat-option [value]=\"30\">30 min.</mat-option>\r\n                <mat-option [value]=\"45\">45 min.</mat-option>\r\n                <mat-option [value]=\"60\">60 min.</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label for=\"inputprojectdeadline\">Deadline</mat-label>\r\n            <input matInput required [min]=\"minDate\" [matDatepicker]=\"picker\" [(ngModel)]=\"data.taskEdit.deadline\" name=\"deadline\" >\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100%;\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea rows=\"10\" matInput required [(ngModel)]=\"data.taskEdit.description\" name=\"description\"></textarea>\r\n        </mat-form-field>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-flat-button color=\"primary\" mat-dialog-close>Cancel</button>\r\n    <ng-container *ngIf=\"data.taskEdit.name == null\r\n    || data.taskEdit.project.id == null\">\r\n    <button mat-flat-button color=\"primary\" [disabled]=\"true\" >Save</button></ng-container>\r\n    \r\n    <ng-container *ngIf=\"data.taskEdit.name != null\r\n    && data.taskEdit.project.id != null\">\r\n    <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"data.taskEdit\" >Save</button>\r\n</ng-container>\r\n</div>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Task} from './models/task';\r\nimport {Project} from './models/project';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  findAll(): Observable<Task[]>  {\r\n    return this.http.get<any>('/task')\r\n  }\r\n  \r\n  save(task: Task) {\r\n    return this.http.post('/task', task)\r\n  }\r\n  \r\n  delete(id) {\r\n    return this.http.delete('/task/' + id)\r\n  }\r\n  \r\n  //to edit the listing.\r\n  patchTask(id:number, task:Task){\r\n    return this.http.patch('/task/' + id, task)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  \r\n  _darkTheme = new Subject<boolean>();\r\n  isDarkTheme = this._darkTheme.asObservable();\r\n  theme: string;\r\n  \r\n  setDarkTheme(isDarkTheme: boolean) {\r\n    this._darkTheme.next(isDarkTheme);\r\n    if(isDarkTheme){this.theme=\"dark-theme\"}else{this.theme=\"\"};\r\n  }\r\n\r\n  currentActive(){\r\n    return this.theme\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ThemeService } from '../theme.service';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  \r\n  isDarkTheme: Observable<boolean>;\r\n  isLogin: boolean;\r\n  \r\n  constructor( private themeService: ThemeService, private loginService: LoginService) { }\r\n  \r\n  ngOnInit() {\r\n    this.isDarkTheme = this.themeService.isDarkTheme;\r\n    this.loginService.setLogin();\r\n    this.loginService.getLogin().subscribe(isLogin => this.isLogin = isLogin) \r\n    this.checkLogin()\r\n  }\r\n  \r\n  toggleDarkTheme(checked: boolean) {\r\n    this.themeService.setDarkTheme(checked) ;\r\n    this.isDarkTheme = this.themeService.isDarkTheme;\r\n  }\r\n\r\n  checkLogin(){\r\n    if (parseInt(sessionStorage.getItem('loginId'))>0){\r\n      this.isLogin = true;\r\n    }else\r\n    this.isLogin = false;\r\n  }\r\n  \r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <span>Pie Productivity</span>\r\n    <button routerLink=\"/home\" mat-button aria-label=\"navigate to homepage\">Home</button>\r\n    <button routerLink=\"/select\" mat-button [disabled]=\"!isLogin\"  aria-label=\"navigate to project selector\">Select</button>\r\n    <button routerLink=\"/list\" mat-button [disabled]=\"!isLogin\" aria-label=\"navigate to lists\">Lists</button>\r\n    <span class=\"nav-spacer\"></span>\r\n    <mat-icon >wb_sunny</mat-icon>\r\n    <mat-slide-toggle [checked]=\"!isDarkTheme\" (change)=\"toggleDarkTheme($event.checked)\">  \r\n      <mat-icon >nights_stay</mat-icon>\r\n    </mat-slide-toggle> \r\n    <app-user-login></app-user-login>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport {User} from 'src/app/models/user';\r\nimport {UserService} from 'src/app/user.service';\r\nimport {UserModalComponent } from '../user-modal/user-modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { ThemeService } from 'src/app/theme.service';\r\nimport {LoginService} from 'src/app/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.css']\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n  \r\n  user = new User();\r\n  \r\n  LoginId: number\r\n  theme:string;\r\n  \r\n  logoutId:number = -1;\r\n  \r\n  isLogin:boolean;\r\n  \r\n  constructor(private userService:UserService, public dialog: MatDialog, private themeService: ThemeService, public loginService:LoginService, private router: Router) {}\r\n  \r\n  \r\n  ngOnInit(): void {\r\n    this.LoginId = parseInt(sessionStorage.getItem('loginId'));\r\n    this.logoutId; \r\n    this.loginService.getLogin().subscribe(isLogin => this.isLogin = isLogin)\r\n    if(this.LoginId > 0)\r\n    this.isLogin=true;\r\n    else\r\n    this.isLogin=false;\r\n    console.log(\"in onInit xxxx\" + this.isLogin);\r\n    \r\n  }\r\n  \r\n  //if register button has been pressed\r\n  newUser() {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(UserModalComponent, {\r\n      width: '50%',\r\n      data:{user: this.user, origin: \"register\"},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n        this.userService.save(result).subscribe();\r\n        this.userService.login(result).subscribe(answer=>{\r\n          //this.LoginId =  answer;\r\n          //this.loginService.globalLoginId = this.LoginId; \r\n          this.loginService.globalLoginId = answer; \r\n          \r\n          this.loginService.setLogin();\r\n          sessionStorage.setItem('loginId', answer.toString())\r\n          console.log(\"loginID = \" + this.loginService.globalLoginId);\r\n        });\r\n      }\r\n    })\r\n  }\r\n  \r\n  //if login button has been pressed.\r\n  loginUser() {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(UserModalComponent, {\r\n      width: '50%',\r\n      data:{user: this.user, origin: \"login\"},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n        this.userService.login(result).subscribe(answer=>{\r\n          //this.LoginId =  answer;\r\n          //this.loginService.globalLoginId = this.LoginId;\r\n          \r\n          sessionStorage.setItem('loginId', answer.toString())\r\n          this.LoginId = answer;\r\n          console.log(\"in login xxxx \" + this.isLogin);\r\n          \r\n          if (answer == -1){\r\n            alert(\"Login failed. Incorrect credentials\")\r\n          }\r\n          else{\r\n            this.router.navigate(['select'])\r\n            this.isLogin = true;\r\n            this.loginService.globalLoginId = answer;\r\n            this.loginService.setLogin(); \r\n            console.log(\"loginID = \" + this.loginService.globalLoginId);\r\n          }\r\n          this.send(); \r\n        });\r\n      }\r\n    })\r\n  }\r\n  \r\n  \r\n  logout(){\r\n    sessionStorage.setItem('loginId', this.logoutId.toString())\r\n    this.LoginId = this.logoutId;\r\n    this.loginService.globalLoginId = this.logoutId;\r\n    this.loginService.setLogin(); \r\n    this.isLogin = false;\r\n    console.log(\"in logout xxx \" + this.isLogin);\r\n    \r\n    // this.checkLogin()\r\n    this.router.navigate(['home'])\r\n    //this.ngOnInit()\r\n  }\r\n  \r\n  //function that sends the observable to login service \r\n  send(){\r\n    this.loginService.sendProject(this.loginService.globalLoginId);\r\n  }\r\n  \r\n  \r\n  \r\n}\r\n","<button mat-flat-button color=\"accent\" (click)=\"loginUser()\" *ngIf=\"!isLogin\">Login</button>\r\n<button mat-flat-button color=\"accent\" (click)=\"logout()\" *ngIf=\"isLogin\">Logout</button>\r\n<button mat-flat-button color=\"accent\" (click)=\"newUser()\">Register</button>","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { User } from 'src/app/models/user';\r\nimport { ProjectService } from 'src/app/project.service';\r\nimport { Project } from 'src/app/models/project';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\nexport interface UserModalData {\r\n  passwordCheck: String;\r\n  user: User;\r\n  origin: String;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-modal',\r\n  templateUrl: './user-modal.component.html',\r\n  styleUrls: ['./user-modal.component.css']\r\n})\r\nexport class UserModalComponent implements OnInit {\r\n  \r\n  @Input()\r\n  user: User;\r\n\r\n  users:User[];\r\n  \r\n  //projects: Project[];\r\n\r\n  validationMessage:string;\r\n  temp:boolean;\r\n  \r\n  constructor(public dialogRef: MatDialogRef<UserModalComponent>,@Inject(MAT_DIALOG_DATA) public data: UserModalData, private projectService: ProjectService, private userService: UserService) {\r\n  this.validationMessage = \"\"\r\n  }\r\n  \r\n  ngOnInit(){\r\n    this.reloadAll();\r\n    this.validationMessage;\r\n    this.temp;\r\n  }\r\n\r\n    reloadAll(){\r\n      this.userService.findAll().subscribe(users=> {\r\n        this.users = users\r\n      });\r\n    //this.projectService.findAll().subscribe(projects => this.projects = projects);\r\n  }\r\n\r\n  duplicateCheck(name){\r\n\r\n    for (let i = 0; i < this.users.length; i++){\r\n      if(this.users[i].username === name){\r\n        \r\n        return true;\r\n      } break\r\n    }\r\n  }\r\n\r\n  validateRegistration(){\r\n\r\n    if (this.data.user.username == undefined)\r\n    this.validationMessage = \"Name cannot be empty\"\r\n\r\n    else if (this.data.user.password == undefined)\r\n    this.validationMessage = \"Password cannot be empty\"\r\n\r\n    else if (this.data.passwordCheck != this.data.user.password)\r\n    this.validationMessage = \"Second password not identical to first\"\r\n\r\n    else if(this.duplicateCheck(this.data.user.username) == true)\r\n    this.validationMessage = \"This username is already taken\"\r\n\r\n    //else if (this.data.user.id == undefined)\r\n    //this.validationMessage = \"Project field cannot be empty\"\r\n\r\n    alert(this.validationMessage)\r\n  }\r\n\r\n  validateLogin(){\r\n    if (this.data.user.username == undefined)\r\n    this.validationMessage = \"Name cannot be empty\"\r\n    else if (this.data.user.password == undefined)\r\n    this.validationMessage = \"Password cannot be empty\"\r\n\r\n    alert(this.validationMessage)\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n    <div>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"data.user.username\" name=\"username\" required>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Password</mat-label>\r\n            <input matInput type=\"password\" [(ngModel)]=\"data.user.password\" name=\"password\" required>\r\n        </mat-form-field>\r\n        <div *ngIf=\"data.origin=='register'\">\r\n            <mat-form-field appearance=\"standard\" >\r\n                <mat-label>Repeat password</mat-label>\r\n                <input matInput type=\"password\" [(ngModel)]=\"data.passwordCheck\" name=\"password\" required>\r\n            </mat-form-field>\r\n            <p class=\"mat-caption\" *ngIf=\"data.user.password != data.passwordCheck\">The entered passwords do not match</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-flat-button color=\"primary\" mat-dialog-close>Cancel</button>\r\n    <div *ngIf=\"data.origin=='login'\">\r\n        <ng-container *ngIf=\"data.user.username != null\r\n        && data.user.password != null\">\r\n        <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"data.user\">Login</button>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"data.user.username == null\r\n    || data.user.password == null\">\r\n        <!-- <button mat-button color=\"primary\" disabled>Save</button> -->\r\n        <button mat-flat-button color=\"primary\" (click)=\"validateLogin()\">Login</button>\r\n    </ng-container>\r\n    </div>\r\n\r\n    <div *ngIf=\"data.origin=='register'\">\r\n        <ng-container *ngIf=\"data.user.username != null\r\n    && data.user.password != null\r\n    && data.passwordCheck != null\r\n    && data.passwordCheck == data.user.password\">\r\n            <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"data.user\" >Register</button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"data.user.username == null\r\n    || data.user.password == null\r\n    || data.passwordCheck == null\r\n    || data.passwordCheck != data.user.password\">\r\n            <button mat-flat-button color=\"primary\" (click)=\"validateRegistration()\">Register</button>\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  userId:number;\r\n  \r\n  login(user: User){\r\n    return this.http.get<number>('/user/login?user=' + user.username + '&password=' + user.password)\r\n  }\r\n  \r\n  constructor(private http: HttpClient) { }\r\n  \r\n  findAll(): Observable<User[]>  {\r\n    return this.http.get<any>('/user')\r\n  }\r\n  \r\n  save(user: User) {\r\n    return this.http.post('/user', user)\r\n  }\r\n  \r\n  delete(id) {\r\n    return this.http.delete('/user/' + id)\r\n  }\r\n  \r\n  //to edit the listing.\r\n  patchUser(id:number, user:User){\r\n    return this.http.patch('/user/' + id, user)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}