{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login.service.ts","webpack:///src/app/material-design/material-design.module.ts","webpack:///src/app/models/project.ts","webpack:///src/app/models/projectuser.ts","webpack:///src/app/models/task.ts","webpack:///src/app/models/user.ts","webpack:///src/app/project-components/project-form/project-form.component.ts","webpack:///src/app/project-components/project-form/project-form.component.html","webpack:///src/app/project-components/project-list/project-list.component.ts","webpack:///src/app/project-components/project-list/project-list.component.html","webpack:///src/app/project-components/project-modal/project-modal.component.ts","webpack:///src/app/project-components/project-modal/project-modal.component.html","webpack:///src/app/project-user.service.ts","webpack:///src/app/project.service.ts","webpack:///src/app/routing-pages/homepage/homepage.component.ts","webpack:///src/app/routing-pages/homepage/homepage.component.html","webpack:///src/app/routing-pages/list-page/list-page.component.ts","webpack:///src/app/routing-pages/list-page/list-page.component.html","webpack:///src/app/routing-pages/select-page/select-page.component.ts","webpack:///src/app/routing-pages/select-page/select-page.component.html","webpack:///src/app/selection-components/selection-coming/selection-coming.component.ts","webpack:///src/app/selection-components/selection-coming/selection-coming.component.html","webpack:///src/app/selection-components/selection-form/selection-form.component.ts","webpack:///src/app/selection-components/selection-form/selection-form.component.html","webpack:///src/app/selection-components/selection-list/selection-list.component.ts","webpack:///src/app/selection-components/selection-list/selection-list.component.html","webpack:///src/app/task-components/task-form/task-form.component.ts","webpack:///src/app/task-components/task-form/task-form.component.html","webpack:///src/app/task-components/task-list/task-list.component.ts","webpack:///src/app/task-components/task-list/task-list.component.html","webpack:///src/app/task-components/task-modal/task-modal.component.ts","webpack:///src/app/task-components/task-modal/task-modal.component.html","webpack:///src/app/task.service.ts","webpack:///src/app/theme.service.ts","webpack:///src/app/toolbar/toolbar.component.ts","webpack:///src/app/toolbar/toolbar.component.html","webpack:///src/app/user-components/user-login/user-login.component.ts","webpack:///src/app/user-components/user-login/user-login.component.html","webpack:///src/app/user-components/user-modal/user-modal.component.ts","webpack:///src/app/user-components/user-modal/user-modal.component.html","webpack:///src/app/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","themeService","isDarkTheme","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoginService","_login","isLogin","asObservable","subject","next","globalLoginId","projNum","providedIn","modules","MaterialDesignModule","Project","users","ProjectUser","Task","status","User","ProjectFormComponent","projectService","dialog","loginService","projectUser","currentDate","Date","getDate","minDate","userID","project","user","save","subscribe","projectList","reloadAll","theme","currentActive","dialogRef","open","width","data","projectEdit","panelClass","afterClosed","result","clear","projectName","deadline","duration","newProject","ProjectListComponent","projectUserService","taskService","displayedColumns","findAll","projects","tasks","tempUser","projectUpdate","parseInt","sessionStorage","getItem","filter","Array","indexp","length","indexu","push","projectUsers","find","console","log","patchProject","ProjectModalComponent","ProjectUserService","http","get","post","patch","ProjectService","HomepageComponent","setItem","ListPageComponent","projectIdUser","SelectPageComponent","SelectionComingComponent","filterP","i","projectIDs","includes","startedTask","patchTask","closedTask","task","taskEdit","height","minHeight","animations","SelectionFormComponent","filteredProjects","projectNumber","timeWindow","priority","important","sort","a","b","slice","list","selectedProjectID","selectedTimeWindow","SelectionListComponent","selectedTasks","columnsToDisplay","newfilteredTasks","newTasks","startedfilteredTasks","startedTasks","TaskFormComponent","taskList","name","description","newTask","TaskListComponent","tempTasks","temp","durationCalc","forEach","element","TaskModalComponent","TaskService","ThemeService","_darkTheme","ToolbarComponent","setLogin","getLogin","checkLogin","checked","setDarkTheme","toggleDarkTheme","UserLoginComponent","userService","router","logoutId","LoginId","origin","login","answer","toString","alert","navigate","send","sendProject","newUser","UserModalComponent","validationMessage","username","undefined","password","passwordCheck","duplicateCheck","UserService","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACXA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,OAAxB;AAAiCC,eAAS,EAAE;AAA5C,KADqB,EAErB;AAAEF,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE;AAA3B,KAFqB,EAGrB;AAAEH,UAAI,EAAE,QAAR;AAAkBG,eAAS,EAAE;AAA7B,KAHqB,EAIrB;AAAEH,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE;AAA3B,KAJqB,CAAvB;;QAYaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,EAA6B;AAACO,eAAO,EAAC;AAAT,OAA7B,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBF,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRG,iBAAO,EAAE,CAAC,6DAAaF,OAAb,CAAqBN,MAArB,EAA6B;AAACO,mBAAO,EAAC;AAAT,WAA7B,CAAD,CADD;AAERT,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACnB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QASaW,Y;AAGX,4BAAoBC,YAApB,EAAgD;AAAA;;AAA5B,aAAAA,YAAA,GAAAA,YAAA;AAA+B;;;;mCAExC;AACT,eAAKC,WAAL,GAAmB,KAAKD,YAAL,CAAkBC,WAArC;AACD;;;;;;;uBAPUF,Y,EAAY,4H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,qS;AAAA;AAAA;ACTzB;;;;AAEE;;AAGA;;AAGA;;AACE;;AACE;;AACA;;AAAI;;AAAY;;AAChB;;AACA;;AACE;;AACA;;AACA;;AAA2F;;AAAoC;;AACjI;;AACF;;AACF;;AACF;;;;AApBK;;;;;;;;;;sEDSQA,Y,EAAY;cALxB,uDAKwB;eALd;AACTG,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AETzaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAZJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,6FALO,EAMP,6FANO,EAOP,qEAPO,CAYI,EAFX,6FAEW;;;;0HAGFA,S,EAAS;AAAA,uBAhClB,2DAgCkB,EA/BlB,gGA+BkB,EA9BlB,gGA8BkB,EA7BlB,4GA6BkB,EA5BlB,4GA4BkB,EA3BlB,qHA2BkB,EA1BlB,qHA0BkB,EAzBlB,gHAyBkB,EAxBlB,oGAwBkB,EAvBlB,oGAuBkB,EAtBlB,oGAsBkB,EArBlB,4EAqBkB,EApBlB,6FAoBkB,EAnBlB,qGAmBkB,EAlBlB,+FAkBkB,EAjBlB,2HAiBkB;AAjBM,kBAGxB,uEAHwB,EAIxB,oEAJwB,EAKxB,qEALwB,EAMxB,0DANwB,EAOxB,6FAPwB,EAQxB,6FARwB,EASxB,qEATwB,CAiBN;AART,kBAGT,6FAHS;AAQS,O;AALE,K;;;;;sEAKXA,S,EAAS;cAlCrB,sDAkCqB;eAlCZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,gGAFY,EAGZ,gGAHY,EAIZ,4GAJY,EAKZ,4GALY,EAMZ,qHANY,EAOZ,qHAPY,EAQZ,gHARY,EASZ,oGATY,EAUZ,oGAVY,EAWZ,oGAXY,EAYZ,4EAZY,EAaZ,6FAbY,EAcZ,qGAdY,EAeZ,+FAfY,EAgBZ,2HAhBY,CADN;AAmBRR,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,6FALO,EAMP,6FANO,EAOP,qEAPO,CAnBD;AA4BRV,iBAAO,EAAE,CACP,6FADO,CA5BD;AA+BRmB,mBAAS,EAAE,EA/BH;AAgCRC,mBAAS,EAAE,CAAC,2DAAD;AAhCH,S;AAkCY,Q;;;;;;;;;;;;;;;;;;AC7DtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,Y;AAuBX,8BAAc;AAAA;;AArBd,aAAAC,MAAA,GAAS,IAAI,4CAAJ,EAAT;AACA,aAAAC,OAAA,GAAU,KAAKD,MAAL,CAAYE,YAAZ,EAAV;AAUQ,aAAAC,OAAA,GAAU,IAAI,4CAAJ,EAAV;AAUS;;;;mCAlBN;AACT,eAAKH,MAAL,CAAYI,IAAZ,CAAiB,KAAKC,aAAL,IAAsB,IAAtB,IAA8B,KAAKA,aAAL,IAAqB,CAApE;AACD;;;mCAEO;AACN,iBAAO,KAAKJ,OAAZ;AACD;;;oCAIWK,O,EAAiB;AAC3B,eAAKH,OAAL,CAAaC,IAAb,CAAkB;AAACE,mBAAO,EAAEA;AAAV,WAAlB;AACD;;;qCAES;AACR,iBAAO,KAAKH,OAAL,CAAaD,YAAb,EAAP;AACD;;;;;;;uBArBUH,Y;AAAY,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVQ,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;ACNzsE,CAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AA+CA,QAAMC,OAAO,GAAU,CACrB,yEADqB,EAErB,6EAFqB,EAGrB,iEAHqB,EAIrB,iFAJqB,EAKrB,uEALqB,EAMrB,+EANqB,EAOrB,yEAPqB,EAQrB,qEARqB,EASrB,yEATqB,EAUrB,4DAVqB,EAWrB,sEAXqB,EAYrB,qEAZqB,EAarB,gEAbqB,EAcrB,sEAdqB,EAerB,qEAfqB,EAgBrB,iEAhBqB,EAiBrB,+DAjBqB,EAkBrB,qFAlBqB,EAmBrB,uEAnBqB,EAoBrB,oFApBqB,EAqBrB,yEArBqB,EAsBrB,sFAtBqB,EAuBrB,qEAvBqB,EAwBrB,6EAxBqB,EAyBrB,uEAzBqB,EA0BrB,2EA1BqB,EA2BrB,iFA3BqB,EA4BrB,yEA5BqB,EA6BrB,2EA7BqB,EA8BrB,+EA9BqB,EA+BrB,8EA/BqB,EAgCrB,qEAhCqB,EAiCrB,uEAjCqB,EAkCrB,qEAlCqB,EAmCrB,qEAnCqB,EAoCrB,2EApCqB,EAoCA,uEApCA,EAqCrB,+EArCqB,EAsCrB,oFAtCqB,EAuCrB,4FAvCqB,EAwCrB,uEAxCqB,EAyCrB,yEAzCqB,EA0CrB,2EA1CqB,EA2CrB,yEA3CqB,EA4CrB,oFA5CqB,EA6CrB,8EA7CqB,EA8CrB,qEA9CqB,EA+CrB,uEA/CqB,EAgDrB,qEAhDqB,EAiDrB,2EAjDqB,EAkDrB,2EAlDqB,EAmDrB,qEAnDqB,CAAvB,C,CAuDA;;QAKaC,oB;;;;;YAAAA;;;;yBAAAA,oB;AAAoB,O;AAAA,0BAHlBD,OAGkB,GA3D/B,yEA2D+B,EA1D/B,6EA0D+B,EAzD/B,iEAyD+B,EAxD/B,iFAwD+B,EAvD/B,uEAuD+B,EAtD/B,+EAsD+B,EArD/B,yEAqD+B,EApD/B,qEAoD+B,EAnD/B,yEAmD+B,EAlD/B,4DAkD+B,EAjD/B,sEAiD+B,EAhD/B,qEAgD+B,EA/C/B,gEA+C+B,EA9C/B,sEA8C+B,EA7C/B,qEA6C+B,EA5C/B,iEA4C+B,EA3C/B,+DA2C+B,EA1C/B,qFA0C+B,EAzC/B,uEAyC+B,EAxC/B,oFAwC+B,EAvC/B,yEAuC+B,EAtC/B,sFAsC+B,EArC/B,qEAqC+B,EApC/B,6EAoC+B,EAnC/B,uEAmC+B,EAlC/B,2EAkC+B,EAjC/B,iFAiC+B,EAhC/B,yEAgC+B,EA/B/B,2EA+B+B,EA9B/B,+EA8B+B,EA7B/B,8EA6B+B,EA5B/B,qEA4B+B,EA3B/B,uEA2B+B,EA1B/B,qEA0B+B,EAzB/B,qEAyB+B,EAxB/B,2EAwB+B,EAxBV,uEAwBU,EAvB/B,+EAuB+B,EAtB/B,oFAsB+B,EArB/B,4FAqB+B,EApB/B,uEAoB+B,EAnB/B,yEAmB+B,EAlB/B,2EAkB+B,EAjB/B,yEAiB+B,EAhB/B,oFAgB+B,EAf/B,8EAe+B,EAd/B,qEAc+B,EAb/B,uEAa+B,EAZ/B,qEAY+B,EAX/B,2EAW+B,EAV/B,2EAU+B,EAT/B,qEAS+B;;;;0HAApBC,oB,EAAoB;AAAA,kBA3D/B,yEA2D+B,EA1D/B,6EA0D+B,EAzD/B,iEAyD+B,EAxD/B,iFAwD+B,EAvD/B,uEAuD+B,EAtD/B,+EAsD+B,EArD/B,yEAqD+B,EApD/B,qEAoD+B,EAnD/B,yEAmD+B,EAlD/B,4DAkD+B,EAjD/B,sEAiD+B,EAhD/B,qEAgD+B,EA/C/B,gEA+C+B,EA9C/B,sEA8C+B,EA7C/B,qEA6C+B,EA5C/B,iEA4C+B,EA3C/B,+DA2C+B,EA1C/B,qFA0C+B,EAzC/B,uEAyC+B,EAxC/B,oFAwC+B,EAvC/B,yEAuC+B,EAtC/B,sFAsC+B,EArC/B,qEAqC+B,EApC/B,6EAoC+B,EAnC/B,uEAmC+B,EAlC/B,2EAkC+B,EAjC/B,iFAiC+B,EAhC/B,yEAgC+B,EA/B/B,2EA+B+B,EA9B/B,+EA8B+B,EA7B/B,8EA6B+B,EA5B/B,qEA4B+B,EA3B/B,uEA2B+B,EA1B/B,qEA0B+B,EAzB/B,qEAyB+B,EAxB/B,2EAwB+B,EAxBV,uEAwBU,EAvB/B,+EAuB+B,EAtB/B,oFAsB+B,EArB/B,4FAqB+B,EApB/B,uEAoB+B,EAnB/B,yEAmB+B,EAlB/B,2EAkB+B,EAjB/B,yEAiB+B,EAhB/B,oFAgB+B,EAf/B,8EAe+B,EAd/B,qEAc+B,EAb/B,uEAa+B,EAZ/B,qEAY+B,EAX/B,2EAW+B,EAV/B,2EAU+B,EAT/B,qEAS+B;AATlB,kBAlDb,yEAkDa,EAjDb,6EAiDa,EAhDb,iEAgDa,EA/Cb,iFA+Ca,EA9Cb,uEA8Ca,EA7Cb,+EA6Ca,EA5Cb,yEA4Ca,EA3Cb,qEA2Ca,EA1Cb,yEA0Ca,EAzCb,4DAyCa,EAxCb,sEAwCa,EAvCb,qEAuCa,EAtCb,gEAsCa,EArCb,sEAqCa,EApCb,qEAoCa,EAnCb,iEAmCa,EAlCb,+DAkCa,EAjCb,qFAiCa,EAhCb,uEAgCa,EA/Bb,oFA+Ba,EA9Bb,yEA8Ba,EA7Bb,sFA6Ba,EA5Bb,qEA4Ba,EA3Bb,6EA2Ba,EA1Bb,uEA0Ba,EAzBb,2EAyBa,EAxBb,iFAwBa,EAvBb,yEAuBa,EAtBb,2EAsBa,EArBb,+EAqBa,EApBb,8EAoBa,EAnBb,qEAmBa,EAlBb,uEAkBa,EAjBb,qEAiBa,EAhBb,qEAgBa,EAfb,2EAea,EAfQ,uEAeR,EAdb,+EAca,EAbb,oFAaa,EAZb,4FAYa,EAXb,uEAWa,EAVb,yEAUa,EATb,2EASa,EARb,yEAQa,EAPb,oFAOa,EANb,8EAMa,EALb,qEAKa,EAJb,uEAIa,EAHb,qEAGa,EAFb,2EAEa,EADb,2EACa,EAAb,qEAAa;AASkB,O;AATlB,K;;;;;sEASFA,oB,EAAoB;cAJhC,sDAIgC;eAJvB;AACRrB,iBAAO,YAAMoB,OAAN,CADC;AAER9B,iBAAO,YAAM8B,OAAN;AAFC,S;AAIuB,Q;;;;;;;;;;;;;;;;;;ACpHjC;AAAA;;;AAAA;AAAA;AAAA;;QAAaE,O,GAAb;AAAA;;AACI,WAAA/B,EAAA,GAAU,CAAV;AAGA,WAAAgC,KAAA,GAAsB,EAAtB;AAEH,K;;;;;;;;;;;;;;;;;ACLD;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,W;;;;;;;;;;;;;;;;;;;ACFb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,I,GAAb;AAAA;;AACI,WAAAlC,EAAA,GAAY,CAAZ;AAKA,WAAAmC,MAAA,GAAiB,KAAjB;AAEH,K;;;;;;;;;;;;;;;;;ACTD;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,I,GAAb;AAAA;;AACI,WAAApC,EAAA,GAAW,CAAX;AAGH,K;;;;;;;;;;;;;;;;;ACJD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaqC,oB;AAYX,oCAAoBC,cAApB,EAA2DC,MAA3D,EAAsF5B,YAAtF,EAA0H6B,YAA1H,EAAqJ;AAAA;;AAAjI,aAAAF,cAAA,GAAAA,cAAA;AAAuC,aAAAC,MAAA,GAAAA,MAAA;AAA2B,aAAA5B,YAAA,GAAAA,YAAA;AAAoC,aAAA6B,YAAA,GAAAA,YAAA;AAP1H,aAAAC,WAAA,GAAc,IAAI,sEAAJ,EAAd;AAQE,YAAMC,WAAW,GAAS,IAAIC,IAAJ,EAA1B;AAAoCD,mBAAW,CAACE,OAAZ;AACpC,aAAKC,OAAL,GAAeH,WAAf;AACD;;;;mCAEO;AACN,eAAKI,MAAL,GAAc,KAAKN,YAAL,CAAkBd,aAAhC;AACA,eAAKe,WAAL,CAAiBM,OAAjB,GAA2B,IAAI,uDAAJ,EAA3B;AACA,eAAKN,WAAL,CAAiBO,IAAjB,GAAwB,IAAI,wDAAJ,EAAxB;AACA,eAAKP,WAAL,CAAiBO,IAAjB,CAAsBhD,EAAtB,GAAyB,KAAK8C,MAA9B;AACD;;;+BAEa;AAAA;;AACZ,eAAKR,cAAL,CAAoBW,IAApB,CAAyB,KAAKR,WAA9B,EAA2CS,SAA3C,CAAqD;AAAA,mBAAM,KAAI,CAACC,WAAL,CAAiBC,SAAjB,EAAN;AAAA,WAArD;AAED;;;qCAEY;AAAA;;AACX,eAAKC,KAAL,GAAa,KAAK1C,YAAL,CAAkB2C,aAAlB,EAAb;AACA,eAAKR,MAAL,GAAc,KAAKN,YAAL,CAAkBd,aAAhC;AACA,eAAKe,WAAL,CAAiBO,IAAjB,CAAsBhD,EAAtB,GAAyB,KAAK8C,MAA9B;AACA,cAAMS,SAAS,GAAG,KAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,4FAAjB,EAAwC;AACxDC,iBAAK,EAAE,KADiD;AAExDC,gBAAI,EAAC;AAACC,yBAAW,EAAE,KAAKlB;AAAnB,aAFmD;AAGxDmB,sBAAU,EAAE,KAAKP;AAHuC,WAAxC,CAAlB;AAMAE,mBAAS,CAACM,WAAV,GAAwBX,SAAxB,CAAkC,UAAAY,MAAM,EAAE;AACxC,gBAAGA,MAAM,IAAG,IAAZ,EAAiB;AACjB,oBAAI,CAACxB,cAAL,CAAoBW,IAApB,CAAyBa,MAAzB,EAAiCZ,SAAjC,CAA2C;AAAA,uBAAM,MAAI,CAACC,WAAL,CAAiBC,SAAjB,EAAN;AAAA,eAA3C;AACC;;AACD,kBAAI,CAACW,KAAL;AACD,WALD;AAMD;;;gCACI;AACH,eAAKtB,WAAL,CAAiBM,OAAjB,CAAyBiB,WAAzB,GAAuC,EAAvC;AACA,eAAKvB,WAAL,CAAiBM,OAAjB,CAAyBkB,QAAzB,GAAoC,IAApC;AACA,eAAKxB,WAAL,CAAiBM,OAAjB,CAAyBmB,QAAzB,GAAoC,IAApC;AACA,eAAKzB,WAAL,CAAiBO,IAAjB,CAAsBhD,EAAtB,GAAyB,KAAK8C,MAA9B;AACD;;;;;;;uBAnDUT,oB,EAAoB,gI,EAAA,mI,EAAA,4H,EAAA,mI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,kFAHpB,CAAC,+DAAD,CAGoB,E;AAHJ,c;AAAA,a;AAAA,uE;AAAA;AAAA;ACf7B;;AAAwC;AAAA,mBAAS,IAAA8B,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAe;;;;;;;;;sEDkBjE9B,oB,EAAoB;cAPhC,uDAOgC;eAPtB;AACTxB,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD,CAHF;AAITG,mBAAS,EAAE,CAAC,+DAAD;AAJF,S;AAOsB,Q;;;;;;;;;;;;gBAE9B;;;;;;;;;;;;;;;;;;;;AEpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AAAgB;;AAAwB;;AAC1C;;;;;;AADkB;;AAAA;;;;;;AAIlB;;AAAuC;;AAAS;;;;;;AAChD;;AACE;;AAAgB;;AAAqB;;AACvC;;;;;;AADkB;;AAAA;;;;;;AAIlB;;AAAuC;;AAAQ;;;;;;;;AAC/C;;AACE;;AACE;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAI;;AAC7E;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAG;;AACzE;;AACF;;;;;;AAEF;;;;;;AACA;;;;QDEWkD,oB;AAeX,oCAAoB9B,cAApB,EAA2DC,MAA3D,EAAqF5B,YAArF,EAAyH0D,kBAAzH,EAA0K7B,YAA1K,EAA6M8B,WAA7M,EAAsO;AAAA;;AAAA;;AAAlN,aAAAhC,cAAA,GAAAA,cAAA;AAAuC,aAAAC,MAAA,GAAAA,MAAA;AAA0B,aAAA5B,YAAA,GAAAA,YAAA;AAAoC,aAAA0D,kBAAA,GAAAA,kBAAA;AAAiD,aAAA7B,YAAA,GAAAA,YAAA;AAAmC,aAAA8B,WAAA,GAAAA,WAAA;AAO7M,aAAAC,gBAAA,GAA6B,CAAC,aAAD,EAAgB,UAAhB,EAA4B,SAA5B,CAA7B;AANE,aAAKjC,cAAL,CAAoBkC,OAApB,GAA8BtB,SAA9B,CAAwC,UAAAuB,QAAQ;AAAA,iBAAI,MAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,SAAhD;AACA,aAAKC,KAAL;AACA,aAAKJ,WAAL,CAAiBE,OAAjB,GAA2BtB,SAA3B,CAAqC,UAAAwB,KAAK;AAAA,iBAAI,MAAI,CAACA,KAAL,GAAaA,KAAjB;AAAA,SAA1C;AACA,aAAKC,QAAL;AACG;;;;mCAIG;AACN,eAAKF,QAAL;AACA,eAAKC,KAAL;AACA,eAAKE,aAAL;AACA,eAAKD,QAAL;AACA,eAAK7B,MAAL,GAAc+B,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAD,CAAtB;AACA,eAAK3B,SAAL;AACD;;;6CAEiB;AAChB,eAAKA,SAAL;AACD;;;oCAEQ;AAAA;;AACP,eAAKkB,WAAL,CAAiBE,OAAjB,GAA2BtB,SAA3B,CAAqC,UAAAwB,KAAK;AAAA,mBAAI,MAAI,CAACA,KAAL,GAAaA,KAAjB;AAAA,WAA1C;AACA,eAAKpC,cAAL,CAAoBkC,OAApB,GAA8BtB,SAA9B,CAAwC,UAAAuB,QAAQ,EAAI;AAClD,kBAAI,CAACA,QAAL,GAAcA,QAAd;AACA,gBAAIO,MAAM,GAAG,IAAIC,KAAJ,EAAb;;AACA,iBAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,MAAI,CAACT,QAAL,CAAcU,MAA5C,EAAoDD,MAAM,EAA1D,EAA6D;AAC3D,mBAAK,IAAIE,MAAM,GAAE,CAAjB,EAAoBA,MAAM,GAAG,MAAI,CAACX,QAAL,CAAcS,MAAd,EAAsBlD,KAAtB,CAA4BmD,MAAzD,EAAiEC,MAAM,EAAvE,EAA0E;AACxE,oBAAI,MAAI,CAACX,QAAL,CAAcS,MAAd,EAAsBlD,KAAtB,CAA4BoD,MAA5B,EAAoCpC,IAApC,CAAyChD,EAAzC,KAAgD,MAAI,CAAC8C,MAAzD,EAAgE;AAC9DkC,wBAAM,CAACK,IAAP,CAAY,MAAI,CAACZ,QAAL,CAAcS,MAAd,CAAZ;AACD;AACF;AACF;;AACD,kBAAI,CAACT,QAAL,GAAgBO,MAAhB,CAVkD,CAWlD;AACA;AACD,WAbD;AAcD;;;gCAEMhF,E,EAAY;AAAA;;AACjB,eAAKsC,cAAL,WAA2BtC,EAA3B,EAA+BkD,SAA/B,CAAyC;AAAA,mBAAM,MAAI,CAACE,SAAL,EAAN;AAAA,WAAzC;AACD;;;oCAEWL,O,EAAkB;AAAA;;AAC5B,eAAKM,KAAL,GAAa,KAAK1C,YAAL,CAAkB2C,aAAlB,EAAb;AACA,eAAKe,kBAAL,CAAwBG,OAAxB,GAAkCtB,SAAlC,CAA4C,UAAAoC,YAAY,EAAI;AAC1D,gBAAI7C,WAAW,GAAG6C,YAAY,CAACC,IAAb,CAAkB,UAAA9C,WAAW;AAAA,qBAAGA,WAAW,CAACM,OAAZ,CAAoB/C,EAApB,KAAyB+C,OAAO,CAAC/C,EAAjC,IAAuCyC,WAAW,CAACO,IAAZ,CAAiBhD,EAAjB,KAAwB,MAAI,CAAC8C,MAAvE;AAAA,aAA7B,CAAlB;;AACA,gBAAMS,SAAS,GAAG,MAAI,CAAChB,MAAL,CAAYiB,IAAZ,CAAiB,4FAAjB,EAAwC;AACxDC,mBAAK,EAAE,KADiD;AAExDC,kBAAI,EAAE;AAACC,2BAAW,EAAGlB;AAAf,eAFkD;AAGxDmB,wBAAU,EAAE,MAAI,CAACP;AAHuC,aAAxC,CAAlB;;AAMAE,qBAAS,CAACM,WAAV,GAAwBX,SAAxB,CAAkC,UAAAY,MAAM,EAAE;AACxC,kBAAGA,MAAM,IAAG,IAAT,IAAiBA,MAAM,IAAErB,WAA5B,EAAwC;AACtC+C,uBAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,sBAAI,CAACnD,cAAL,CAAoBoD,YAApB,CAAiC5B,MAAM,CAACf,OAAP,CAAe/C,EAAhD,EAAoD8D,MAAM,CAACf,OAA3D,EAAoEG,SAApE,CAA8E;AAAA,yBAAM,MAAI,CAACE,SAAL,EAAN;AAAA,iBAA9E;AACD;AACF,aALD;AAMD,WAdD;AAeD;;;;;;;uBA5EUgB,oB,EAAoB,gI,EAAA,mI,EAAA,4H,EAAA,gJ,EAAA,mI,EAAA,iI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,kFAHpB,CAAC,+DAAD,CAGoB,E;AAHJ,e;AAAA,a;AAAA,2gB;AAAA;AAAA;ACvB7B;;AAEE;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAMF;;AACA;;AACA;;AACF;;;;AAzBiB;;AAuBI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDEDA,oB,EAAoB;cAPhC,uDAOgC;eAPtB;AACTvD,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD,CAHF;AAITG,mBAAS,EAAE,CAAC,+DAAD;AAJF,S;AAOsB,Q;;;;;;;;;;;;;;;;gBAY9B;;;;;;;;;;;;;;;;;;;;AEtCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcI;;AACI;;AAAwD;;AAAI;;AAChE;;;;AAD4C;;AAAA;;;;;;AAE5C;;AACI;;AAA8E;;AAAI;;AACtF;;;;;;AAD4C;;AAAA;;;;QDJnCyE,qB;AAOX,qCAAmBpC,SAAnB,EAAkGG,IAAlG,EAA0H;AAAA;;AAAvG,aAAAH,SAAA,GAAAA,SAAA;AAA+E,aAAAG,IAAA,GAAAA,IAAA;AAChG,YAAMhB,WAAW,GAAS,IAAIC,IAAJ,EAA1B;AAAoCD,mBAAW,CAACE,OAAZ;AACpC,aAAKC,OAAL,GAAeH,WAAf;AACD;;;;mCAEO,CAAI;;;;;;;uBAZDiD,qB,EAAqB,sI,EAAA,gEAO0C,wEAP1C,C;AAOyD,K;;;YAP9EA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,klB;AAAA;AAAA;ACdlC;;AACI;;AACI;;AAAW;;AAAI;;AACf;;AAAqC;AAAA;AAAA;;AAArC;;AACJ;;AACA;;AACI;;AAAsC;;AAAQ;;AAC9C;;AAAkE;AAAA;AAAA;;AAAlE;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAAoD;;AAAM;;AAC1D;;AAGA;;AAGJ;;;;;;AAjB6C;;AAAA;;AAIZ;;AAAA,uFAAe,eAAf,EAAe,GAAf,EAAe,SAAf,EAAe,qCAAf;;AACQ;;AAAA;;AAMvB;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDHLA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT9E,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;kBAOmC,oD;mBAAO,wE;;;;;gBALzE;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa6E,kB;AACX,kCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;kCAElC;AACL,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAmB,cAAnB,CAAP;AACD;;;6BAEIrD,W,EAA0B;AAC7B,iBAAO,KAAKoD,IAAL,CAAUE,IAAV,CAAe,cAAf,EAA+BtD,WAA/B,CAAP;AACD;;;gCAEMzC,E,EAAW;AAChB,iBAAO,KAAK6F,IAAL,WAAiB,kBAAkB7F,EAAnC,CAAP;AACD,S,CAED;;;;qCACaA,E,EAAWyC,W,EAAuB;AAC7C,iBAAO,KAAKoD,IAAL,CAAUG,KAAV,CAAgB,kBAAkBhG,EAAlC,EAAsCyC,WAAtC,CAAP;AACD;;;;;;;uBAlBUmD,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVhE,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACR/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaqE,c;AACX,8BAAoBJ,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;kCAElC;AACL,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAmB,UAAnB,CAAP;AACD;;;6BAEIrD,W,EAA0B;AAC7B,iBAAO,KAAKoD,IAAL,CAAUE,IAAV,CAAe,UAAf,EAA2BtD,WAA3B,CAAP;AACD;;;gCAEMzC,E,EAAW;AAChB,iBAAO,KAAK6F,IAAL,WAAiB,cAAc7F,EAA/B,CAAP;AACD,S,CAED;;;;qCACaA,E,EAAW+C,O,EAAe;AACrC,iBAAO,KAAK8C,IAAL,CAAUG,KAAV,CAAgB,cAAchG,EAA9B,EAAkC+C,OAAlC,CAAP;AACD;;;;;;;uBAlBUkD,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVrE,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasE,iB;AAGX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;qCAES;AACRV,iBAAO,CAACC,GAAR,CAAY,WAAZ;AACAX,wBAAc,CAACqB,OAAf,CAAuB,KAAvB,EAA8B,GAA9B;AAED;;;;;;;uBAZUD,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,oG;AAAA;AAAA;ACP9B;;AACI;;AACI;;AAAmB;;AAAoC;;AACvD;;AAAmB;;AAA4H;;AAC/I;;AAAI;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDAaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTrF,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaqF,iB;AAMX,iCAAmB5D,YAAnB,EAA8C;AAAA;;AAA3B,aAAAA,YAAA,GAAAA,YAAA;AAA8B;;;;mCAEzC;AACN,eAAK6D,aAAL,GAAqB,KAAK7D,YAAL,CAAkBd,aAAvC;AACD;;;;;;;uBAVU0E,iB,EAAiB,4H;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,2M;AAAA;AAAA;ACP9B;;AACE;;AACE;;AACE;;AACE;;AAAK;;AAAmE;;AACxE;;AAAK;;AAAkD;;AACzD;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAT+B;;AAAA;;AAIR;;AAAA;;;;;;;;;sEDDVA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTvF,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauF,mB;AAEX,qCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,kJ;AAAA;AAAA;ACNhC;;AACI;;AACI;;AAAgB;;AAAe;;AAC/B;;AACJ;;AACA;;AACA;;AACI;;AAAgB;;AAAc;;AAC9B;;AACA;;AACJ;;AACJ;;;;;;AAH4B;;AAAA;;;;;;;;;sEDFfA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTzF,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGQ;;AAAuC;;AAAG;;;;;;AAC1C;;AACI;;AAAc;;AAAY;;AAC9B;;;;;;AADkB;;AAAA;;;;;;AAIlB;;AAAuC;;AAAK;;;;;;AAC5C;;AACI;;AAAa;;AAAoC;;AACrD;;;;;;AADiB;;AAAA;;;;;;AAIjB;;AAAuC;;AAAa;;;;;;AACpD;;AACI;;AAAe;;AAAmD;;AACtE;;;;;;AADmB;;AAAA;;;;;;AAInB;;AAAuC;;AAAgB;;;;;;AACvD;;AACI;;AAAa;;AAAwC;;AACzD;;;;;;AADiB;;AAAA;;;;;;AAIjB;;AAAuC;;AAAY;;;;;;AACnD;;AACI;;AAAa;;AAA2C;;AAC5D;;;;;;AADiB;;AAAA;;;;;;AAIjB;;AAAuC;;AAAO;;;;;;AAC9C;;AACI;;AAAa;;AAAsC;;AACvD;;;;;;AADiB;;AAAA;;;;;;AAIjB;;AAAuC;;AAAQ;;;;;;;;AAGvC;;AACI;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC5E;;;;;;;;AACA;;AACI;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC5E;;;;;;;;AAPR;;AACI;;AACI;;AAGA;;AAGA;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAI;;AACvE;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAG;;AAExE;;AACJ;;;;;;AAVsB;;AAAA;;AAGA;;AAAA;;;;;;AAS1B;;;;;;AACA;;;;QD/BSwF,wB;AAUX,wCAAoBjC,WAApB,EAAqD/B,MAArD,EAA+E5B,YAA/E,EAAmH0D,kBAAnH,EAA0J;AAAA;;AAAtI,aAAAC,WAAA,GAAAA,WAAA;AAAiC,aAAA/B,MAAA,GAAAA,MAAA;AAA0B,aAAA5B,YAAA,GAAAA,YAAA;AAAoC,aAAA0D,kBAAA,GAAAA,kBAAA;AAPnH,aAAAE,gBAAA,GAA6B,CAAC,MAAD,EAAS,qBAAT,EAA+B,UAA/B,EAA2C,QAA3C,EAAqD,SAArD,CAA7B;AAQC;;;;mCAEU;AACT,eAAKnB,SAAL;AACD,S,CAGD;AACQ;;;;oCAEG;AAAA;;AACT,eAAKiB,kBAAL,CAAwBG,OAAxB,GAAkCtB,SAAlC,CAA4C,UAAAoC,YAAY,EAAI;AAC1D,gBAAIkB,OAAO,GAAG,IAAIvB,KAAJ,EAAd;;AACA,iBAAI,IAAIwB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACnB,YAAY,CAACH,MAA5B,EAAoCsB,CAAC,EAArC,EAAwC;AACtC;AACA,kBAAGnB,YAAY,CAACmB,CAAD,CAAZ,CAAgBzD,IAAhB,CAAqBhD,EAArB,KAA0B,MAAI,CAAC8C,MAAlC,EAAyC;AACvC0D,uBAAO,CAACnB,IAAR,CAAaC,YAAY,CAACmB,CAAD,CAAZ,CAAgB1D,OAAhB,CAAwB/C,EAArC;AACD;AACF;;AACD,kBAAI,CAAC0G,UAAL,GAAkBF,OAAlB,CAR0D,CAS1D;;AACA,kBAAI,CAAClC,WAAL,CAAiBE,OAAjB,GAA2BtB,SAA3B,CAAqC,UAAAwB,KAAK,EAAI;AAC5C,oBAAI,CAACA,KAAL,GAAWA,KAAX;AACA,kBAAIM,MAAM,GAAG,IAAIC,KAAJ,EAAb;;AACA,mBAAK,IAAIwB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,MAAI,CAAC/B,KAAL,CAAWS,MAA/B,EAAuCsB,EAAC,EAAxC,EAA2C;AACzCjB,uBAAO,CAACC,GAAR,CAAY,yBAAyBgB,EAArC;AACAjB,uBAAO,CAACC,GAAR,CAAY,qBAAqB,MAAI,CAACf,KAAL,CAAW+B,EAAX,EAAc1D,OAAd,CAAsB/C,EAAvD;;AACA,oBAAI,MAAI,CAAC0G,UAAL,CAAgBC,QAAhB,CAAyB,MAAI,CAACjC,KAAL,CAAW+B,EAAX,EAAc1D,OAAd,CAAsB/C,EAA/C,CAAJ,EAAuD;AACrDgF,wBAAM,CAACK,IAAP,CAAY,MAAI,CAACX,KAAL,CAAW+B,EAAX,CAAZ;AACD;AACF;;AACD,oBAAI,CAAC/B,KAAL,GAAaM,MAAb;AACAQ,qBAAO,CAACC,GAAR,CAAY,4CAAZ;AACD,aAZD;AAaD,WAvBD;AAwBD;;;gCAGMzF,E,EAAY;AAAA;;AACjB,eAAKsE,WAAL,WAAwBtE,EAAxB,EAA4BkD,SAA5B,CAAsC;AAAA,mBAAM,MAAI,CAACE,SAAL,EAAN;AAAA,WAAtC;AACD;;;kCAESwD,W,EAAiB;AAAA;;AACzBA,qBAAW,CAACzE,MAAZ,GAAmB,SAAnB;AACA,eAAKmC,WAAL,CAAiBuC,SAAjB,CAA2BD,WAAW,CAAC5G,EAAvC,EAA2C4G,WAA3C,EAAwD1D,SAAxD,CAAkE;AAAA,mBAAM,MAAI,CAACE,SAAL,EAAN;AAAA,WAAlE;AAED;;;kCAES0D,U,EAAgB;AAAA;;AACxBA,oBAAU,CAAC3E,MAAX,GAAkB,QAAlB;AACA,eAAKmC,WAAL,CAAiBuC,SAAjB,CAA2BC,UAAU,CAAC9G,EAAtC,EAA0C8G,UAA1C,EAAsD5D,SAAtD,CAAgE;AAAA,mBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,WAAhE;AAED;;;iCAEQ2D,I,EAAY;AAAA;;AACnB,eAAK1D,KAAL,GAAa,KAAK1C,YAAL,CAAkB2C,aAAlB,EAAb;AACA,cAAMC,SAAS,GAAG,KAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,mGAAjB,EAAqC;AACrDC,iBAAK,EAAE,KAD8C;AAErDC,gBAAI,EAAE;AAACsD,sBAAQ,EAAGD;AAAZ,aAF+C;AAGrDnD,sBAAU,EAAE,KAAKP;AAHoC,WAArC,CAAlB;AAMAE,mBAAS,CAACM,WAAV,GAAwBX,SAAxB,CAAkC,UAAAY,MAAM,EAAE;AACxC,mBAAI,CAACQ,WAAL,CAAiBuC,SAAjB,CAA2B/C,MAAM,CAAC9D,EAAlC,EAAsC8D,MAAtC,EAA8CZ,SAA9C,CAAwD;AAAA,qBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,aAAxD;AACD,WAFD;AAGD;;;;;;;uBA5EUmD,wB,EAAwB,0H,EAAA,mI,EAAA,mI,EAAA,gJ;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,kFAVvB,CAAC,yDAAD,CAUuB,E;AAVV,e;AAAA,a;AAAA,yrB;AAAA;AAAA;ACd3B;;AAEI;;AACI;;AACA;;AAGJ;;AACA;;AACI;;AACA;;AAGJ;;AACA;;AACI;;AACA;;AAGJ;;AACA;;AACI;;AACA;;AAGJ;;AACA;;AACI;;AACA;;AAGJ;;AACA;;AACI;;AACA;;AAGJ;;AACA;;AACI;;AACA;;AAaJ;;AACA;;AACA;;AACJ;;;;AAxDiB;;AAsDM;;AAAA;;AACP;;AAAA;;;;;;mBDxCF,CACV,oEAAQ,cAAR,EAAwB,CACtB,kEAAM,WAAN,EAAmB,kEAAM;AAACU,gBAAM,EAAE,KAAT;AAAgBC,mBAAS,EAAE;AAA3B,SAAN,CAAnB,CADsB,EAEtB,kEAAM,UAAN,EAAkB,kEAAM;AAACD,gBAAM,EAAE;AAAT,SAAN,CAAlB,CAFsB,EAGtB,uEAAW,wBAAX,EAAqC,oEAAQ,sCAAR,CAArC,CAHsB,CAAxB,CADU;;;;;;sEASDV,wB,EAAwB;cAdpC,uDAcoC;eAd1B;AACT1F,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD,CAHF;AAITG,mBAAS,EAAG,CAAC,yDAAD,CAJH;AAKTiG,oBAAU,EAAE,CACV,oEAAQ,cAAR,EAAwB,CACtB,kEAAM,WAAN,EAAmB,kEAAM;AAACF,kBAAM,EAAE,KAAT;AAAgBC,qBAAS,EAAE;AAA3B,WAAN,CAAnB,CADsB,EAEtB,kEAAM,UAAN,EAAkB,kEAAM;AAACD,kBAAM,EAAE;AAAT,WAAN,CAAlB,CAFsB,EAGtB,uEAAW,wBAAX,EAAqC,oEAAQ,sCAAR,CAArC,CAHsB,CAAxB,CADU;AALH,S;AAc0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIQ;;AAAqD;AAAA;;AAAA;AAAA;AAAA;;AACnD;;AACF;;;;;;AAFqD;;AACnD;;AAAA;;;;QDYGG,sB;AAiBX,sCAAoB9E,cAApB,EAA4DgC,WAA5D,EAAmF;AAAA;;AAA/D,aAAAhC,cAAA,GAAAA,cAAA;AAAwC,aAAAgC,WAAA,GAAAA,WAAA;AAAoE;;;;mCAExH;AACN,eAAKG,QAAL;AACA,eAAK4C,gBAAL;AACA,eAAKC,aAAL;AACA,eAAKC,UAAL;AACA,eAAKzE,MAAL,GAAc+B,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAD,CAAtB,CALM,CAMN;;AACA,eAAK3B,SAAL;AACA,eAAKoE,QAAL;AACD;;;oCAEQ;AAAA;;AACP,eAAKlF,cAAL,CAAoBkC,OAApB,GAA8BtB,SAA9B,CAAwC,UAAAuB,QAAQ,EAAI;AAClD,mBAAI,CAACA,QAAL,GAAcA,QAAd;AACA,gBAAIO,MAAM,GAAG,IAAIC,KAAJ,EAAb;;AACA,iBAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,OAAI,CAACT,QAAL,CAAcU,MAA5C,EAAoDD,MAAM,EAA1D,EAA6D;AAC3D,mBAAK,IAAIE,MAAM,GAAE,CAAjB,EAAoBA,MAAM,GAAG,OAAI,CAACX,QAAL,CAAcS,MAAd,EAAsBlD,KAAtB,CAA4BmD,MAAzD,EAAiEC,MAAM,EAAvE,EAA0E;AACxE,oBAAI,OAAI,CAACX,QAAL,CAAcS,MAAd,EAAsBlD,KAAtB,CAA4BoD,MAA5B,EAAoCpC,IAApC,CAAyChD,EAAzC,KAAgD,OAAI,CAAC8C,MAAzD,EAAgE;AAC9DkC,wBAAM,CAACK,IAAP,CAAY,OAAI,CAACZ,QAAL,CAAcS,MAAd,CAAZ;AACD;AACF;AACF;;AACD,mBAAI,CAACmC,gBAAL,GAAwBrC,MAAxB;AACD,WAXD;AAYD;;;mCAEO;AAAA;;AACN,eAAKV,WAAL,CAAiBE,OAAjB,GAA2BtB,SAA3B,CAAqC,UAAAwB,KAAK,EAAI;AAC5C,mBAAI,CAAC+C,SAAL,GAAiB/C,KAAK,CAACgD,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAAC1D,QAAF,GAAa2D,CAAC,CAAC3D,QAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA3C;AAAA,aAAX,CAAjB;AACA,mBAAI,CAACwD,SAAL,GAAiB,OAAI,CAACA,SAAL,CAAeI,KAAf,CAAqB,CAArB,EAAuB,CAAvB,CAAjB;AACD,WAHD;AAID;;;gCAEI;AACH,eAAKC,IAAL,CAAUC,iBAAV,GAA8B,KAAKT,aAAnC;AACA,eAAKQ,IAAL,CAAUE,kBAAV,GAA+B,KAAKT,UAApC;AACA,eAAKD,aAAL,GAAqB,CAArB;AACA,eAAKC,UAAL,GAAkB,IAAlB;AACA,eAAKO,IAAL,CAAU1E,SAAV;AACD;;;kCAEK;AACJ,eAAK0E,IAAL,CAAUC,iBAAV,GAA8B,CAA9B;AACA,eAAKD,IAAL,CAAUE,kBAAV,GAA+B,CAA/B;AACA,eAAKF,IAAL,CAAU1E,SAAV;AACD;;;;;;;uBAhEUgE,sB,EAAsB,gI,EAAA,0H;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA,O;AAAA,kFAFtB,CAAC,yDAAD,CAEsB,E;AAFT,e;AAAA,a;AAAA,6V;AAAA;AAAA;ACf1B;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AAAuB;AAAA;AAAA;;AACnB;;AAGJ;;AACF;;AACA;;AACE;;AAAW;;AAAW;;AACtB;;AAAY;AAAA;AAAA;;AACV;;AAAyB;;AAAI;;AAC7B;;AAAsB;;AAAM;;AAC5B;;AAAuB;;AAAO;;AAC9B;;AAAuB;;AAAO;;AAC9B;;AAAuB;;AAAO;;AAC9B;;AAAuB;;AAAO;;AAC9B;;AAAuB;;AAAO;;AAChC;;AACF;;AACA;;AAA0C;AAAA,mBAAU,IAAArD,KAAA,EAAV;AAAiB,WAAjB;;AAAmB;;AAAM;;AACnE;;AAA0C;AAAA,mBAAU,eAAV;AAAkB,WAAlB;;AAAoB;;AAAK;;AACrE;;;;AApB2B;;AAAA;;AACP;;AAAA;;AAOJ;;AAAA;;;;;;;;;sEDMHqD,sB,EAAsB;cANlC,uDAMkC;eANxB;AACTvG,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD,CAHF;AAITG,mBAAS,EAAE,CAAC,yDAAD;AAJF,S;AAMwB,Q;;;;;;;;gBAEhC;;;;;;;;;;;;;;;;;;;;AEnBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOU;;AAAuC;;AAAG;;;;;;AAC1C;;AACE;;AAAc;;AAAY;;AAC5B;;;;;;AADgB;;AAAA;;;;;;AAIhB;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AAAa;;AAAoC;;AACnD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAW;;;;;;AAClD;;AACE;;AAAc;;AAA0C;;AAC1D;;;;;;AADgB;;AAAA;;;;;;AAIhB;;AAAuC;;AAAa;;;;;;AACpD;;AACE;;AAAe;;AAAmD;;AACpE;;;;;;AADiB;;AAAA;;;;;;AAIjB;;AAAuC;;AAAS;;;;;;AAChD;;AACE;;AAAa;;AAAwC;;AACvD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAY;;;;;;AACnD;;AACE;;AAAa;;AAA2C;;AAC1D;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AAAa;;AAAsC;;AACrD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAQ;;;;;;;;AAG3C;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC1E;;;;;;;;AACA;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC1E;;;;;;;;AAPJ;;AACE;;AACE;;AAGA;;AAGA;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAI;;AACvE;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAG;;AAEtE;;AACF;;;;;;AAVkB;;AAAA;;AAGA;;AAAA;;;;;;AASpB;;;;;;AACA;;;;;;AAQE;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AAAa;;AAAoC;;AACnD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAa;;;;;;AACpD;;AACE;;AAAe;;AAAmD;;AACpE;;;;;;AADiB;;AAAA;;;;;;AAIjB;;AAAuC;;AAAe;;;;;;AACtD;;AACE;;AAAa;;AAAwC;;AACvD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAY;;;;;;AACnD;;AACE;;AAAa;;AAA2C;;AAC1D;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AAAa;;AAAsC;;AACrD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAQ;;;;;;;;AAG3C;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC1E;;;;;;;;AACA;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC1E;;;;;;;;AAPJ;;AACE;;AACE;;AAGA;;AAGA;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAI;;AACvE;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAG;;AAEtE;;AACF;;;;;;AAVkB;;AAAA;;AAGA;;AAAA;;;;;;AASpB;;;;;;AACA;;;;QD/FK+G,sB;AAeX,sCAAoB3D,WAApB,EAAqD/B,MAArD,EAA+E5B,YAA/E,EAAmH0D,kBAAnH,EAA4J;AAAA;;AAAxI,aAAAC,WAAA,GAAAA,WAAA;AAAiC,aAAA/B,MAAA,GAAAA,MAAA;AAA0B,aAAA5B,YAAA,GAAAA,YAAA;AAAoC,aAAA0D,kBAAA,GAAAA,kBAAA;AAXnH,aAAAE,gBAAA,GAA6B,CAAC,MAAD,EAAS,qBAAT,EAA+B,UAA/B,EAA2C,QAA3C,EAAqD,SAArD,CAA7B;AAIA,aAAA2D,aAAA,GAA6B,EAA7B;AACA,aAAAC,gBAAA,GAAmB,CAAC,MAAD,EAAQ,UAAR,EAAoB,UAApB,EAAgC,QAAhC,CAAnB;AAM+J;;;;mCAEpJ;AACT,eAAK/E,SAAL;AACA,eAAKsD,UAAL;AACA,eAAK5D,MAAL,GAAc+B,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAD,CAAtB;AACD;;;oCAEW;AAAA;;AACV,eAAKT,WAAL,CAAiBE,OAAjB,GAA2BtB,SAA3B,CAAqC,UAAAwB,KAAK,EAAI;AAC5C;AAEA,gBAAI0D,gBAAgB,GAAG1D,KAAK,CAACM,MAAN,CAAa,UAAA+B,IAAI;AAAA,qBAAIA,IAAI,CAAChE,OAAL,CAAa/C,EAAb,KAAoB,OAAI,CAAC+H,iBAA7B;AAAA,aAAjB,CAAvB;AACAK,4BAAgB,GAAGA,gBAAgB,CAACpD,MAAjB,CAAwB,UAAA+B,IAAI;AAAA,qBAAIA,IAAI,CAAC7C,QAAL,IAAiB,OAAI,CAAC8D,kBAA1B;AAAA,aAA5B,CAAnB;AACAI,4BAAgB,GAAGA,gBAAgB,CAACpD,MAAjB,CAAwB,UAAA+B,IAAI;AAAA,qBAAIA,IAAI,CAAC5E,MAAL,KAAgB,KAApB;AAAA,aAA5B,CAAnB;AACAiG,4BAAgB,CAACV,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACzD,QAAF,GAAa0D,CAAC,CAAC1D,QAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA3C;AAAA,aAAtB;AACAkE,4BAAgB,CAACV,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAAC1D,QAAF,GAAa2D,CAAC,CAAC3D,QAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA3C;AAAA,aAAtB;AAEA,mBAAI,CAACoE,QAAL,GAAgBD,gBAAhB;AAAgC;AAEhC;;AACA,gBAAIE,oBAAoB,GAAG5D,KAAK,CAACM,MAAN,CAAa,UAAA+B,IAAI;AAAA,qBAAIA,IAAI,CAAChE,OAAL,CAAa/C,EAAb,KAAoB,OAAI,CAAC+H,iBAA7B;AAAA,aAAjB,CAA3B;AACAO,gCAAoB,GAAGA,oBAAoB,CAACtD,MAArB,CAA4B,UAAA+B,IAAI;AAAA,qBAAIA,IAAI,CAAC7C,QAAL,IAAiB,OAAI,CAAC8D,kBAA1B;AAAA,aAAhC,CAAvB;AACAM,gCAAoB,GAAGA,oBAAoB,CAACtD,MAArB,CAA4B,UAAA+B,IAAI;AAAA,qBAAIA,IAAI,CAAC5E,MAAL,KAAgB,SAApB;AAAA,aAAhC,CAAvB;AACAmG,gCAAoB,CAACZ,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACzD,QAAF,GAAa0D,CAAC,CAAC1D,QAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA3C;AAAA,aAA1B;AACAoE,gCAAoB,CAACZ,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAAC1D,QAAF,GAAa2D,CAAC,CAAC3D,QAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA3C;AAAA,aAA1B;AAEA,mBAAI,CAACsE,YAAL,GAAoBD,oBAApB;AAAwC;AAEzC,WApBD;AAqBD;;;gCAGMtI,E,EAAY;AAAA;;AACjB,eAAKsE,WAAL,WAAwBtE,EAAxB,EAA4BkD,SAA5B,CAAsC;AAAA,mBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,WAAtC;AACD;;;kCAESwD,W,EAAiB;AAAA;;AACzBA,qBAAW,CAACzE,MAAZ,GAAmB,SAAnB;AACA,eAAKmC,WAAL,CAAiBuC,SAAjB,CAA2BD,WAAW,CAAC5G,EAAvC,EAA2C4G,WAA3C,EAAwD1D,SAAxD,CAAkE;AAAA,mBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,WAAlE;AAED;;;kCAES0D,U,EAAgB;AAAA;;AACxBA,oBAAU,CAAC3E,MAAX,GAAkB,QAAlB;AACA,eAAKmC,WAAL,CAAiBuC,SAAjB,CAA2BC,UAAU,CAAC9G,EAAtC,EAA0C8G,UAA1C,EAAsD5D,SAAtD,CAAgE;AAAA,mBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,WAAhE;AAED;;;iCAEQ2D,I,EAAY;AAAA;;AACnB,eAAK1D,KAAL,GAAa,KAAK1C,YAAL,CAAkB2C,aAAlB,EAAb;AACA,cAAMC,SAAS,GAAG,KAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,mGAAjB,EAAqC;AACrDC,iBAAK,EAAE,KAD8C;AAErDC,gBAAI,EAAE;AAACsD,sBAAQ,EAAGD;AAAZ,aAF+C;AAGrDnD,sBAAU,EAAE,KAAKP;AAHoC,WAArC,CAAlB;AAMAE,mBAAS,CAACM,WAAV,GAAwBX,SAAxB,CAAkC,UAAAY,MAAM,EAAE;AACxC,mBAAI,CAACQ,WAAL,CAAiBuC,SAAjB,CAA2B/C,MAAM,CAAC9D,EAAlC,EAAsC8D,MAAtC,EAA8CZ,SAA9C,CAAwD;AAAA,qBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,aAAxD;AACD,WAFD;AAGD;;;;;;;uBA3EU6E,sB,EAAsB,0H,EAAA,mI,EAAA,mI,EAAA,gJ;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,kFAVrB,CAAC,yDAAD,CAUqB,E;AAVR,e;AAAA,a;AAAA,yxB;AAAA;AAAA;ACd1B;;AACC;;AAEE;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAaF;;AACA;;AACA;;AACF;;AACF;;AAEA;;AACE;;AAEE;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAaF;;AACA;;AACA;;AACF;;AACF;;AACF;;AACF;;;;AAvHuB;;AAAA;;AA4DI;;AAAA;;AACP;;AAAA;;AAKG;;AAAA;;AAgDI;;AAAA;;AACP;;AAAA;;;;;;mBDxGN,CACV,oEAAQ,cAAR,EAAwB,CACtB,kEAAM,WAAN,EAAmB,kEAAM;AAAChB,gBAAM,EAAE,KAAT;AAAgBC,mBAAS,EAAE;AAA3B,SAAN,CAAnB,CADsB,EAEtB,kEAAM,UAAN,EAAkB,kEAAM;AAACD,gBAAM,EAAE;AAAT,SAAN,CAAlB,CAFsB,EAGtB,uEAAW,wBAAX,EAAqC,oEAAQ,sCAAR,CAArC,CAHsB,CAAxB,CADU;;;;;;sEASDgB,sB,EAAsB;cAdlC,uDAckC;eAdxB;AACTpH,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD,CAHF;AAITG,mBAAS,EAAG,CAAC,yDAAD,CAJH;AAKTiG,oBAAU,EAAE,CACV,oEAAQ,cAAR,EAAwB,CACtB,kEAAM,WAAN,EAAmB,kEAAM;AAACF,kBAAM,EAAE,KAAT;AAAgBC,qBAAS,EAAE;AAA3B,WAAN,CAAnB,CADsB,EAEtB,kEAAM,UAAN,EAAkB,kEAAM;AAACD,kBAAM,EAAE;AAAT,WAAN,CAAlB,CAFsB,EAGtB,uEAAW,wBAAX,EAAqC,oEAAQ,sCAAR,CAArC,CAHsB,CAAxB,CADU;AALH,S;AAcwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeauB,iB;AAQX,iCAAoBlE,WAApB,EAAoD/B,MAApD,EAA+E5B,YAA/E,EAA2G;AAAA;;AAAvF,aAAA2D,WAAA,GAAAA,WAAA;AAAgC,aAAA/B,MAAA,GAAAA,MAAA;AAA2B,aAAA5B,YAAA,GAAAA,YAAA;AAH/E,aAAAoG,IAAA,GAAO,IAAI,iDAAJ,EAAP;AAIE,YAAMrE,WAAW,GAAS,IAAIC,IAAJ,EAA1B;AAAoCD,mBAAW,CAACE,OAAZ;AACpC,aAAKC,OAAL,GAAeH,WAAf;AACD;;;;mCAEU;AACT,eAAKqE,IAAL,CAAUhE,OAAV,GAAoB,IAAI,uDAAJ,EAApB;AACD;;;+BAEU;AAAA;;AACT,eAAKuB,WAAL,CAAiBrB,IAAjB,CAAsB,KAAK8D,IAA3B,EAAiC7D,SAAjC,CAA2C;AAAA,mBAAM,OAAI,CAACuF,QAAL,CAAcrF,SAAd,EAAN;AAAA,WAA3C;AACD;;;kCAES;AAAA;;AACR,eAAKC,KAAL,GAAa,KAAK1C,YAAL,CAAkB2C,aAAlB,EAAb;AACA,cAAMC,SAAS,GAAG,KAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,mFAAjB,EAAqC;AACrDC,iBAAK,EAAE,KAD8C;AAErDC,gBAAI,EAAC;AAACsD,sBAAQ,EAAE,KAAKD;AAAhB,aAFgD;AAGrDnD,sBAAU,EAAE,KAAKP;AAHoC,WAArC,CAAlB;AAMAE,mBAAS,CAACM,WAAV,GAAwBX,SAAxB,CAAkC,UAAAY,MAAM,EAAE;AACxC,gBAAGA,MAAM,IAAG,IAAZ,EAAiB;AACf,qBAAI,CAACQ,WAAL,CAAiBrB,IAAjB,CAAsBa,MAAtB,EAA8BZ,SAA9B,CAAwC,YAAM;AAC5C,uBAAI,CAACuF,QAAL,CAAcrF,SAAd;;AACA,uBAAI,CAACW,KAAL;AACD,eAHD;AAID;AACF,WAPD;AAQD;;;gCAEI;AACH,eAAKgD,IAAL,CAAU2B,IAAV,GAAiB,EAAjB;AACA,eAAK3B,IAAL,CAAUhE,OAAV,GAAoB,IAAI,uDAAJ,EAApB;AACA,eAAKgE,IAAL,CAAU7C,QAAV,GAAqB,IAArB;AACA,eAAK6C,IAAL,CAAU4B,WAAV,GAAwB,EAAxB;AACA,eAAK5B,IAAL,CAAU9C,QAAV,GAAqB,IAArB;AACD;;;;;;;uBA7CUuE,iB,EAAiB,0H,EAAA,mI,EAAA,4H;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA,O;AAAA,kFAFjB,CAAC,yDAAD,CAEiB,E;AAFJ,c;AAAA,a;AAAA,uE;AAAA;AAAA;ACb1B;;AAAwC;AAAA,mBAAS,IAAAI,OAAA,EAAT;AAAkB,WAAlB;;AAAqB;;AAAY;;;;;;;;;sEDe5DJ,iB,EAAiB;cAN7B,uDAM6B;eANnB;AACT3H,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD,CAHF;AAITG,mBAAS,EAAE,CAAC,yDAAD;AAJF,S;AAMmB,Q;;;;;;;;;;gBAE3B;;;;;;;;;;;;;;;;;;;;AEjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACII;;AAAuC;;AAAK;;;;;;AAC5C;;AACE;;AAAa;;AAAoC;;AACnD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAa;;;;;;AACpD;;AACE;;AAAe;;AAAmD;;AACpE;;;;;;AADiB;;AAAA;;;;;;AAIjB;;AAAuC;;AAAgB;;;;;;AACvD;;AACE;;AAAa;;AAAwC;;AACvD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAY;;;;;;AACnD;;AACE;;AAAa;;AAA2C;;AAC1D;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAO;;;;;;AAC9C;;AACE;;AAAa;;AAAsC;;AACrD;;;;;;AADe;;AAAA;;;;;;AAIf;;AAAuC;;AAAQ;;;;;;;;AAG3C;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC1E;;;;;;;;AACA;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC1E;;;;;;;;AAPJ;;AACE;;AACE;;AAGA;;AAGA;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAI;;AACvE;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAG;;AAEtE;;AACF;;;;;;AAVkB;;AAAA;;AAGA;;AAAA;;;;;;AASpB;;;;;;AACA;;;;QD9BW2H,iB;AAWX,iCAAoBvE,WAApB,EAAqD/B,MAArD,EAAgF5B,YAAhF,EAAoH0D,kBAApH,EAA6J;AAAA;;AAAzI,aAAAC,WAAA,GAAAA,WAAA;AAAiC,aAAA/B,MAAA,GAAAA,MAAA;AAA2B,aAAA5B,YAAA,GAAAA,YAAA;AAAoC,aAAA0D,kBAAA,GAAAA,kBAAA;AANpH,aAAAyE,SAAA,GAA0B,EAA1B;AAIA,aAAAvE,gBAAA,GAA6B,CAAC,MAAD,EAAS,qBAAT,EAA+B,UAA/B,EAA0C,aAA1C,EAAwD,QAAxD,EAAkE,SAAlE,CAA7B;AAGE,aAAKnB,SAAL;AACA,aAAKc,QAAL,GAAe,CAAf;AACA,aAAK6E,IAAL,GAAY,CAAZ;AACD;;;;mCAEU;AACT,eAAKjG,MAAL,GAAc+B,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAD,CAAtB;AACA,eAAK2B,UAAL;AACA,eAAKhC,KAAL;AACA,eAAKoE,SAAL;AACA,eAAK1F,SAAL;AAED;;;6CAEiB;AAChB,eAAKA,SAAL;AACD;;;oCAEW;AAAA;;AACV,eAAKiB,kBAAL,CAAwBG,OAAxB,GAAkCtB,SAAlC,CAA4C,UAAAoC,YAAY,EAAI;AAC1D,gBAAIkB,OAAO,GAAG,IAAIvB,KAAJ,EAAd;;AACA,iBAAI,IAAIwB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACnB,YAAY,CAACH,MAA5B,EAAoCsB,CAAC,EAArC,EAAwC;AACtC,kBAAGnB,YAAY,CAACmB,CAAD,CAAZ,CAAgBzD,IAAhB,CAAqBhD,EAArB,KAA0B,OAAI,CAAC8C,MAAlC,EAAyC;AACvC0D,uBAAO,CAACnB,IAAR,CAAaC,YAAY,CAACmB,CAAD,CAAZ,CAAgB1D,OAAhB,CAAwB/C,EAArC;AACD;AACF;;AACD,mBAAI,CAAC0G,UAAL,GAAkBF,OAAlB,CAP0D,CAQ1D;;AACA,mBAAI,CAAClC,WAAL,CAAiBE,OAAjB,GAA2BtB,SAA3B,CAAqC,UAAAwB,KAAK,EAAI;AAC5C,qBAAI,CAACA,KAAL,GAAWA,KAAX;AACA,kBAAIM,MAAM,GAAG,IAAIC,KAAJ,EAAb;;AACA,mBAAK,IAAIwB,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,OAAI,CAAC/B,KAAL,CAAWS,MAA/B,EAAuCsB,GAAC,EAAxC,EAA2C;AACzC,oBAAI,OAAI,CAACC,UAAL,CAAgBC,QAAhB,CAAyB,OAAI,CAACjC,KAAL,CAAW+B,GAAX,EAAc1D,OAAd,CAAsB/C,EAA/C,CAAJ,EAAuD;AACrDgF,wBAAM,CAACK,IAAP,CAAY,OAAI,CAACX,KAAL,CAAW+B,GAAX,CAAZ;AACD;AACF;;AACD,qBAAI,CAAC/B,KAAL,GAAaM,MAAb;;AACA,qBAAI,CAACgE,YAAL,CAAkB,OAAI,CAACtE,KAAvB;;AACAc,qBAAO,CAACC,GAAR,CAAY,0CAA0C,OAAI,CAACvB,QAA3D;AACD,aAXD;AAYD,WArBD;AAsBD;;;gCAEMlE,E,EAAY;AAAA;;AACjB,eAAKsE,WAAL,WAAwBtE,EAAxB,EAA4BkD,SAA5B,CAAsC;AAAA,mBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,WAAtC;AACD;;;kCAESwD,W,EAAiB;AAAA;;AACzBA,qBAAW,CAACzE,MAAZ,GAAmB,SAAnB;AACA,eAAKmC,WAAL,CAAiBuC,SAAjB,CAA2BD,WAAW,CAAC5G,EAAvC,EAA2C4G,WAA3C,EAAwD1D,SAAxD,CAAkE;AAAA,mBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,WAAlE;AACD;;;kCAES0D,U,EAAgB;AAAA;;AACxBA,oBAAU,CAAC3E,MAAX,GAAkB,QAAlB;AACA,eAAKmC,WAAL,CAAiBuC,SAAjB,CAA2BC,UAAU,CAAC9G,EAAtC,EAA0C8G,UAA1C,EAAsD5D,SAAtD,CAAgE;AAAA,mBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,WAAhE;AAED;;;iCAEQ2D,I,EAAY;AAAA;;AACnB,eAAK1D,KAAL,GAAa,KAAK1C,YAAL,CAAkB2C,aAAlB,EAAb;AACA,cAAMC,SAAS,GAAG,KAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,mFAAjB,EAAqC;AACrDC,iBAAK,EAAE,KAD8C;AAErDC,gBAAI,EAAE;AAACsD,sBAAQ,EAAGD;AAAZ,aAF+C;AAGrDnD,sBAAU,EAAE,KAAKP;AAHoC,WAArC,CAAlB;AAMAE,mBAAS,CAACM,WAAV,GAAwBX,SAAxB,CAAkC,UAAAY,MAAM,EAAE;AACxC,gBAAGA,MAAM,IAAG,IAAZ,EAAiB;AACf,qBAAI,CAACQ,WAAL,CAAiBuC,SAAjB,CAA2B/C,MAAM,CAAC9D,EAAlC,EAAsC8D,MAAtC,EAA8CZ,SAA9C,CAAwD;AAAA,uBAAM,OAAI,CAACE,SAAL,EAAN;AAAA,eAAxD;AACD;AACF,WAJD;AAKD;;;qCAEY8E,a,EAAyB;AAAA;;AACpC,eAAKY,SAAL,GAAiB,KAAKpE,KAAL,CAAWM,MAAX,CAAkB,UAAA+B,IAAI;AAAA,mBAAIA,IAAI,CAAC5E,MAAL,KAAgB,KAApB;AAAA,WAAtB,CAAjB;AACA,eAAK2G,SAAL,GAAiB,KAAKA,SAAL,CAAe9D,MAAf,CAAsB,UAAA+B,IAAI;AAAA,mBAAIA,IAAI,CAAC5E,MAAL,KAAgB,SAApB;AAAA,WAA1B,CAAjB;AACA+F,uBAAa,CAACe,OAAd,CAAsB,UAAAC,OAAO,EAAI;AAC/B,mBAAI,CAACH,IAAL,IAAaG,OAAO,CAAChF,QAArB;AACD,WAFD;AAIA,eAAKA,QAAL,GAAgB,KAAK6E,IAArB;AACA,eAAKA,IAAL,GAAW,CAAX;AACD;;;;;;;uBA9FUF,iB,EAAiB,0H,EAAA,mI,EAAA,4H,EAAA,gJ;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,kFAJhB,CAAC,yDAAD,CAIgB,E;AAJH,e;AAAA,a;AAAA,iqB;AAAA;AAAA;ACfvB;;AAEF;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAGF;;AACA;;AACE;;AACA;;AAaF;;AACA;;AACA;;AACF;;AAEA;;AACA;;AAAI;;AAAmF;;;;AArDlE;;AAgDA;;AAAA;;AACP;;AAAA;;AAIV;;AAAA;;;;;;;;;sEDlCSA,iB,EAAiB;cAR7B,uDAQ6B;eARnB;AACThI,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD,CAHF;AAITG,mBAAS,EAAG,CAAC,yDAAD;AAJH,S;AAQmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSgB;;AACI;;AACJ;;;;;;AAF6C;;AACzC;;AAAA;;;;;;AA8BhB;;AAEA;;AAA2D;;AAAI;;AAAS;;;;AAAhC;;AAAA;;;;;;AAExC;;AAEA;;AAA4E;;AAAI;;AACpF;;;;;;AAD4C;;AAAA;;;;QD9B/BiI,kB;AAQX,kCAAmB5F,SAAnB,EAA+FG,IAA/F,EAA4HW,kBAA5H,EAAoK;AAAA;;AAAjJ,aAAAd,SAAA,GAAAA,SAAA;AAA4E,aAAAG,IAAA,GAAAA,IAAA;AAA6B,aAAAW,kBAAA,GAAAA,kBAAA;AAC1H,YAAM3B,WAAW,GAAS,IAAIC,IAAJ,EAA1B;AAAoCD,mBAAW,CAACE,OAAZ;AACpC,aAAKC,OAAL,GAAeH,WAAf;AACD;;;;mCAEO;AACN,eAAKI,MAAL,GAAc+B,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAD,CAAtB;AACA,eAAKN,QAAL;AACA,eAAKrB,SAAL;AACD;;;oCAEQ;AAAA;;AACP,eAAKiB,kBAAL,CAAwBG,OAAxB,GAAkCtB,SAAlC,CAA4C,UAAAoC,YAAY,EAAI;AAC1D,gBAAIkB,OAAO,GAAG,IAAIvB,KAAJ,EAAd;;AACA,iBAAI,IAAIwB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACnB,YAAY,CAACH,MAA5B,EAAoCsB,CAAC,EAArC,EAAwC;AACtC,kBAAGnB,YAAY,CAACmB,CAAD,CAAZ,CAAgBzD,IAAhB,CAAqBhD,EAArB,KAA0B,OAAI,CAAC8C,MAAlC,EAAyC;AACvC0D,uBAAO,CAACnB,IAAR,CAAaC,YAAY,CAACmB,CAAD,CAAZ,CAAgB1D,OAA7B;AACD;AACF;;AACD,mBAAI,CAAC0B,QAAL,GAAgB+B,OAAhB;AACD,WARD;AASD;;;;;;;uBA7BU2C,kB,EAAkB,sI,EAAA,gEAQ0C,wEAR1C,C,EAQyD,gJ;AAAA,K;;;YAR3EA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,25B;AAAA;AAAA;AChB/B;;AACI;;AACI;;AACI;;AAAW;;AAAI;;AACf;;AAAqC;AAAA;AAAA;;AAArC;;AACJ;;AACA;;AACI;;AAAW;;AAAO;;AAClB;;AAAgC;AAAA;AAAA;;AAC5B;;AAGJ;;AACJ;;AACA;;AACI;;AAAW;;AAAQ;;AACnB;;AAAwB;AAAA;AAAA;;AACpB;;AAAwB;;AAAM;;AAC9B;;AAAyB;;AAAO;;AAChC;;AAAyB;;AAAO;;AAChC;;AAAyB;;AAAO;;AAChC;;AAAyB;;AAAO;;AAChC;;AAAyB;;AAAO;;AACpC;;AACJ;;AACA;;AACI;;AAAsC;;AAAQ;;AAC9C;;AAAkE;AAAA;AAAA;;AAAlE;;AACA;;AACA;;AACJ;;AACA;;AACA;;AACI;;AAAW;;AAAW;;AACtB;;AAAsC;AAAA;AAAA;;AAA2D;;AACrG;;AACJ;;AACJ;;AACA;;AACI;;AAAyD;;AAAM;;AAC/D;;AAIA;;AAIJ;;;;;;AA5CiD;;AAAA;;AAIL;;AAAA;;AAChB;;AAAA;;AAOQ;;AAAA;;AACR;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKS;;AAAA,uFAAe,eAAf,EAAe,GAAf,EAAe,SAAf,EAAe,0BAAf;;AACQ;;AAAA;;AAMK;;AAAA;;AAMhC;;AAAA;;AAIA;;AAAA;;;;;;;;;sED5BLA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTtI,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;kBAQmC,oD;mBAAO,wE;;;;;;;gBALtE;;;;;;;;;;;;;;;;;;;;AEnBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaqI,W;AACX,2BAAoBvD,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;kCAElC;AACL,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAmB,OAAnB,CAAP;AACD;;;6BAEIiB,I,EAAY;AACf,iBAAO,KAAKlB,IAAL,CAAUE,IAAV,CAAe,OAAf,EAAwBgB,IAAxB,CAAP;AACD;;;gCAEM/G,E,EAAI;AACT,iBAAO,KAAK6F,IAAL,WAAiB,WAAW7F,EAA5B,CAAP;AACD,S,CAED;;;;kCACUA,E,EAAW+G,I,EAAS;AAC5B,iBAAO,KAAKlB,IAAL,CAAUG,KAAV,CAAgB,WAAWhG,EAA3B,EAA+B+G,IAA/B,CAAP;AACD;;;;;;;uBAlBUqC,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVxH,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMayH,Y;AAHb;AAAA;;AAKE,aAAAC,UAAA,GAAa,IAAI,4CAAJ,EAAb;AACA,aAAA1I,WAAA,GAAc,KAAK0I,UAAL,CAAgB/H,YAAhB,EAAd;AAWD;;;;qCARcX,W,EAAsB;AACjC,eAAK0I,UAAL,CAAgB7H,IAAhB,CAAqBb,WAArB;;AACA,cAAGA,WAAH,EAAe;AAAC,iBAAKyC,KAAL,GAAW,YAAX;AAAwB,WAAxC,MAA4C;AAAC,iBAAKA,KAAL,GAAW,EAAX;AAAc;;AAAA;AAC5D;;;wCAEY;AACX,iBAAO,KAAKA,KAAZ;AACD;;;;;;;uBAbUgG,Y;AAAY,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVzH,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;ACNzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa2H,gB;AAKX,gCAAqB5I,YAArB,EAAyD6B,YAAzD,EAAqF;AAAA;;AAAhE,aAAA7B,YAAA,GAAAA,YAAA;AAAoC,aAAA6B,YAAA,GAAAA,YAAA;AAA+B;;;;mCAE7E;AAAA;;AACT,eAAK5B,WAAL,GAAmB,KAAKD,YAAL,CAAkBC,WAArC;AACA,eAAK4B,YAAL,CAAkBgH,QAAlB;AACA,eAAKhH,YAAL,CAAkBiH,QAAlB,GAA6BvG,SAA7B,CAAuC,UAAA5B,OAAO;AAAA,mBAAI,OAAI,CAACA,OAAL,GAAeA,OAAnB;AAAA,WAA9C;AACA,eAAKoI,UAAL;AACD;;;wCAEeC,O,EAAkB;AAChC,eAAKhJ,YAAL,CAAkBiJ,YAAlB,CAA+BD,OAA/B;AACA,eAAK/I,WAAL,GAAmB,KAAKD,YAAL,CAAkBC,WAArC;AACD;;;qCAES;AACR,cAAIiE,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAD,CAAR,GAA4C,CAAhD,EAAkD;AAChD,iBAAKzD,OAAL,GAAe,IAAf;AACD,WAFD,MAGA,KAAKA,OAAL,GAAe,KAAf;AACD;;;;;;;uBAxBUiI,gB,EAAgB,4H,EAAA,4H;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,yW;AAAA;AAAA;ACV7B;;AACE;;AACE;;AAAM;;AAAgB;;AACtB;;AAAwE;;AAAI;;AAC5E;;AAAyG;;AAAM;;AAC/G;;AAA2F;;AAAK;;AAChG;;AACA;;AAAW;;AAAQ;;AACnB;;AAA2C;AAAA,mBAAU,IAAAM,eAAA,gBAAV;AAAyC,WAAzC;;AACzC;;AAAW;;AAAW;;AACxB;;AACA;;AACF;;AACF;;;;AAT4C;;AAAA;;AACF;;AAAA;;AAGpB;;AAAA;;;;;;;;;sEDETN,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT1I,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AAAK;;;;;;;;AACnF;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAAM;;;;QDanE+I,kB;AAWX,kCAAoBC,WAApB,EAAoDxH,MAApD,EAA+E5B,YAA/E,EAAkH6B,YAAlH,EAAqJwH,MAArJ,EAAqK;AAAA;;AAAjJ,aAAAD,WAAA,GAAAA,WAAA;AAAgC,aAAAxH,MAAA,GAAAA,MAAA;AAA2B,aAAA5B,YAAA,GAAAA,YAAA;AAAmC,aAAA6B,YAAA,GAAAA,YAAA;AAAmC,aAAAwH,MAAA,GAAAA,MAAA;AATrJ,aAAAhH,IAAA,GAAO,IAAI,wDAAJ,EAAP;AAKA,aAAAiH,QAAA,GAAkB,CAAC,CAAnB;AAIuK;;;;mCAG/J;AAAA;;AACN,eAAKC,OAAL,GAAerF,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAD,CAAvB;AACA,eAAKkF,QAAL;AACA,eAAKzH,YAAL,CAAkBiH,QAAlB,GAA6BvG,SAA7B,CAAuC,UAAA5B,OAAO;AAAA,mBAAI,OAAI,CAACA,OAAL,GAAeA,OAAnB;AAAA,WAA9C;AACA,cAAG,KAAK4I,OAAL,GAAe,CAAlB,EACA,KAAK5I,OAAL,GAAa,IAAb,CADA,KAGA,KAAKA,OAAL,GAAa,KAAb;AACAkE,iBAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKnE,OAApC;AAED,S,CAED;;;;kCACU;AAAA;;AACR,eAAK+B,KAAL,GAAa,KAAK1C,YAAL,CAAkB2C,aAAlB,EAAb;AACA,cAAMC,SAAS,GAAG,KAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,mFAAjB,EAAqC;AACrDC,iBAAK,EAAE,KAD8C;AAErDC,gBAAI,EAAC;AAACV,kBAAI,EAAE,KAAKA,IAAZ;AAAkBmH,oBAAM,EAAE;AAA1B,aAFgD;AAGrDvG,sBAAU,EAAE,KAAKP;AAHoC,WAArC,CAAlB;AAMAE,mBAAS,CAACM,WAAV,GAAwBX,SAAxB,CAAkC,UAAAY,MAAM,EAAE;AACxC,gBAAGA,MAAM,IAAG,IAAZ,EAAiB;AACf,qBAAI,CAACiG,WAAL,CAAiB9G,IAAjB,CAAsBa,MAAtB,EAA8BZ,SAA9B;;AACA,qBAAI,CAAC6G,WAAL,CAAiBK,KAAjB,CAAuBtG,MAAvB,EAA+BZ,SAA/B,CAAyC,UAAAmH,MAAM,EAAE;AAC/C;AACA;AACA,uBAAI,CAAC7H,YAAL,CAAkBd,aAAlB,GAAkC2I,MAAlC;;AAEA,uBAAI,CAAC7H,YAAL,CAAkBgH,QAAlB;;AACA1E,8BAAc,CAACqB,OAAf,CAAuB,SAAvB,EAAkCkE,MAAM,CAACC,QAAP,EAAlC;AACA9E,uBAAO,CAACC,GAAR,CAAY,eAAe,OAAI,CAACjD,YAAL,CAAkBd,aAA7C;AACD,eARD;AASD;AACF,WAbD;AAcD,S,CAED;;;;oCACY;AAAA;;AACV,eAAK2B,KAAL,GAAa,KAAK1C,YAAL,CAAkB2C,aAAlB,EAAb;AACA,cAAMC,SAAS,GAAG,KAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,mFAAjB,EAAqC;AACrDC,iBAAK,EAAE,KAD8C;AAErDC,gBAAI,EAAC;AAACV,kBAAI,EAAE,KAAKA,IAAZ;AAAkBmH,oBAAM,EAAE;AAA1B,aAFgD;AAGrDvG,sBAAU,EAAE,KAAKP;AAHoC,WAArC,CAAlB;AAMAE,mBAAS,CAACM,WAAV,GAAwBX,SAAxB,CAAkC,UAAAY,MAAM,EAAE;AACxC,gBAAGA,MAAM,IAAG,IAAZ,EAAiB;AACf,qBAAI,CAACiG,WAAL,CAAiBK,KAAjB,CAAuBtG,MAAvB,EAA+BZ,SAA/B,CAAyC,UAAAmH,MAAM,EAAE;AAC/C;AACA;AAEAvF,8BAAc,CAACqB,OAAf,CAAuB,SAAvB,EAAkCkE,MAAM,CAACC,QAAP,EAAlC;AACA,uBAAI,CAACJ,OAAL,GAAeG,MAAf;AACA7E,uBAAO,CAACC,GAAR,CAAY,mBAAmB,OAAI,CAACnE,OAApC;;AAEA,oBAAI+I,MAAM,IAAI,CAAC,CAAf,EAAiB;AACfE,uBAAK,CAAC,qCAAD,CAAL;AACD,iBAFD,MAGI;AACF,yBAAI,CAACP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACA,yBAAI,CAAClJ,OAAL,GAAe,IAAf;AACA,yBAAI,CAACkB,YAAL,CAAkBd,aAAlB,GAAkC2I,MAAlC;;AACA,yBAAI,CAAC7H,YAAL,CAAkBgH,QAAlB;;AACAhE,yBAAO,CAACC,GAAR,CAAY,eAAe,OAAI,CAACjD,YAAL,CAAkBd,aAA7C;AACD;;AACD,uBAAI,CAAC+I,IAAL;AACD,eAnBD;AAoBD;AACF,WAvBD;AAwBD;;;iCAGK;AACJ3F,wBAAc,CAACqB,OAAf,CAAuB,SAAvB,EAAkC,KAAK8D,QAAL,CAAcK,QAAd,EAAlC;AACA,eAAKJ,OAAL,GAAe,KAAKD,QAApB;AACA,eAAKzH,YAAL,CAAkBd,aAAlB,GAAkC,KAAKuI,QAAvC;AACA,eAAKzH,YAAL,CAAkBgH,QAAlB;AACA,eAAKlI,OAAL,GAAe,KAAf;AACAkE,iBAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKnE,OAApC,EANI,CAQJ;;AACA,eAAK0I,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,MAAD,CAArB,EATI,CAUJ;AACD,S,CAED;;;;+BACI;AACF,eAAKhI,YAAL,CAAkBkI,WAAlB,CAA8B,KAAKlI,YAAL,CAAkBd,aAAhD;AACD;;;;;;;uBAvGUoI,kB,EAAkB,iI,EAAA,mI,EAAA,mI,EAAA,mI,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,yI;AAAA;AAAA;ACd/B;;AACA;;AACA;;AAAuC;AAAA,mBAAS,IAAAa,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAQ;;;;AAFN;;AACH;;AAAA;;;;;;;;;sEDa7Cb,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTjJ,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBY;;AAAwE;;AAAkC;;;;;;;;AAL9G;;AACI;;AACI;;AAAW;;AAAe;;AAC1B;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAhC;;AACJ;;AACA;;AACJ;;;;;;AAHwC;;AAAA;;AAEb;;AAAA;;;;;;AAO3B;;AAEA;;AAAuE;;AAAK;;AAChF;;;;;;AAD4C;;AAAA;;;;;;;;AAE5C;;AAGI;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAK;;AAC3E;;;;;;AATA;;AACI;;AAIJ;;AAKA;;;;;;AATkB;;AAAA;;AAIJ;;AAAA;;;;;;AAQV;;AAII;;AAAwE;;AAAQ;;AACpF;;;;;;AAD4C;;AAAA;;;;;;;;AAE5C;;AAII;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAQ;;AACrF;;;;;;AAZJ;;AACI;;AAMA;;AAMJ;;;;;;AAZkB;;AAAA;;AAMA;;AAAA;;;;QDvBT6J,kB;AAYX,kCAAmBrH,SAAnB,EAA+FG,IAA/F,EAA4HpB,cAA5H,EAAoKyH,WAApK,EAA8L;AAAA;;AAA3K,aAAAxG,SAAA,GAAAA,SAAA;AAA4E,aAAAG,IAAA,GAAAA,IAAA;AAA6B,aAAApB,cAAA,GAAAA,cAAA;AAAwC,aAAAyH,WAAA,GAAAA,WAAA;AACpK,aAAKc,iBAAL,GAAyB,EAAzB;AACC;;;;mCAEO;AACN,eAAKzH,SAAL;AACA,eAAKyH,iBAAL;AACA,eAAK9B,IAAL;AACD;;;oCAEU;AAAA;;AACP,eAAKgB,WAAL,CAAiBvF,OAAjB,GAA2BtB,SAA3B,CAAqC,UAAAlB,KAAK,EAAG;AAC3C,mBAAI,CAACA,KAAL,GAAaA,KAAb;AACD,WAFD,EADO,CAIT;AACD;;;uCAEc0G,I,EAAI;AAEjB,eAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzE,KAAL,CAAWmD,MAA/B,EAAuCsB,CAAC,EAAxC,EAA2C;AACzC,gBAAG,KAAKzE,KAAL,CAAWyE,CAAX,EAAcqE,QAAd,KAA2BpC,IAA9B,EAAmC;AAEjC,qBAAO,IAAP;AACD;;AAAC;AACH;AACF;;;+CAEmB;AAElB,cAAI,KAAKhF,IAAL,CAAUV,IAAV,CAAe8H,QAAf,IAA2BC,SAA/B,EACA,KAAKF,iBAAL,GAAyB,sBAAzB,CADA,KAGK,IAAI,KAAKnH,IAAL,CAAUV,IAAV,CAAegI,QAAf,IAA2BD,SAA/B,EACL,KAAKF,iBAAL,GAAyB,0BAAzB,CADK,KAGA,IAAI,KAAKnH,IAAL,CAAUuH,aAAV,IAA2B,KAAKvH,IAAL,CAAUV,IAAV,CAAegI,QAA9C,EACL,KAAKH,iBAAL,GAAyB,wCAAzB,CADK,KAGA,IAAG,KAAKK,cAAL,CAAoB,KAAKxH,IAAL,CAAUV,IAAV,CAAe8H,QAAnC,KAAgD,IAAnD,EACL,KAAKD,iBAAL,GAAyB,gCAAzB,CAZkB,CAclB;AACA;;AAEAN,eAAK,CAAC,KAAKM,iBAAN,CAAL;AACD;;;wCAEY;AACX,cAAI,KAAKnH,IAAL,CAAUV,IAAV,CAAe8H,QAAf,IAA2BC,SAA/B,EACA,KAAKF,iBAAL,GAAyB,sBAAzB,CADA,KAEK,IAAI,KAAKnH,IAAL,CAAUV,IAAV,CAAegI,QAAf,IAA2BD,SAA/B,EACL,KAAKF,iBAAL,GAAyB,0BAAzB;AAEAN,eAAK,CAAC,KAAKM,iBAAN,CAAL;AACD;;;;;;;uBAlEUD,kB,EAAkB,sI,EAAA,gEAY0C,wEAZ1C,C,EAYyD,uI,EAAA,iI;AAAA,K;;;YAZ3EA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,wjB;AAAA;AAAA;AClB/B;;AACI;;AACI;;AACI;;AAAW;;AAAI;;AACf;;AAA4B;AAAA;AAAA;;AAA5B;;AACJ;;AACA;;AACA;;AACI;;AAAW;;AAAQ;;AACnB;;AAAgC;AAAA;AAAA;;AAAhC;;AACJ;;AACA;;AAOJ;;AACJ;;AACA;;AACI;;AAAyD;;AAAM;;AAC/D;;AAYA;;AAeJ;;;;AA7CwC;;AAAA;;AAKI;;AAAA;;AAE/B;;AAAA;;AAWJ;;AAAA;;AAYA;;AAAA;;;;;;;;;sEDhBIA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT/J,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;kBAYmC,oD;mBAAO,wE;;;;;;;;;gBAVtE;;;;;;;;;;;;;;;;;;;;AEpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaoK,W;AAOX,2BAAoBtF,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;8BAJnC7C,I,EAAU;AACd,iBAAO,KAAK6C,IAAL,CAAUC,GAAV,CAAsB,sBAAsB9C,IAAI,CAAC8H,QAA3B,GAAsC,YAAtC,GAAqD9H,IAAI,CAACgI,QAAhF,CAAP;AACD;;;kCAIM;AACL,iBAAO,KAAKnF,IAAL,CAAUC,GAAV,CAAmB,OAAnB,CAAP;AACD;;;6BAEI9C,I,EAAY;AACf,iBAAO,KAAK6C,IAAL,CAAUE,IAAV,CAAe,OAAf,EAAwB/C,IAAxB,CAAP;AACD;;;gCAEMhD,E,EAAI;AACT,iBAAO,KAAK6F,IAAL,WAAiB,WAAW7F,EAA5B,CAAP;AACD,S,CAED;;;;kCACUA,E,EAAWgD,I,EAAS;AAC5B,iBAAO,KAAK6C,IAAL,CAAUG,KAAV,CAAgB,WAAWhG,EAA3B,EAA+BgD,IAA/B,CAAP;AACD;;;;;;;uBAxBUmI,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVvJ,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMwJ,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI/F,OAAO,CAACgG,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomepageComponent } from './routing-pages/homepage/homepage.component';\r\nimport { SelectPageComponent } from './routing-pages/select-page/select-page.component';\r\nimport { ListPageComponent } from './routing-pages/list-page/list-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomepageComponent },\r\n  { path: 'select', component: SelectPageComponent},\r\n  { path: 'list', component: ListPageComponent }  \r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash:true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\nimport { ThemeService } from './theme.service';\r\nimport { Observable } from 'rxjs/';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  isDarkTheme: Observable<boolean>;\r\n\r\n  constructor(private themeService: ThemeService) { }\r\n\r\n  ngOnInit() {\r\n    this.isDarkTheme = this.themeService.isDarkTheme;\r\n  }\r\n}\r\n","<div [ngClass]=\"{'dark-theme': isDarkTheme | async}\">\r\n  <!--Toolbar-->\r\n  <app-toolbar></app-toolbar>\r\n  \r\n  <!--Site body-->  \r\n  <router-outlet></router-outlet>\r\n  \r\n  <!-- Footer -->\r\n  <footer class=\"footerClass\">\r\n    <mat-toolbar color=\"primary\" role=\"footer\">\r\n      <img src=\"../favicon.ico\" alt=\"Pie\" style=\"padding-right:10px\">\r\n      <p> Productivity</p>\r\n      <span class=\"nav-spacer\"></span>\r\n      <p class=\"mat-small\">\r\n        Uses Angular Material by Google\r\n        <br>\r\n        <a _ngcontent-fps-c54=\"\" href=\"https://github.com/angular/components/blob/master/LICENSE\"> Licensed under an MIT-style License.</a>\r\n      </p>\r\n    </mat-toolbar>\r\n  </footer>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { TaskListComponent} from './task-components/task-list/task-list.component';\r\nimport { TaskFormComponent } from './task-components/task-form/task-form.component';\r\nimport { ProjectListComponent} from './project-components/project-list/project-list.component';\r\nimport { ProjectFormComponent } from './project-components/project-form/project-form.component';\r\nimport {MaterialDesignModule} from './material-design/material-design.module';\r\nimport { SelectionFormComponent } from './selection-components/selection-form/selection-form.component';\r\nimport { SelectionListComponent } from './selection-components/selection-list/selection-list.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProjectModalComponent } from './project-components/project-modal/project-modal.component';\r\nimport { TaskModalComponent } from './task-components/task-modal/task-modal.component';\r\nimport { UserModalComponent } from './user-components/user-modal/user-modal.component';\r\nimport { UserLoginComponent } from './user-components/user-login/user-login.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { HomepageComponent } from './routing-pages/homepage/homepage.component';\r\nimport { SelectPageComponent } from './routing-pages/select-page/select-page.component';\r\nimport { ListPageComponent } from './routing-pages/list-page/list-page.component';\r\nimport { SelectionComingComponent } from './selection-components/selection-coming/selection-coming.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TaskListComponent,\r\n    TaskFormComponent,\r\n    ProjectListComponent,\r\n    ProjectFormComponent,    \r\n    SelectionFormComponent,\r\n    SelectionListComponent,\r\n    ProjectModalComponent,\r\n    TaskModalComponent,\r\n    UserModalComponent,\r\n    UserLoginComponent,\r\n    ToolbarComponent,\r\n    HomepageComponent,\r\n    SelectPageComponent,\r\n    ListPageComponent,\r\n    SelectionComingComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MaterialDesignModule,\r\n    NgbModule\r\n  ],\r\n  exports: [\r\n    MaterialDesignModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  globalLoginId: number;\r\n  _login = new Subject<boolean>();\r\n  isLogin = this._login.asObservable();\r\n\r\n  setLogin() {\r\n    this._login.next(this.globalLoginId != null && this.globalLoginId >=0);\r\n  }\r\n\r\n  getLogin(): Observable<boolean>{\r\n    return this.isLogin\r\n  }\r\n\r\n  private subject = new Subject<any>();\r\n\r\n  sendProject(projNum: number) {\r\n    this.subject.next({projNum: projNum})\r\n  }\r\n\r\n  getProject(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","// src/material-design/material-design.module.ts\r\nimport { NgModule } from '@angular/core';\r\n\r\n// import { MatButtonModule } from '@angular/material/button';\r\n// import { MatCheckboxModule } from '@angular/material/checkbox';\r\n// import { CdkTableModule } from '@angular/cdk/table';\r\n// import {MatDatepickerModule} from '@angular/material/datepicker';\r\n// import {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n// import {MatSelectModule} from '@angular/material/select'\r\n// import {MatIconModule} from '@angular/material/icon'\r\n// import {MatSliderModule} from '@angular/material/slider';\r\n\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n\r\n\r\nconst modules: any[] = [ \r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  CdkTableModule,\r\n  MatDatepickerModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatIconModule,\r\n  MatSliderModule,\r\n  A11yModule,\r\n  ClipboardModule,\r\n  DragDropModule,\r\n  PortalModule,\r\n  ScrollingModule,\r\n  CdkStepperModule,\r\n  CdkTableModule,\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatStepperModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule, MatRippleModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n  \r\n];\r\n\r\n// Declare Module that imports/exports the @angular/material modules needed in the app\r\n@NgModule({\r\n  imports: [...modules],\r\n  exports: [...modules]\r\n})\r\nexport class MaterialDesignModule {}","import { SpecialUser } from './specialUser';\r\n\r\nexport class Project {\r\n    id:number=0;\r\n    projectName: string;\r\n    deadline: Date;\r\n    users: SpecialUser[]= [];\r\n    duration: number;\r\n}\r\n","import { User } from './user';\r\nimport { Project } from './project';\r\n\r\nexport class ProjectUser {\r\n    project: Project;\r\n    user: User;\r\n}","import {Project} from './project';\r\nexport class Task{\r\n    id: number =0;\r\n    name: string;\r\n    duration: number;\r\n    description: string;\r\n    deadline: Date;\r\n    status: string = 'New';\r\n    project: Project;\r\n}","export class User {\r\n    id: number=0;\r\n    username: String;\r\n    password: String;\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport{ProjectService} from '../../project.service';\r\nimport {Project} from '../../models/project';\r\nimport {ProjectListComponent} from '../project-list/project-list.component';\r\nimport { ProjectModalComponent } from '../project-modal/project-modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { ThemeService } from '../../theme.service';\r\nimport { ProjectUser } from 'src/app/models/projectuser';\r\nimport { User } from 'src/app/models/user';\r\nimport { LoginService } from 'src/app/login.service';\r\n\r\n@Component({\r\n  selector: 'app-project-form',\r\n  templateUrl: './project-form.component.html',\r\n  styleUrls: ['./project-form.component.css'],\r\n  providers: [ProjectService]\r\n})\r\n\r\nexport class ProjectFormComponent implements OnInit {\r\n  \r\n  @Input()\r\n  projectList: ProjectListComponent;\r\n\r\n  projectUser = new ProjectUser();\r\n  userID:number;\r\n\r\n  theme: string;\r\n  \r\n  minDate: Date;\r\n  \r\n  constructor(private projectService: ProjectService, public dialog: MatDialog, private themeService: ThemeService, private loginService:LoginService) {\r\n    const currentDate: Date = new Date; currentDate.getDate();\r\n    this.minDate = currentDate;\r\n  }\r\n  \r\n  ngOnInit(){\r\n    this.userID = this.loginService.globalLoginId; \r\n    this.projectUser.project = new Project();\r\n    this.projectUser.user = new User();\r\n    this.projectUser.user.id=this.userID;\r\n  }\r\n  \r\n  public save() {\r\n    this.projectService.save(this.projectUser).subscribe(() => this.projectList.reloadAll());\r\n\r\n  }\r\n  \r\n  newProject() {\r\n    this.theme = this.themeService.currentActive();\r\n    this.userID = this.loginService.globalLoginId; \r\n    this.projectUser.user.id=this.userID;\r\n    const dialogRef = this.dialog.open(ProjectModalComponent, {\r\n      width: '50%',\r\n      data:{projectEdit: this.projectUser},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n      this.projectService.save(result).subscribe(() => this.projectList.reloadAll());\r\n      }\r\n      this.clear();\r\n    })\r\n  }\r\n  clear(){\r\n    this.projectUser.project.projectName = \"\";\r\n    this.projectUser.project.deadline = null;\r\n    this.projectUser.project.duration = null; \r\n    this.projectUser.user.id=this.userID;\r\n  }  \r\n}\r\n","<button mat-flat-button color=\"primary\" (click)=\"newProject()\">Add New Project</button>","import {Component, OnInit, Input, AfterContentInit} from '@angular/core';\r\nimport{Project} from '../../models/project';\r\nimport{ProjectService} from '../../project.service';\r\nimport{ProjectModalComponent} from '../project-modal/project-modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { SelectionFormComponent } from '../../selection-components/selection-form/selection-form.component';\r\nimport { ThemeService } from '../../theme.service';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from 'src/app/login.service';\r\nimport { Task } from 'src/app/models/task';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { ProjectUser } from 'src/app/models/projectuser';\r\nimport { User } from 'src/app/models/user';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\n\r\nexport interface ProjectModalData {\r\n  projectEdit: Project;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-project-list',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.css'],\r\n  providers: [ProjectService]\r\n})\r\n\r\nexport class ProjectListComponent implements OnInit, AfterContentInit {\r\n  projects: Project[];\r\n  theme:string;\r\n  tasks:Task[]; \r\n  tempUser:ProjectUser;\r\n  users:User[];\r\n  \r\n  //selectedProjects: Array<Project> = [];\r\n  //projectSelected: Observable<any>;\r\n\r\n  userID : number;\r\n  \r\n  @Input()\r\n  projectUpdate:SelectionFormComponent\r\n  \r\n  constructor(private projectService: ProjectService, public dialog: MatDialog,private themeService: ThemeService, private projectUserService : ProjectUserService, private loginService:LoginService, private taskService:TaskService) {\r\n    this.projectService.findAll().subscribe(projects => this.projects = projects);\r\n    this.tasks; \r\n    this.taskService.findAll().subscribe(tasks => this.tasks = tasks);\r\n    this.tempUser;\r\n      }\r\n  \r\n  displayedColumns: string[] = ['projectName', 'deadline', 'actions'];\r\n  \r\n  ngOnInit(){\r\n    this.projects;\r\n    this.tasks;\r\n    this.projectUpdate;\r\n    this.tempUser;\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n    this.reloadAll();\r\n  }\r\n  \r\n  ngAfterContentInit(){\r\n    this.reloadAll();\r\n  }\r\n  \r\n  reloadAll(){\r\n    this.taskService.findAll().subscribe(tasks => this.tasks = tasks);\r\n    this.projectService.findAll().subscribe(projects => {\r\n      this.projects=projects;\r\n      let filter = new Array;\r\n      for (let indexp = 0; indexp < this.projects.length; indexp++){ \r\n        for (let indexu =0; indexu < this.projects[indexp].users.length; indexu++){\r\n          if (this.projects[indexp].users[indexu].user.id === this.userID){\r\n            filter.push(this.projects[indexp]);\r\n          }\r\n        }\r\n      }\r\n      this.projects = filter;\r\n      //this.projectUpdate.projects = filter\r\n      // this.durationCalc()\r\n    });\r\n  }\r\n  \r\n  delete(id: number) {\r\n    this.projectService.delete(id).subscribe(() => this.reloadAll());\r\n  }\r\n  \r\n  editProject(project: Project) {\r\n    this.theme = this.themeService.currentActive();\r\n    this.projectUserService.findAll().subscribe(projectUsers => {\r\n      let projectUser = projectUsers.find(projectUser=> projectUser.project.id===project.id && projectUser.user.id === this.userID)\r\n      const dialogRef = this.dialog.open(ProjectModalComponent, {\r\n        width: '50%',\r\n        data: {projectEdit : projectUser},\r\n        panelClass: this.theme,\r\n      });\r\n      \r\n      dialogRef.afterClosed().subscribe(result=>{\r\n        if(result!= null && result!=projectUser){\r\n          console.log(\"Triggered afterclose\");\r\n          this.projectService.patchProject(result.project.id, result.project).subscribe(() => this.reloadAll());\r\n        }\r\n      })\r\n    });\r\n  }\r\n  \r\n /*  selectProjects(IdProject){\r\n    this.selectedProjects = [];\r\n    \r\n    for (let index = 0; index < this.projects.length; index++){\r\n      if (this.projects[index].id == IdProject){\r\n        \r\n        this.selectedProjects.push(this.projects[index]);\r\n      }\r\n    }\r\n  } */\r\n\r\n  /* printingfunction(input){\r\n    console.log(\"print method called from the login service with selected project=\" + input)\r\n  } */\r\n\r\n\r\n  // duration function \r\n\r\n//   durationCalc(){\r\n\r\n//     var temp = 0;\r\n//     this.projects.forEach(projectLoop => {\r\n//       console.log(projectLoop.id)\r\n//       this.tasks.forEach(taskLoop => { \r\n//         if(projectLoop.id === taskLoop.project.id && taskLoop.status != \"Closed\"){\r\n//           console.log(\"Task belongs to this project: \" + taskLoop.id);\r\n//           temp += taskLoop.duration;\r\n//         }\r\n//       });\r\n//       this.tempUser.user = this.users[this.userID];\r\n//       this.tempUser.project = projectLoop;  \r\n//       this.projectService.patchProject(projectLoop.id, this.tempUser).subscribe( () => this.reloadAll())\r\n//     });\r\n//     this.tempUser = null;\r\n//   }\r\n}\r\n","<table mat-table [dataSource]=\"projects\">\r\n  <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n  <ng-container matColumnDef=\"projectName\">\r\n    <th mat-header-cell *matHeaderCellDef> Name </th>\r\n    <td mat-cell *matCellDef=\"let project\">\r\n      <ng-container > {{project.projectName}} </ng-container>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"deadline\">\r\n    <th mat-header-cell *matHeaderCellDef> Deadline </th>\r\n    <td mat-cell *matCellDef=\"let project\">\r\n      <ng-container > {{project.deadline}} </ng-container>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n    <td mat-cell *matCellDef=\"let project\">\r\n      <ng-container >\r\n        <button mat-raised-button color=\"primary\" (click)=\"editProject(project)\">Edit</button>        \r\n        <button mat-raised-button color=\"warn\" (click)=\"delete(project.id)\">Del</button>\r\n      </ng-container>\r\n    </td>\r\n  </ng-container>\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>","import { Component, OnInit, Inject, Input} from '@angular/core';\r\nimport{Project} from '../../models/project';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { ProjectUser } from 'src/app/models/projectuser';\r\n\r\nexport interface ProjectModalData {\r\n  projectEdit: ProjectUser;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-project-modal',\r\n  templateUrl: './project-modal.component.html',\r\n  styleUrls: ['./project-modal.component.css']\r\n})\r\nexport class ProjectModalComponent implements OnInit{\r\n  \r\n  @Input()\r\n  projectEdit: Project;\r\n\r\n  minDate: Date;\r\n  \r\n  constructor(public dialogRef: MatDialogRef<ProjectModalComponent>,@Inject(MAT_DIALOG_DATA) public data: ProjectModalData) {\r\n    const currentDate: Date = new Date; currentDate.getDate();\r\n    this.minDate = currentDate;\r\n  }\r\n\r\n  ngOnInit(){}\r\n}","<div mat-dialog-content>\r\n    <mat-form-field appearance=\"standard\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput required type=\"text\" [(ngModel)]=\"data.projectEdit.project.projectName\" name=\"projectName\">\r\n    </mat-form-field>     \r\n    <mat-form-field appearance=\"standard\">\r\n        <mat-label for=\"inputprojectdeadline\">Deadline</mat-label>\r\n        <input matInput required [min]=\"minDate\" [matDatepicker]=\"picker\" [(ngModel)]=\"data.projectEdit.project.deadline\" name=\"deadline\" >\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button color=\"primary\" mat-dialog-close>Cancel</button>\r\n    <ng-container *ngIf=\"data.projectEdit.project.projectName==null || data.projectEdit.project.deadline == null\">\r\n        <button mat-flat-button color=\"primary\" [disabled]=true>Save</button>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"data.projectEdit.project.projectName!=null && data.projectEdit.project.deadline != null\">\r\n        <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"data.projectEdit\">Save</button>\r\n    </ng-container>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport { ProjectUser } from './models/projectuser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectUserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  findAll(): Observable<ProjectUser[]>  {\r\n    return this.http.get<any>('/projectuser')\r\n  }\r\n\r\n  save(projectUser: ProjectUser) {\r\n    return this.http.post('/projectuser', projectUser)\r\n  }\r\n\r\n  delete(id:number) {\r\n    return this.http.delete('/projectuser/' + id)\r\n  }\r\n\r\n  //to edit the listing.\r\n  patchProject(id:number, projectUser:ProjectUser){\r\n    return this.http.patch('/projectuser/' + id, projectUser)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Project} from './models/project';\r\nimport { ProjectUser } from './models/projectuser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  findAll(): Observable<Project[]>  {\r\n    return this.http.get<any>('/project')\r\n  }\r\n\r\n  save(projectUser: ProjectUser) {\r\n    return this.http.post('/project', projectUser)\r\n  }\r\n\r\n  delete(id:number) {\r\n    return this.http.delete('/project/' + id)\r\n  }\r\n\r\n  //to edit the listing.\r\n  patchProject(id:number, project:Project){\r\n    return this.http.patch('/project/' + id, project)\r\n  }\r\n}\r\n","import { Component, OnInit, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  } \r\n\r\n  setStorage(){\r\n    console.log(\"enter set\");\r\n    sessionStorage.setItem('key', '1')\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"mat-app-background basic-container center\">\r\n    <mat-card>\r\n        <h1 class=\"mat-h1\">Welcome to the Pie Productivity App!</h1>\r\n        <h2 class=\"mat-h2\">A productivity app built for the YER Talent Development Programme by Edwin Bolt, Inge van Haaften and Pieter van der Scheer.</h2>\r\n        <br><br>\r\n        <app-user-login></app-user-login>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {LoginService} from '../../login.service';\r\n\r\n@Component({\r\n  selector: 'app-list-page',\r\n  templateUrl: './list-page.component.html',\r\n  styleUrls: ['./list-page.component.css']\r\n})\r\nexport class ListPageComponent implements OnInit {\r\n\r\n  user: number;\r\n\r\n  projectIdUser: number;\r\n\r\n  constructor(public loginService:LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectIdUser = this.loginService.globalLoginId\r\n  }\r\n\r\n}\r\n","<!--Task Selection Component-->\r\n<div class=\"mat-app-background basic-container\">\r\n  <mat-card id=\"Tabbed lists\">\r\n    <mat-tab-group>\r\n      <mat-tab label=\"Projects\">\r\n        <div><app-project-form [projectList] = 'projectComp'></app-project-form></div>\r\n        <div><app-project-list #projectComp></app-project-list></div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Tasks\">\r\n        <app-task-form [taskList] = 'taskComp'></app-task-form>\r\n        <app-task-list #taskComp></app-task-list>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select-page',\r\n  templateUrl: './select-page.component.html',\r\n  styleUrls: ['./select-page.component.css']\r\n})\r\nexport class SelectPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--Task Selection Component-->\r\n<div class=\"mat-app-background basic-container\">\r\n    <mat-card id=\"ComingUp\">\r\n        <mat-card-title>Tasks Coming-up</mat-card-title>\r\n        <app-selection-coming></app-selection-coming>\r\n    </mat-card>\r\n    <br>\r\n    <mat-card id=\"SelectionComponent\">\r\n        <mat-card-title>Task selection</mat-card-title>\r\n        <app-selection-form [list]=selectionComp></app-selection-form>\r\n        <app-selection-list #selectionComp></app-selection-list>\r\n    </mat-card>\r\n</div>","import { Component, OnInit} from '@angular/core';\r\nimport {Task} from '../../models/task'\r\nimport {TaskService} from '../../task.service';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TaskModalComponent } from '../../task-components/task-modal/task-modal.component';\r\nimport { ThemeService } from 'src/app/theme.service';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-selection-coming',\r\n  templateUrl: './selection-coming.component.html',\r\n  styleUrls: ['./selection-coming.component.css'],\r\n  providers:  [TaskService],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class SelectionComingComponent implements OnInit {\r\n\r\n  tasks: Task[];\r\n  displayedColumns: string[] = ['name', 'project.projectName','duration', 'status', 'actions'];\r\n  comingupTasks:Task[];\r\n  expandedElement: Task | null;\r\n  theme:string;\r\n  userID: number;\r\n  projectIDs : number[];\r\n\r\n  constructor(private taskService: TaskService, public dialog: MatDialog,private themeService: ThemeService, private projectUserService:ProjectUserService) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.reloadAll()\r\n  }\r\n\r\n\r\n  // let comingupfilteredTasks = this.tasks.sort((a, b) => (a.deadline > b.deadline) ? 1 : -1);\r\n          // this.comingupTasks = comingupfilteredTasks.slice(0,4)\r\n\r\n reloadAll() {\r\n    this.projectUserService.findAll().subscribe(projectUsers => {\r\n      let filterP = new Array;\r\n      for(let i=0; i<projectUsers.length; i++){\r\n        // console.log(\"User Id list printout: \" + projectUsers[i].user.id)\r\n        if(projectUsers[i].user.id===this.userID){\r\n          filterP.push(projectUsers[i].project.id);\r\n        }\r\n      }\r\n      this.projectIDs = filterP;\r\n      //filter all tasks to projects connected to the current user\r\n      this.taskService.findAll().subscribe(tasks => {\r\n        this.tasks=tasks;\r\n        let filter = new Array;\r\n        for (let i = 0; i < this.tasks.length; i++){\r\n          console.log(\"printing task loop: \" + i)\r\n          console.log(\"printing tasks: \" + this.tasks[i].project.id)\r\n          if (this.projectIDs.includes(this.tasks[i].project.id)){\r\n            filter.push(this.tasks[i]);\r\n          }\r\n        }\r\n        this.tasks = filter;\r\n        console.log(\"Reaching the task setting part of the loop\")\r\n      });\r\n    });\r\n  }\r\n\r\n  \r\n  delete(id: number) {\r\n    this.taskService.delete(id).subscribe(() => this.reloadAll());\r\n  }\r\n\r\n  startTask(startedTask: Task){\r\n    startedTask.status=\"Started\";\r\n    this.taskService.patchTask(startedTask.id, startedTask).subscribe(() => this.reloadAll());\r\n\r\n  }\r\n\r\n  closeTask(closedTask: Task){\r\n    closedTask.status=\"Closed\";\r\n    this.taskService.patchTask(closedTask.id, closedTask).subscribe(() => this.reloadAll());\r\n\r\n  }\r\n  \r\n  editTask(task: Task) {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(TaskModalComponent, {\r\n      width: '50%',\r\n      data: {taskEdit : task},\r\n      panelClass: this.theme\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      this.taskService.patchTask(result.id, result).subscribe(() => this.reloadAll());\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<table mat-table [dataSource]=\"this.tasks\">\r\n    <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n    <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef> ID </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell >{{task.id}} </td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef> Name </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.name}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"project.projectName\">\r\n        <th mat-header-cell *matHeaderCellDef> Project Name </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell > {{task.project.projectName}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"duration\">\r\n        <th mat-header-cell *matHeaderCellDef> Duration (min.) </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.duration}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef> Description </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.description}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"status\">\r\n        <th mat-header-cell *matHeaderCellDef> Status </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.status}} <!-- /ng-container --></td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n        <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>\r\n                <ng-container *ngIf=\"task.status == 'New'\">\r\n                    <button mat-raised-button color=\"accent\" (click)=\"startTask(task)\">Start</button>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"task.status == 'Started'\">\r\n                    <button mat-raised-button color=\"accent\" (click)=\"closeTask(task)\">Close</button>\r\n                </ng-container>\r\n                <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>        \r\n                <button mat-raised-button color=\"warn\" (click)=\"delete(task.id)\">Del</button>\r\n                <!-- /ng-container -->\r\n            </td>\r\n        </ng-container> \r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>","import { Component, OnInit,Input } from '@angular/core';\r\nimport{Selection} from '../../models/selection';\r\nimport {SelectionListComponent} from '../selection-list/selection-list.component';\r\nimport {Task} from '../../models/task'\r\nimport { TaskService } from '../../task.service';\r\nimport { Project } from '../../models/project';\r\nimport { ProjectService } from '../../project.service';\r\nimport {LoginService} from '../../login.service'\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\n@Component({\r\n  selector: 'app-selection-form',\r\n  templateUrl: './selection-form.component.html',\r\n  styleUrls: ['./selection-form.component.css'],\r\n  providers: [TaskService]\r\n})\r\nexport class SelectionFormComponent implements OnInit {\r\n  \r\n  @Input()\r\n  list:SelectionListComponent\r\n  \r\n  projectNumber: number;\r\n  timeWindow: number;\r\n  \r\n  projects: Project[];\r\n  filteredProjects: Project[];\r\n  tasks: Task[];\r\n  \r\n  important: Task[];\r\n  \r\n  userID: number;\r\n  user: User;\r\n  \r\n  constructor(private projectService: ProjectService, private taskService:TaskService, /* public userService : UserService */) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.projects;\r\n    this.filteredProjects;\r\n    this.projectNumber;\r\n    this.timeWindow;\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n    //this.userService.findAll().subscribe(users =>{this.user=users.find(user => user.id === this.userID)});\r\n    this.reloadAll();\r\n    this.priority();\r\n  }\r\n  \r\n  reloadAll(){\r\n    this.projectService.findAll().subscribe(projects => {\r\n      this.projects=projects;\r\n      let filter = new Array;\r\n      for (let indexp = 0; indexp < this.projects.length; indexp++){\r\n        for (let indexu =0; indexu < this.projects[indexp].users.length; indexu++){\r\n          if (this.projects[indexp].users[indexu].user.id === this.userID){\r\n            filter.push(this.projects[indexp]);\r\n          }\r\n        }\r\n      }\r\n      this.filteredProjects = filter;\r\n    });\r\n  }\r\n  \r\n  priority(){\r\n    this.taskService.findAll().subscribe(tasks => {\r\n      this.important = tasks.sort((a, b) => (a.deadline > b.deadline) ? 1 : -1);\r\n      this.important = this.important.slice(0,2);\r\n    });\r\n  }\r\n  \r\n  clear(){\r\n    this.list.selectedProjectID = this.projectNumber;\r\n    this.list.selectedTimeWindow = this.timeWindow;\r\n    this.projectNumber = 0;\r\n    this.timeWindow = null;\r\n    this.list.reloadAll();\r\n  }\r\n  \r\n  delete(){\r\n    this.list.selectedProjectID = 0;\r\n    this.list.selectedTimeWindow = 0;\r\n    this.list.reloadAll();\r\n  }\r\n  \r\n}\r\n","<form >\r\n  <mat-form-field>\r\n    <mat-label>Project</mat-label>\r\n    <mat-select mat-select [(value)]=\"this.projectNumber\">\r\n        <mat-option *ngFor=\"let project of filteredProjects\" [(value)]=\"project.id\" >\r\n          {{project.projectName}}\r\n        </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>Time window</mat-label>\r\n    <mat-select [(value)]=\"this.timeWindow\">\r\n      <mat-option value=\"1000\">None</mat-option>\r\n      <mat-option value=\"5\">5 min.</mat-option>\r\n      <mat-option value=\"10\">10 min.</mat-option>\r\n      <mat-option value=\"15\">15 min.</mat-option>\r\n      <mat-option value=\"30\">30 min.</mat-option>\r\n      <mat-option value=\"45\">45 min.</mat-option>\r\n      <mat-option value=\"60\">60 min.</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <button mat-raised-button color=\"primary\" (click)= \"clear()\">Select</button>\r\n  <button mat-raised-button color=\"primary\" (click)= \"delete()\">Clear</button>\r\n</form>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit} from '@angular/core';\r\nimport {Task} from '../../models/task'\r\nimport {TaskService} from '../../task.service';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TaskModalComponent } from '../../task-components/task-modal/task-modal.component';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\nimport { ThemeService } from 'src/app/theme.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-selection-list',\r\n  templateUrl: './selection-list.component.html',\r\n  styleUrls: ['./selection-list.component.css'],\r\n  providers:  [TaskService],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\n\r\nexport class SelectionListComponent implements OnInit {\r\n  userID: number;\r\n  projectIDs : number[];\r\n  tasks: Task[];\r\n  displayedColumns: string[] = ['name', 'project.projectName','duration', 'status', 'actions'];\r\n  newTasks:Task[];\r\n  startedTasks:Task[];\r\n  comingupTasks:Task[];\r\n  selectedTasks: Array<Task> = [];\r\n  columnsToDisplay = ['name','duration', 'deadline', 'status'];\r\n  expandedElement: Task | null;\r\n  selectedProjectID: number;\r\n  selectedTimeWindow: number;\r\n  theme:string;\r\n\r\n  constructor(private taskService: TaskService, public dialog: MatDialog,private themeService: ThemeService, private projectUserService : ProjectUserService) { }\r\n\r\n  ngOnInit() {\r\n    this.reloadAll()\r\n    this.projectIDs;\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n  }\r\n\r\n  reloadAll() {\r\n    this.taskService.findAll().subscribe(tasks => {\r\n      // Stukje code dat filtered en sorteerd voor new\r\n      \r\n      let newfilteredTasks = tasks.filter(task => task.project.id === this.selectedProjectID );\r\n      newfilteredTasks = newfilteredTasks.filter(task => task.duration <= this.selectedTimeWindow);\r\n      newfilteredTasks = newfilteredTasks.filter(task => task.status === \"New\");\r\n      newfilteredTasks.sort((a, b) => (a.duration > b.duration) ? 1 : -1);\r\n      newfilteredTasks.sort((a, b) => (a.deadline > b.deadline) ? 1 : -1);\r\n\r\n      this.newTasks = newfilteredTasks/* .slice(0,4) */\r\n\r\n      // Stukje code dat filtered en sorteerd voor started\r\n      let startedfilteredTasks = tasks.filter(task => task.project.id === this.selectedProjectID );\r\n      startedfilteredTasks = startedfilteredTasks.filter(task => task.duration <= this.selectedTimeWindow);\r\n      startedfilteredTasks = startedfilteredTasks.filter(task => task.status === \"Started\");\r\n      startedfilteredTasks.sort((a, b) => (a.duration > b.duration) ? 1 : -1);\r\n      startedfilteredTasks.sort((a, b) => (a.deadline > b.deadline) ? 1 : -1);\r\n\r\n      this.startedTasks = startedfilteredTasks/* .slice(0,4) */\r\n\r\n    });\r\n  }\r\n\r\n  \r\n  delete(id: number) {\r\n    this.taskService.delete(id).subscribe(() => this.reloadAll());\r\n  }\r\n\r\n  startTask(startedTask: Task){\r\n    startedTask.status=\"Started\";\r\n    this.taskService.patchTask(startedTask.id, startedTask).subscribe(() => this.reloadAll());\r\n\r\n  }\r\n\r\n  closeTask(closedTask: Task){\r\n    closedTask.status=\"Closed\";\r\n    this.taskService.patchTask(closedTask.id, closedTask).subscribe(() => this.reloadAll());\r\n\r\n  }\r\n  \r\n  editTask(task: Task) {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(TaskModalComponent, {\r\n      width: '50%',\r\n      data: {taskEdit : task},\r\n      panelClass: this.theme\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      this.taskService.patchTask(result.id, result).subscribe(() => this.reloadAll());\r\n    })\r\n  }\r\n\r\n}\r\n"," <mat-card id=\"Tabbed lists\">\r\n  <mat-tab-group>  \r\n    <!--Start of the nested table that shows the tasks with status new-->\r\n    <mat-tab label=\"New\">\r\n      <table mat-table [dataSource]=\"newTasks\">\r\n        <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n        <ng-container matColumnDef=\"id\">\r\n          <th mat-header-cell *matHeaderCellDef> ID </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell >{{task.id}} </td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.name}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"project.id\">\r\n          <th mat-header-cell *matHeaderCellDef> Project ID </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell >{{task.project.id}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"project.projectName\">\r\n          <th mat-header-cell *matHeaderCellDef> Project Name </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell > {{task.project.projectName}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"duration\">\r\n          <th mat-header-cell *matHeaderCellDef> Duration </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.duration}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"description\">\r\n          <th mat-header-cell *matHeaderCellDef> Description </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.description}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef> Status </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.status}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>\r\n              <ng-container *ngIf=\"task.status == 'New'\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"startTask(task)\">Start</button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"task.status == 'Started'\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"closeTask(task)\">Close</button>\r\n              </ng-container>\r\n              <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>        \r\n              <button mat-raised-button color=\"warn\" (click)=\"delete(task.id)\">Del</button>\r\n              <!-- /ng-container -->\r\n            </td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-tab>\r\n    <!--Start of the nested table that shows the tasks with status started-->\r\n    <mat-tab label=\"Started\">\r\n      <table mat-table [dataSource]=\"startedTasks\">\r\n        <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.name}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"project.projectName\">\r\n          <th mat-header-cell *matHeaderCellDef> Project Name </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell > {{task.project.projectName}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"duration\">\r\n          <th mat-header-cell *matHeaderCellDef> Duration (min.)</th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.duration}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"description\">\r\n          <th mat-header-cell *matHeaderCellDef> Description </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.description}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef> Status </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>{{task.status}} <!-- /ng-container --></td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n          <ng-container *matCellDef=\"let task\">\r\n            <td mat-cell>\r\n              <ng-container *ngIf=\"task.status == 'New'\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"startTask(task)\">Start</button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"task.status == 'Started'\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"closeTask(task)\">Close</button>\r\n              </ng-container>\r\n              <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>        \r\n              <button mat-raised-button color=\"warn\" (click)=\"delete(task.id)\">Del</button>\r\n              <!-- /ng-container -->\r\n            </td>\r\n          </ng-container> \r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TaskService } from '../../task.service';\r\nimport { TaskListComponent } from '../task-list/task-list.component';\r\nimport { Task } from '../../models/task';\r\nimport {Project} from '../../models/project';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { TaskModalComponent } from '../task-modal/task-modal.component';\r\nimport { ThemeService } from '../../theme.service';\r\n\r\n@Component({\r\n  selector: 'app-task-form',\r\n  templateUrl: './task-form.component.html',\r\n  styleUrls: ['./task-form.component.css'],\r\n  providers: [TaskService]\r\n})\r\nexport class TaskFormComponent implements OnInit {\r\n  \r\n  @Input()\r\n  taskList:TaskListComponent;\r\n  minDate: Date;\r\n  task = new Task();\r\n  theme:string;\r\n  \r\n  constructor(private taskService:TaskService, public dialog: MatDialog, private themeService: ThemeService) {\r\n    const currentDate: Date = new Date; currentDate.getDate();\r\n    this.minDate = currentDate; \r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.task.project = new Project();\r\n  }\r\n  \r\n  public save(){\r\n    this.taskService.save(this.task).subscribe(() => this.taskList.reloadAll());\r\n  }\r\n  \r\n  newTask() {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(TaskModalComponent, {\r\n      width: '50%',\r\n      data:{taskEdit: this.task},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n        this.taskService.save(result).subscribe(() => {\r\n          this.taskList.reloadAll();\r\n          this.clear();\r\n        });\r\n      }\r\n    })\r\n  }\r\n  \r\n  clear(){\r\n    this.task.name = \"\";\r\n    this.task.project = new Project;\r\n    this.task.duration = null; \r\n    this.task.description = \"\";\r\n    this.task.deadline = null;\r\n  }\r\n}\r\n","<button mat-flat-button color=\"primary\" (click)=\"newTask()\" >Add New Task</button> ","import {Component, OnInit, AfterContentInit} from '@angular/core';\r\nimport {Task} from '../../models/task';\r\nimport {TaskService} from '../../task.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { TaskModalComponent } from '../task-modal/task-modal.component';\r\nimport { ThemeService } from '../../theme.service';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\n\r\nexport interface TaskModalData {\r\n  taskEdit: Task;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.css'],\r\n  providers:  [TaskService]\r\n})\r\n\r\n\r\nexport class TaskListComponent implements OnInit, AfterContentInit {\r\n  userID: number;\r\n  projectIDs : number[];\r\n  tasks: Task[];\r\n  theme:string;\r\n  tempTasks:  Array<Task> = [];\r\n  tempTask: Task;\r\n  temp:number;\r\n  duration:number;\r\n  displayedColumns: string[] = ['name', 'project.projectName','duration','description','status', 'actions'];\r\n  \r\n  constructor(private taskService: TaskService, public dialog: MatDialog, private themeService: ThemeService, private projectUserService : ProjectUserService) {\r\n    this.reloadAll();    \r\n    this.duration =0;\r\n    this.temp = 0;\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n    this.projectIDs;\r\n    this.tasks;\r\n    this.tempTasks;\r\n    this.reloadAll();\r\n    \r\n  }\r\n  \r\n  ngAfterContentInit(){\r\n    this.reloadAll();\r\n  }\r\n  \r\n  reloadAll() {\r\n    this.projectUserService.findAll().subscribe(projectUsers => {\r\n      let filterP = new Array;\r\n      for(let i=0; i<projectUsers.length; i++){\r\n        if(projectUsers[i].user.id===this.userID){\r\n          filterP.push(projectUsers[i].project.id);\r\n        }\r\n      }\r\n      this.projectIDs = filterP;\r\n      //filter all tasks to projects connected to the current user\r\n      this.taskService.findAll().subscribe(tasks => {\r\n        this.tasks=tasks;\r\n        let filter = new Array;\r\n        for (let i = 0; i < this.tasks.length; i++){\r\n          if (this.projectIDs.includes(this.tasks[i].project.id)){\r\n            filter.push(this.tasks[i]);\r\n          }\r\n        }\r\n        this.tasks = filter;\r\n        this.durationCalc(this.tasks);\r\n        console.log(\"the total duration of all the tasks= \" + this.duration)\r\n      });\r\n    });\r\n  }\r\n  \r\n  delete(id: number) {\r\n    this.taskService.delete(id).subscribe(() => this.reloadAll());\r\n  }\r\n  \r\n  startTask(startedTask: Task){\r\n    startedTask.status=\"Started\";\r\n    this.taskService.patchTask(startedTask.id, startedTask).subscribe(() => this.reloadAll());\r\n  }\r\n  \r\n  closeTask(closedTask: Task){\r\n    closedTask.status=\"Closed\";\r\n    this.taskService.patchTask(closedTask.id, closedTask).subscribe(() => this.reloadAll());\r\n    \r\n  }\r\n  \r\n  editTask(task: Task) {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(TaskModalComponent, {\r\n      width: '50%',\r\n      data: {taskEdit : task},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n        this.taskService.patchTask(result.id, result).subscribe(() => this.reloadAll());\r\n      }\r\n    })\r\n  }\r\n  \r\n  durationCalc(selectedTasks:Array<Task>){\r\n    this.tempTasks = this.tasks.filter(task => task.status === \"New\");\r\n    this.tempTasks = this.tempTasks.filter(task => task.status === \"Started\");\r\n    selectedTasks.forEach(element => {\r\n      this.temp += element.duration\r\n    });\r\n    \r\n    this.duration = this.temp;\r\n    this.temp =0;\r\n  }\r\n}","<!-- <button (click)=\"selectTasks(userIdProject)\">select</button>\r\n --><table mat-table [dataSource]=\"tasks\">\r\n  <!--Column ordering irrelevant dont forget to add them to displayedColumns-->\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef> Name </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>{{task.name}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"project.projectName\">\r\n    <th mat-header-cell *matHeaderCellDef> Project Name </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell > {{task.project.projectName}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"duration\">\r\n    <th mat-header-cell *matHeaderCellDef> Duration (min.) </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>{{task.duration}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"description\">\r\n    <th mat-header-cell *matHeaderCellDef> Description </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>{{task.description}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"status\">\r\n    <th mat-header-cell *matHeaderCellDef> Status </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>{{task.status}} <!-- /ng-container --></td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n    <ng-container *matCellDef=\"let task\">\r\n      <td mat-cell>\r\n        <ng-container *ngIf=\"task.status == 'New'\">\r\n          <button mat-raised-button color=\"accent\" (click)=\"startTask(task)\">Start</button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"task.status == 'Started'\">\r\n          <button mat-raised-button color=\"accent\" (click)=\"closeTask(task)\">Close</button>\r\n        </ng-container>\r\n        <button mat-raised-button color=\"primary\" (click)=\"editTask(task)\">Edit</button>        \r\n        <button mat-raised-button color=\"warn\" (click)=\"delete(task.id)\">Del</button>\r\n        <!-- /ng-container -->\r\n      </td>\r\n    </ng-container> \r\n  </ng-container>\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n\r\n<br> \r\n<h4>The total duration of all new and started tasks combined is: {{this.duration}} min.</h4>","import { Component, OnInit, Inject, Input} from '@angular/core';\r\nimport { Task } from '../../models/task';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Project } from '../../models/project';\r\nimport { ProjectUserService } from 'src/app/project-user.service';\r\n\r\n\r\nexport interface TaskModalData {\r\n  taskEdit: Task;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-task-modal',\r\n  templateUrl: './task-modal.component.html',\r\n  styleUrls: ['./task-modal.component.css']\r\n})\r\nexport class TaskModalComponent implements OnInit {\r\n  \r\n  projects: Project[];\r\n  @Input()\r\n  taskEdit: Task;\r\n  minDate: Date;\r\n  userID : number;\r\n  \r\n  constructor(public dialogRef: MatDialogRef<TaskModalComponent>,@Inject(MAT_DIALOG_DATA) public data: TaskModalData, private projectUserService: ProjectUserService) {\r\n    const currentDate: Date = new Date; currentDate.getDate();\r\n    this.minDate = currentDate;\r\n  }\r\n  \r\n  ngOnInit(){\r\n    this.userID = parseInt(sessionStorage.getItem('loginId'));\r\n    this.projects;\r\n    this.reloadAll();\r\n  }\r\n  \r\n  reloadAll(){\r\n    this.projectUserService.findAll().subscribe(projectUsers => {\r\n      let filterP = new Array;\r\n      for(let i=0; i<projectUsers.length; i++){\r\n        if(projectUsers[i].user.id===this.userID){\r\n          filterP.push(projectUsers[i].project);\r\n        }\r\n      }\r\n      this.projects = filterP;\r\n    });\r\n  } \r\n}\r\n","<div mat-dialog-content>\r\n    <div>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput required type=\"text\" [(ngModel)]=\"data.taskEdit.name\" name=\"taskName\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Project</mat-label>\r\n            <mat-select required mat-select [(value)]=\"data.taskEdit.project.id\">\r\n                <mat-option *ngFor=\"let project of projects\" [value]=\"project.id\">\r\n                    {{project.projectName}} \r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Duration</mat-label>\r\n            <mat-select mat-select  [(value)]=\"data.taskEdit.duration\" required>\r\n                <mat-option [value]=\"5\">5 min.</mat-option>\r\n                <mat-option [value]=\"10\">10 min.</mat-option>\r\n                <mat-option [value]=\"15\">15 min.</mat-option>\r\n                <mat-option [value]=\"30\">30 min.</mat-option>\r\n                <mat-option [value]=\"45\">45 min.</mat-option>\r\n                <mat-option [value]=\"60\">60 min.</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label for=\"inputprojectdeadline\">Deadline</mat-label>\r\n            <input matInput required [min]=\"minDate\" [matDatepicker]=\"picker\" [(ngModel)]=\"data.taskEdit.deadline\" name=\"deadline\" >\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100%;\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea rows=\"10\" matInput required [(ngModel)]=\"data.taskEdit.description\" name=\"description\"></textarea>\r\n        </mat-form-field>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-flat-button color=\"primary\" mat-dialog-close>Cancel</button>\r\n    <ng-container *ngIf=\"data.taskEdit.name == null\r\n    || data.taskEdit.project.id == null\">\r\n    <button mat-flat-button color=\"primary\" [disabled]=\"true\" >Save</button></ng-container>\r\n    \r\n    <ng-container *ngIf=\"data.taskEdit.name != null\r\n    && data.taskEdit.project.id != null\">\r\n    <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"data.taskEdit\" >Save</button>\r\n</ng-container>\r\n</div>","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Task} from './models/task';\r\nimport {Project} from './models/project';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  findAll(): Observable<Task[]>  {\r\n    return this.http.get<any>('/task')\r\n  }\r\n  \r\n  save(task: Task) {\r\n    return this.http.post('/task', task)\r\n  }\r\n  \r\n  delete(id) {\r\n    return this.http.delete('/task/' + id)\r\n  }\r\n  \r\n  //to edit the listing.\r\n  patchTask(id:number, task:Task){\r\n    return this.http.patch('/task/' + id, task)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  \r\n  _darkTheme = new Subject<boolean>();\r\n  isDarkTheme = this._darkTheme.asObservable();\r\n  theme: string;\r\n  \r\n  setDarkTheme(isDarkTheme: boolean) {\r\n    this._darkTheme.next(isDarkTheme);\r\n    if(isDarkTheme){this.theme=\"dark-theme\"}else{this.theme=\"\"};\r\n  }\r\n\r\n  currentActive(){\r\n    return this.theme\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ThemeService } from '../theme.service';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  \r\n  isDarkTheme: Observable<boolean>;\r\n  isLogin: boolean;\r\n  \r\n  constructor( private themeService: ThemeService, private loginService: LoginService) { }\r\n  \r\n  ngOnInit() {\r\n    this.isDarkTheme = this.themeService.isDarkTheme;\r\n    this.loginService.setLogin();\r\n    this.loginService.getLogin().subscribe(isLogin => this.isLogin = isLogin) \r\n    this.checkLogin()\r\n  }\r\n  \r\n  toggleDarkTheme(checked: boolean) {\r\n    this.themeService.setDarkTheme(checked) ;\r\n    this.isDarkTheme = this.themeService.isDarkTheme;\r\n  }\r\n\r\n  checkLogin(){\r\n    if (parseInt(sessionStorage.getItem('loginId'))>0){\r\n      this.isLogin = true;\r\n    }else\r\n    this.isLogin = false;\r\n  }\r\n  \r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <span>Pie Productivity</span>\r\n    <button routerLink=\"/home\" mat-button aria-label=\"navigate to homepage\">Home</button>\r\n    <button routerLink=\"/select\" mat-button [disabled]=\"!isLogin\"  aria-label=\"navigate to project selector\">Select</button>\r\n    <button routerLink=\"/list\" mat-button [disabled]=\"!isLogin\" aria-label=\"navigate to lists\">Lists</button>\r\n    <span class=\"nav-spacer\"></span>\r\n    <mat-icon >wb_sunny</mat-icon>\r\n    <mat-slide-toggle [checked]=\"!isDarkTheme\" (change)=\"toggleDarkTheme($event.checked)\">  \r\n      <mat-icon >nights_stay</mat-icon>\r\n    </mat-slide-toggle> \r\n    <app-user-login></app-user-login>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport {User} from 'src/app/models/user';\r\nimport {UserService} from 'src/app/user.service';\r\nimport {UserModalComponent } from '../user-modal/user-modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { ThemeService } from 'src/app/theme.service';\r\nimport {LoginService} from 'src/app/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.css']\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n  \r\n  user = new User();\r\n  \r\n  LoginId: number\r\n  theme:string;\r\n  \r\n  logoutId:number = -1;\r\n  \r\n  isLogin:boolean;\r\n  \r\n  constructor(private userService:UserService, public dialog: MatDialog, private themeService: ThemeService, public loginService:LoginService, private router: Router) {}\r\n  \r\n  \r\n  ngOnInit(): void {\r\n    this.LoginId = parseInt(sessionStorage.getItem('loginId'));\r\n    this.logoutId; \r\n    this.loginService.getLogin().subscribe(isLogin => this.isLogin = isLogin)\r\n    if(this.LoginId > 0)\r\n    this.isLogin=true;\r\n    else\r\n    this.isLogin=false;\r\n    console.log(\"in onInit xxxx\" + this.isLogin);\r\n    \r\n  }\r\n  \r\n  //if register button has been pressed\r\n  newUser() {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(UserModalComponent, {\r\n      width: '50%',\r\n      data:{user: this.user, origin: \"register\"},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n        this.userService.save(result).subscribe();\r\n        this.userService.login(result).subscribe(answer=>{\r\n          //this.LoginId =  answer;\r\n          //this.loginService.globalLoginId = this.LoginId; \r\n          this.loginService.globalLoginId = answer; \r\n          \r\n          this.loginService.setLogin();\r\n          sessionStorage.setItem('loginId', answer.toString())\r\n          console.log(\"loginID = \" + this.loginService.globalLoginId);\r\n        });\r\n      }\r\n    })\r\n  }\r\n  \r\n  //if login button has been pressed.\r\n  loginUser() {\r\n    this.theme = this.themeService.currentActive();\r\n    const dialogRef = this.dialog.open(UserModalComponent, {\r\n      width: '50%',\r\n      data:{user: this.user, origin: \"login\"},\r\n      panelClass: this.theme,\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(result=>{\r\n      if(result!= null){\r\n        this.userService.login(result).subscribe(answer=>{\r\n          //this.LoginId =  answer;\r\n          //this.loginService.globalLoginId = this.LoginId;\r\n          \r\n          sessionStorage.setItem('loginId', answer.toString())\r\n          this.LoginId = answer;\r\n          console.log(\"in login xxxx \" + this.isLogin);\r\n          \r\n          if (answer == -1){\r\n            alert(\"Login failed. Incorrect credentials\")\r\n          }\r\n          else{\r\n            this.router.navigate(['select'])\r\n            this.isLogin = true;\r\n            this.loginService.globalLoginId = answer;\r\n            this.loginService.setLogin(); \r\n            console.log(\"loginID = \" + this.loginService.globalLoginId);\r\n          }\r\n          this.send(); \r\n        });\r\n      }\r\n    })\r\n  }\r\n  \r\n  \r\n  logout(){\r\n    sessionStorage.setItem('loginId', this.logoutId.toString())\r\n    this.LoginId = this.logoutId;\r\n    this.loginService.globalLoginId = this.logoutId;\r\n    this.loginService.setLogin(); \r\n    this.isLogin = false;\r\n    console.log(\"in logout xxx \" + this.isLogin);\r\n    \r\n    // this.checkLogin()\r\n    this.router.navigate(['home'])\r\n    //this.ngOnInit()\r\n  }\r\n  \r\n  //function that sends the observable to login service \r\n  send(){\r\n    this.loginService.sendProject(this.loginService.globalLoginId);\r\n  }\r\n  \r\n  \r\n  \r\n}\r\n","<button mat-flat-button color=\"accent\" (click)=\"loginUser()\" *ngIf=\"!isLogin\">Login</button>\r\n<button mat-flat-button color=\"accent\" (click)=\"logout()\" *ngIf=\"isLogin\">Logout</button>\r\n<button mat-flat-button color=\"accent\" (click)=\"newUser()\">Register</button>","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { User } from 'src/app/models/user';\r\nimport { ProjectService } from 'src/app/project.service';\r\nimport { Project } from 'src/app/models/project';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\nexport interface UserModalData {\r\n  passwordCheck: String;\r\n  user: User;\r\n  origin: String;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-modal',\r\n  templateUrl: './user-modal.component.html',\r\n  styleUrls: ['./user-modal.component.css']\r\n})\r\nexport class UserModalComponent implements OnInit {\r\n  \r\n  @Input()\r\n  user: User;\r\n\r\n  users:User[];\r\n  \r\n  //projects: Project[];\r\n\r\n  validationMessage:string;\r\n  temp:boolean;\r\n  \r\n  constructor(public dialogRef: MatDialogRef<UserModalComponent>,@Inject(MAT_DIALOG_DATA) public data: UserModalData, private projectService: ProjectService, private userService: UserService) {\r\n  this.validationMessage = \"\"\r\n  }\r\n  \r\n  ngOnInit(){\r\n    this.reloadAll();\r\n    this.validationMessage;\r\n    this.temp;\r\n  }\r\n\r\n    reloadAll(){\r\n      this.userService.findAll().subscribe(users=> {\r\n        this.users = users\r\n      });\r\n    //this.projectService.findAll().subscribe(projects => this.projects = projects);\r\n  }\r\n\r\n  duplicateCheck(name){\r\n\r\n    for (let i = 0; i < this.users.length; i++){\r\n      if(this.users[i].username === name){\r\n        \r\n        return true;\r\n      } break\r\n    }\r\n  }\r\n\r\n  validateRegistration(){\r\n\r\n    if (this.data.user.username == undefined)\r\n    this.validationMessage = \"Name cannot be empty\"\r\n\r\n    else if (this.data.user.password == undefined)\r\n    this.validationMessage = \"Password cannot be empty\"\r\n\r\n    else if (this.data.passwordCheck != this.data.user.password)\r\n    this.validationMessage = \"Second password not identical to first\"\r\n\r\n    else if(this.duplicateCheck(this.data.user.username) == true)\r\n    this.validationMessage = \"This username is already taken\"\r\n\r\n    //else if (this.data.user.id == undefined)\r\n    //this.validationMessage = \"Project field cannot be empty\"\r\n\r\n    alert(this.validationMessage)\r\n  }\r\n\r\n  validateLogin(){\r\n    if (this.data.user.username == undefined)\r\n    this.validationMessage = \"Name cannot be empty\"\r\n    else if (this.data.user.password == undefined)\r\n    this.validationMessage = \"Password cannot be empty\"\r\n\r\n    alert(this.validationMessage)\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n    <div>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"data.user.username\" name=\"username\" required>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Password</mat-label>\r\n            <input matInput type=\"password\" [(ngModel)]=\"data.user.password\" name=\"password\" required>\r\n        </mat-form-field>\r\n        <div *ngIf=\"data.origin=='register'\">\r\n            <mat-form-field appearance=\"standard\" >\r\n                <mat-label>Repeat password</mat-label>\r\n                <input matInput type=\"password\" [(ngModel)]=\"data.passwordCheck\" name=\"password\" required>\r\n            </mat-form-field>\r\n            <p class=\"mat-caption\" *ngIf=\"data.user.password != data.passwordCheck\">The entered passwords do not match</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-flat-button color=\"primary\" mat-dialog-close>Cancel</button>\r\n    <div *ngIf=\"data.origin=='login'\">\r\n        <ng-container *ngIf=\"data.user.username != null\r\n        && data.user.password != null\">\r\n        <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"data.user\">Login</button>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"data.user.username == null\r\n    || data.user.password == null\">\r\n        <!-- <button mat-button color=\"primary\" disabled>Save</button> -->\r\n        <button mat-flat-button color=\"primary\" (click)=\"validateLogin()\">Login</button>\r\n    </ng-container>\r\n    </div>\r\n\r\n    <div *ngIf=\"data.origin=='register'\">\r\n        <ng-container *ngIf=\"data.user.username != null\r\n    && data.user.password != null\r\n    && data.passwordCheck != null\r\n    && data.passwordCheck == data.user.password\">\r\n            <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"data.user\" >Register</button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"data.user.username == null\r\n    || data.user.password == null\r\n    || data.passwordCheck == null\r\n    || data.passwordCheck != data.user.password\">\r\n            <button mat-flat-button color=\"primary\" (click)=\"validateRegistration()\">Register</button>\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  userId:number;\r\n  \r\n  login(user: User){\r\n    return this.http.get<number>('/user/login?user=' + user.username + '&password=' + user.password)\r\n  }\r\n  \r\n  constructor(private http: HttpClient) { }\r\n  \r\n  findAll(): Observable<User[]>  {\r\n    return this.http.get<any>('/user')\r\n  }\r\n  \r\n  save(user: User) {\r\n    return this.http.post('/user', user)\r\n  }\r\n  \r\n  delete(id) {\r\n    return this.http.delete('/user/' + id)\r\n  }\r\n  \r\n  //to edit the listing.\r\n  patchUser(id:number, user:User){\r\n    return this.http.patch('/user/' + id, user)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}